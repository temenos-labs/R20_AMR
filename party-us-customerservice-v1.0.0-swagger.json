{
  "swagger" : "2.0",
  "info" : {
    "description" : "The Customer service APIs allows modification of Customer, with specific APIs for Corporate or Individual Customers, update and information retrieval APIs for specific information like Address, secondary address, credit score, KYC, relation, beneficial ownership information for corporates, etc,.",
    "version" : "v1.0.0",
    "title" : "Updates retrieves Customer and address information"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "paths" : {
    "/party/us/customers" : {
      "get" : {
        "summary" : "API to search and retreive Customer information based on customerName, date of birth, date of incorporation, SSN or TIN, and Mobile number",
        "description" : "Search Customer",
        "operationId" : "searchUsCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerName",
          "in" : "query",
          "description" : "Name of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "taxId",
          "in" : "query",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirth",
          "in" : "query",
          "description" : "The date of birth of an individual customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "birthIncorpDate",
          "in" : "query",
          "description" : "Date on which the entity is incorporated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "mobileNumber",
          "in" : "query",
          "description" : "Mobile number of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/corporates" : {
      "get" : {
        "summary" : "Retrieves Corporate Customer information. Unless there is a specific set of information to be updated for which a separate APIs exists, this generic API can be used where all available information can be retreived.",
        "description" : "Retrieve Corporate Customer information",
        "operationId" : "getUsCorporateCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCorporateCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCorporateCustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates Corporate Customer information. Unless there is a specific set of information to be updated for which a separate APIs exists, this generic API can be used where all available information can be updated..",
        "description" : "Update Corporate Customer information",
        "operationId" : "updateUsCorporateCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsCorporateCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCorporateCustomer Response",
            "schema" : {
              "$ref" : "#/definitions/UsCorporateCustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/individuals" : {
      "get" : {
        "summary" : "Retrieves Individual Customer information. Unless there is a specific set of information to be updated for which a separate APIs exists, this generic API can be used where all available information for an individual Customer can be  retreived.",
        "description" : "Retrieve Individual Customer information",
        "operationId" : "getUsIndividualCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsIndividualCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/UsIndividualCustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates Individual Customer information. Unless there is a specific set of information to be updated for which a separate APIs exists, this generic API can be used where all information for an individual Customer can be updated.",
        "description" : "Update Individual Customer information",
        "operationId" : "updateUsIndividualCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsIndividualCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsIndividualCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/UsIndividualCustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/contactDetails" : {
      "get" : {
        "summary" : "Retrieves all available mail addresses for a Customer along with information on the purpose of the address(Primary, office, etc,.), internal address reference. ",
        "description" : "Retrieve Customer mailing addresses",
        "operationId" : "getUsCustomerAddresslist",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerAddresslistResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerAddresslistResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/scores" : {
      "get" : {
        "summary" : "Retrieves the credit score information available for a customer. If a credit agency is provided, credit related to that agency alone is provided.",
        "description" : "Retrieve customer credit scores",
        "operationId" : "getUsCustomerCreditscore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agencyId",
          "in" : "query",
          "description" : "Name of the agency that provided the credit score. Allowed values can be retrieved through getEbLookups for virtualTableName CREDIT.BUREAU",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerCreditscoreResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerCreditscoreResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/agencies/{agencyId}/scores" : {
      "get" : {
        "summary" : "Retrieves the credit score information available for a customer related to that reporting agency provided.",
        "description" : "Retrieve customer credit score by agency",
        "operationId" : "getUsCustomerCreditscoreByAgency",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agencyId",
          "in" : "path",
          "description" : "Name of the agency that provided the credit score. Allowed values can be retrieved through getEbLookups for virtualTableName CREDIT.BUREAU",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerCreditscoreByAgencyResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerCreditscoreResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/documents" : {
      "get" : {
        "summary" : "Search documents available for customer identification. Provides information on dDocument reference, status, validity, issuer details, and version information.",
        "description" : "Search customer documents",
        "operationId" : "searchUsDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsDocumentsResponse",
            "schema" : {
              "$ref" : "#/definitions/UsDocumentsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/kycs" : {
      "get" : {
        "summary" : "Retrives KYC and Tax information for a customer",
        "description" : "Retrieve customer KYC and tax information",
        "operationId" : "getUsCustomerKycandTax",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerKycandTaxResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerKycandTaxResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Allows update to KYC and Tax information for a customer",
        "description" : "Update customer KYC and tax information",
        "operationId" : "updateUsCustomerKycandTax",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsCustomerKycandTax"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerKycandTaxResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerKycandTaxResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/primaryAddresses" : {
      "get" : {
        "summary" : "Retrieve Customer Primary Address",
        "description" : "Retrieve Customer Primary Address",
        "operationId" : "getUsCustomerPrimaryAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerPrimaryAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerPrimaryAddressResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Customer Primary Address",
        "description" : "Update Customer Primary Address",
        "operationId" : "updateUsCustomerPrimaryAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsCustomerPrimaryAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerPrimaryAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerPrimaryAddressResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/relations" : {
      "put" : {
        "summary" : "Update Relationship information for Individual Customer or update Beneficial ownership details for a Corporate Customer",
        "description" : "Update Customer Relation",
        "operationId" : "updateUsCustomerRelation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsCustomerRelation"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerRelationResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerRelationResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/secondaryAddresses/{addressReference}" : {
      "put" : {
        "summary" : "Update existing addressinformation for the customer.",
        "description" : "Update secondary Address",
        "operationId" : "updateUsCustomerSecondaryAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "addressReference",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsCustomerSecondaryAddress"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerSecondaryAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerSecondaryAddressResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/{customerId}/secondaryAddresses" : {
      "post" : {
        "summary" : "Add new customer address information",
        "description" : "Create secondary Address",
        "operationId" : "createUsCustomerSecondaryAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsCustomerSecondaryAddress1"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCustomerSecondaryAddressResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCustomerSecondaryAddressResponse1"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/corporates" : {
      "post" : {
        "summary" : "Allows creation of a corporate customer",
        "description" : "create Corporate Customer",
        "operationId" : "createUsCorporateCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsCorporateCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsCorporateCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/UsCorporateCustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customers/individuals" : {
      "post" : {
        "summary" : "Allows creation of an Individual customer",
        "description" : "create Individual Customer",
        "operationId" : "createUsIndividualCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UsIndividualCustomer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "UsIndividualCustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/UsIndividualCustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/us/customer/{customerId}/addressPreferences" : {
      "get" : {
        "summary" : "Retrieves alternate address preferences set  customer",
        "description" : "Alternate address details",
        "operationId" : "getAddressPreferences",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AddressPreferencesResponse",
            "schema" : {
              "$ref" : "#/definitions/AddressPreferencesResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Allows capturing alternate address for a customer to be used for mails during specific periods each year",
        "description" : "Create alternate address ",
        "operationId" : "createAddressPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddressPreference"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AddressPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/AddressPreferencesResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Updates alternate address information for a customer",
        "description" : "Update alternate address",
        "operationId" : "updateAddressPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddressPreference"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AddressPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/AddressPreferencesResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "UsCustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerResponseBody"
        }
      },
      "description" : "UsCustomerResponse"
    },
    "UsCustomerResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "customerNames" : {
            "type" : "array",
            "description" : "Name of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "array",
                  "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "givenName" : {
                  "type" : "array",
                  "description" : "Customer's given name",
                  "items" : {
                    "type" : "string"
                  }
                },
                "middleName" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "lastName" : {
                  "type" : "array",
                  "description" : "The last name of an individual customer",
                  "items" : {
                    "type" : "string"
                  }
                },
                "customerName" : {
                  "type" : "array",
                  "description" : "Name of the customer",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "nameSuffix" : {
            "type" : "array",
            "description" : "Post-nominal letters that indicate that the individual holds a position, educational degree, accreditation, office, or honor.Allowed values can be retrieved through getEbLookups for virtualTableName USREGS.CUS.SUFFIX",
            "items" : {
              "type" : "object",
              "properties" : {
                "nameSuffix" : {
                  "type" : "array",
                  "description" : "Post-nominal letters that indicate that the individual holds a position, educational degree, accreditation, office, or honor.Allowed values can be retrieved through getEbLookups for virtualTableName USREGS.CUS.SUFFIX",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "customerDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "maritalstatus" : {
                  "type" : "array",
                  "description" : "Marital status of the customer",
                  "items" : {
                    "type" : "string"
                  }
                },
                "gender" : {
                  "type" : "array",
                  "description" : "Gender of the Individual Customer",
                  "items" : {
                    "type" : "string"
                  }
                },
                "nationalityId" : {
                  "type" : "array",
                  "description" : "The identifier of the nationality of a customer",
                  "items" : {
                    "type" : "string"
                  }
                },
                "country" : {
                  "type" : "array",
                  "description" : "Identifies the country of the customer.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "dateOfBirth" : {
                  "type" : "array",
                  "description" : "The date of birth of an individual customer",
                  "items" : {
                    "type" : "string"
                  }
                },
                "birthIncorpDate" : {
                  "type" : "array",
                  "description" : "Date on which the entity is incorporated",
                  "items" : {
                    "type" : "string"
                  }
                },
                "branch" : {
                  "type" : "array",
                  "description" : "The branch information relevant to this BIC code.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "customerContact" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "mobileNumber" : {
                  "type" : "array",
                  "description" : "Mobile number of the customer",
                  "items" : {
                    "type" : "string"
                  }
                },
                "email" : {
                  "type" : "array",
                  "description" : "Email Identifier of the Customer",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "customerClassification" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "sectorId" : {
                  "type" : "array",
                  "description" : "An institution-defined identifier of the type of customer",
                  "items" : {
                    "type" : "string"
                  }
                },
                "target" : {
                  "type" : "array",
                  "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
                  "items" : {
                    "type" : "string"
                  }
                },
                "naicsCode" : {
                  "type" : "array",
                  "description" : "NAICS Code linked to the occupation or type of business of the Customer",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "address" : {
            "type" : "array",
            "description" : "Communication Address of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "addressLine1" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "addressLine2" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "city" : {
                  "type" : "array",
                  "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "countyId" : {
                  "type" : "array",
                  "description" : "County associated with the address. ",
                  "items" : {
                    "type" : "string"
                  }
                },
                "stateId" : {
                  "type" : "array",
                  "description" : "Represents the US State to which the address belongs to.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "zipCode" : {
                  "type" : "array",
                  "description" : "Zip code",
                  "items" : {
                    "type" : "number"
                  }
                },
                "zipPlusFour" : {
                  "type" : "array",
                  "description" : "Zip plus 4",
                  "items" : {
                    "type" : "number"
                  }
                },
                "addressStatus" : {
                  "type" : "array",
                  "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the record"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "UsCorporateCustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCorporateCustomerResponseBody"
        }
      },
      "description" : "UsCorporateCustomerResponse"
    },
    "UsCorporateCustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "TaxIdentificationNumber" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxId" : {
                "type" : "string",
                "description" : "Holds the Customer's TAX/SSN Id.",
                "minLength" : 0,
                "maxLength" : 18
              }
            }
          }
        },
        "idDocument" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification type" ]
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies the Legal Document name" ]
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification of the Customer" ]
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies legal issuing authority" ]
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "relationship" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 25
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "role" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "jointRelationRoleId" : {
                      "type" : "string",
                      "description" : "Role of joint customer with the main customer",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        },
        "PreviousIdentification" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "previousName" : {
                "type" : "string",
                "description" : "Customers former name",
                "minLength" : 0,
                "maxLength" : 25
              },
              "nameChangeDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Name change date"
              },
              "changeReason" : {
                "type" : "string",
                "description" : "Specifies the reason (if any) for any status change",
                "minLength" : 0,
                "maxLength" : 25
              }
            }
          }
        },
        "communication" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 20
              }
            }
          }
        },
        "communicationDevice" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationDevice" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "HOME PHONE", "WORK PHONE", "MOBILE PHONE", "EMAIL", "FAX" ]
              },
              "deviceDetails" : {
                "type" : "string",
                "description" : "Communication or contact information. Can be phone or fax number or email id",
                "minLength" : 0,
                "maxLength" : 18
              },
              "devicePrivacy" : {
                "type" : "string",
                "description" : "Indicates if the communication device listed can be shared. Listed indicates that the contact information can be shared. Unlisted indicates that the information cannot be made public.",
                "minLength" : 0,
                "maxLength" : 20,
                "enum" : [ "LISTED", "UNLISTED" ]
              }
            }
          }
        },
        "riskClass" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "riskLevel" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 21
              }
            }
          }
        },
        "overrideReason" : {
          "type" : "array",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "items" : {
            "type" : "object",
            "properties" : {
              "overrideReason" : {
                "type" : "string",
                "description" : "Reason for changing the customer's risk class from the calculated risk class.",
                "minLength" : 0,
                "maxLength" : 21
              }
            }
          }
        },
        "Names" : {
          "type" : "array",
          "description" : "Short title for the Account to be created",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "Defaulted if Given or family name is mentioned" ]
              },
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "CrProfileType" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "profileType" : {
                "type" : "string",
                "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              },
              "profile" : {
                "type" : "string",
                "description" : "Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "OtherOfficer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherOfficerId" : {
                "type" : "string",
                "description" : "Other officers managing the Customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "table - dept account officer" ]
              }
            }
          }
        },
        "override" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "inputter" : {
          "type" : "array",
          "description" : "The user identifier who input the transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "inputter" : {
                "type" : "string",
                "description" : "The user identifier who input the transaction",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "dateTime" : {
          "type" : "array",
          "description" : "Contains the date and time separated by '-'",
          "items" : {
            "type" : "object",
            "properties" : {
              "dateTime" : {
                "type" : "string",
                "description" : "Contains the date and time separated by '-'",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "customerName" : {
          "type" : "string",
          "description" : "Name of the customer",
          "minLength" : 0,
          "maxLength" : 18,
          "enum" : [ "Defaulted if Given or family name is mentioned" ]
        },
        "customerNameAdditional" : {
          "type" : "string",
          "description" : "Continuation/Extension to the Customer Name.",
          "minLength" : 0,
          "maxLength" : 22,
          "enum" : [ "Defaulted if Given or family name is mentioned" ]
        },
        "shortName" : {
          "type" : "string",
          "description" : "Contains the name of the account, basically the short title of the account.",
          "minLength" : 0,
          "maxLength" : 9,
          "enum" : [ "Short name of the customer" ]
        },
        "birthIncorpDate" : {
          "type" : "string",
          "description" : "Date on which the entity is incorporated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "taxType" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 18
        },
        "customerRating" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35
        },
        "appliedOrCertified" : {
          "type" : "string",
          "description" : "Indicates whether the TIN or SSN is certified, applied or not certified",
          "minLength" : 0,
          "maxLength" : 18,
          "enum" : [ "Applied", "Certified", "Not Certified", "Pending Validation" ]
        },
        "accountOfficerId" : {
          "type" : "number",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "naicsCode" : {
          "type" : "string",
          "description" : "NAICS Code linked to the occupation or type of business of the Customer",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "@ref:reference-us-industry-service-v1.0.0" ]
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Y", " Null" ]
        },
        "addressLine1" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 35,
          "enum" : [ "Specifies the first line of Customer's address." ]
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the second line of Customer's address." ]
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 35
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 35
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 1,
          "maxLength" : 35
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxCertificationType" : {
          "type" : "string",
          "description" : "Taxpayer certification type code for W8 and W9 customer. Allowed values can be retrieved through getEbLookups for virtualTableName TAX.CERT.TYPE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "foreignTin" : {
          "type" : "string",
          "description" : "Foreign tax identification Number",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Foreign Tax ID Number" ]
        },
        "taxCertificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Date"
        },
        "reasonForMissingFtin" : {
          "type" : "string",
          "description" : "Reason for non-availability of foreign tax identification number information. Allowed values can be retrieved through getEbLookups for virtualTableName FTIN.MIS.REASON",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxCerticationExpiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Expiry date"
        },
        "fTINInformation" : {
          "type" : "string",
          "description" : "Additional information about Foreign tax identification number.  ",
          "minLength" : 0,
          "maxLength" : 45
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Global Intermediary id number" ]
        },
        "taxTreatyBenefits" : {
          "type" : "string",
          "description" : "A treaty between the United States and a foreign country that may provide foreign taxpayer an exemption from, or a reduced rate, of withholding for certain items of income.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxTreatyLimitationType" : {
          "type" : "string",
          "description" : "Captures any limitation of the tax treaty benefits. Allowed values can be retrieved through getEbLookups for virtualTableName TX.TREATY.LIM.TYPE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholding" : {
          "type" : "string",
          "description" : "Indicates if Backup with holding tax will be applied or not for the customer. Updated by system based on tax information provided by the customer. Y indicates that bank will withold tax from the customer on interest payments or other non-taxed earnings. N indicates that the Financial institution will not withhold tax.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxTreatyCountry" : {
          "type" : "string",
          "description" : "Indicates the tax treaty country if the customer nationality belongs to one of tax treaty countries with US",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "@ref:reference-countries-service-v1.0.0" ]
        },
        "taxWithholdingApplied" : {
          "type" : "string",
          "description" : "Capture the type of witholding taxes to be applied for the customer. Allowed values can be retrieved through getEbLookups for virtualTableName WHT.APPLIED",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxEntityType" : {
          "type" : "string",
          "description" : "Capture the internal revenue code (Chapter 3) for withholding tax payers(Non-residents and foreign corporations). Allowed values can be retrieved through getEbLookups for virtualTableName TX.ENT.TYPE.CODE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholdingReason" : {
          "type" : "string",
          "description" : "Describes the reason tax was withheld",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaStatusCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCode" : {
          "type" : "string",
          "description" : "Tax classification code of customer for W9 form. Allowed values can be retrieved through getEbLookups for virtualTableName W9.TAX.CLASS.CODE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9Status" : {
          "type" : "string",
          "description" : "Status of Tax certification",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCodeOther" : {
          "type" : "string",
          "description" : "Reason for mentioning tax classification code is mentioned as Other",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9StatusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date change Tax status changes from W8 to W9"
        },
        "w9PayeeExcempCode" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax. Allowed values can be retrieved through getEbLookups for virtualTableName W9.PAYE.EXM.CDE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaExcemptionType" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax reporting.  Allowed values can be retrieved through getEbLookups for virtualTableName W9.EXEM.FATCA",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w9ReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next tax status validation date"
        },
        "ownershipRuleId" : {
          "type" : "string",
          "description" : "Capture the rule id that defines the Beneficial ownership information required for the Customer. The rule will be defined in the system based on the customer type and determines which of the beneficiary rule information like ownership, control person and certifier details are mandatory for a corporate customer type or group.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-benOwnerTypes-service-v1.0.0" ]
        },
        "noOwnerGt25Percent" : {
          "type" : "string",
          "description" : "Flag to indicate if any related Customer owns more than 25,. If set to Y, it indicates that atleast one of beneficiary owns more than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "otherOwnersLt25PercentFlag" : {
          "type" : "string",
          "description" : "Flag to indicate if all owners own less than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "certifierName" : {
          "type" : "string",
          "description" : "Name of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 25
        },
        "certifierTitle" : {
          "type" : "string",
          "description" : "Title of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "additionalTitle" : {
          "type" : "string",
          "description" : "Additional Title information of the customer or certifier",
          "minLength" : 0,
          "maxLength" : 18
        },
        "certificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Corporate customers should declare the ownership information among its partners and it has to be verified by a certifier. Holds information on the date when the Ownership information was certified  by an authorised certifier."
        },
        "privacyNoticeFrequency" : {
          "type" : "string",
          "description" : "Financial institutions has to share their privacy policies and record the customers choice in opting in or out in sharing personal information with their marketing partners and affliates. The frequency date records the date when next annual privacy notice has to be sent to the customer. ",
          "minLength" : 0,
          "maxLength" : 39
        },
        "communicationMode" : {
          "type" : "string",
          "description" : "The communication method that will be followed by the financial institution to share the privacy policy, the information that will be shared etc., to the customer",
          "minLength" : 0,
          "maxLength" : 39
        },
        "privacyStatus" : {
          "type" : "string",
          "description" : "Indicates if the customer has choosen to Opt-in or Opt-out in sharing personal information.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "OPT-IN", " OPT-OUT" ]
        },
        "statusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the effective date of change of Fatca status"
        },
        "ctrExempt" : {
          "type" : "string",
          "description" : "Indicates if customer is exempt from CTR(Currency transaction reporting) or not. If set to YES, CTR report will not be generated for the customer when the cumulative transactions for the day was more than 10,000 dollars.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO", " Blank" ]
        },
        "ctrExemptReason" : {
          "type" : "string",
          "description" : "Holds the reason for marking the customer as CTR exempt.  Allowed values can be retrieved through getEbLookups for virtualTableName EXEMPT.REASON",
          "minLength" : 0,
          "maxLength" : 39
        },
        "escheat" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer is in escheat status. When set to Y, escheat process will be triggered by system during close of business. Also updated as Y by system based on definition for automatic escheat process.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO" ]
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 39
        },
        "regGGCertification" : {
          "type" : "string",
          "description" : "All commercial or corporate customers should certify that they do not engage in Internet gambling. If they do engage in internet gamling, it should through lawful means. Capture if certification related to customer is not involved in internet  gambling or not and if involved in lawful internet gambling has it been verified and certified.",
          "minLength" : 0,
          "maxLength" : 39
        },
        "regGGCertficationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when customers Regulation GG certification status was updated"
        },
        "affiliateMarketingStatus" : {
          "type" : "string",
          "description" : "Captures the customers decision to opt-in or opt-out of sharing maketing information to the bank affiliates",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO", " Blank" ]
        },
        "affiliateMarketingStatusDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer gave the decision for sharing maketing information to the bank affiliates."
        },
        "affiliateMarketingExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of expiry of affiliate marketing concurrence provide by Customer "
        },
        "otherNationalityId" : {
          "type" : "string",
          "description" : "Other Nationality of the Customer",
          "minLength" : 0,
          "maxLength" : 25
        },
        "spokenLanguage" : {
          "type" : "string",
          "description" : "Customers native language or the language that can be used for communication",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:references-languages-service.service.v1.0.0" ]
        },
        "isMobileBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", "NULL" ]
        },
        "isInternetBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the internet banking service or not.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "YES", "NULL" ]
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " SENT", " YES" ]
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " POSITIVE", " NEGATIVE", " RESULT.AWAITED" ]
        },
        "amlLastResultDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The last date when Anti Money Laundering result is performed and updated"
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 21
        },
        "isKycComplete" : {
          "type" : "string",
          "description" : "Whether information related to the customer has been collected and verified",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "YES", " NULL" ]
        },
        "mnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Specifies an easy means of referencing Customer" ]
        },
        "languageId" : {
          "type" : "string",
          "description" : "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "target" : {
          "type" : "string",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minLength" : 0,
          "maxLength" : 27
        },
        "customerStatus" : {
          "type" : "string",
          "description" : "The internal bank status of a customer",
          "minLength" : 0,
          "maxLength" : 27
        },
        "prospectId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "ACTIVE", " PROSPECT" ]
        },
        "branch" : {
          "type" : "string",
          "description" : "The branch information relevant to this BIC code.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Branch Name" ]
        },
        "customerSince" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date Since Customer is held in the system"
        },
        "dateOfDeath" : {
          "type" : "string",
          "format" : "date",
          "description" : "The death date of customer."
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 19
        },
        "currNo" : {
          "type" : "number",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minimum" : 0,
          "maximum" : 19
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override"
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message"
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override"
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message"
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "UsCorporateCustomer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCorporateCustomerBody"
        }
      },
      "description" : "UsCorporateCustomer"
    },
    "UsCorporateCustomerBody" : {
      "type" : "object",
      "properties" : {
        "TaxIdentificationNumber" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxId" : {
                "type" : "string",
                "description" : "Holds the Customer's TAX/SSN Id.",
                "minLength" : 0,
                "maxLength" : 18
              }
            }
          }
        },
        "idDocument" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification type" ]
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies the Legal Document name" ]
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification of the Customer" ]
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies legal issuing authority" ]
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "relationship" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 25
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "role" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "jointRelationRoleId" : {
                      "type" : "string",
                      "description" : "Role of joint customer with the main customer",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        },
        "PreviousIdentification" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "previousName" : {
                "type" : "string",
                "description" : "Customers former name",
                "minLength" : 0,
                "maxLength" : 25
              },
              "nameChangeDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Name change date"
              },
              "changeReason" : {
                "type" : "string",
                "description" : "Specifies the reason (if any) for any status change",
                "minLength" : 0,
                "maxLength" : 25
              }
            }
          }
        },
        "communication" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 20
              }
            }
          }
        },
        "communicationDevice" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationDevice" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "HOME PHONE", "WORK PHONE", "MOBILE PHONE", "EMAIL", "FAX" ]
              },
              "deviceDetails" : {
                "type" : "string",
                "description" : "Communication or contact information. Can be phone or fax number or email id",
                "minLength" : 0,
                "maxLength" : 18
              },
              "devicePrivacy" : {
                "type" : "string",
                "description" : "Indicates if the communication device listed can be shared. Listed indicates that the contact information can be shared. Unlisted indicates that the information cannot be made public.",
                "minLength" : 0,
                "maxLength" : 20,
                "enum" : [ "LISTED", "UNLISTED" ]
              }
            }
          }
        },
        "riskClass" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "riskLevel" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 21
              }
            }
          }
        },
        "overrideReason" : {
          "type" : "array",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "items" : {
            "type" : "object",
            "properties" : {
              "overrideReason" : {
                "type" : "string",
                "description" : "Reason for changing the customer's risk class from the calculated risk class.",
                "minLength" : 0,
                "maxLength" : 21
              }
            }
          }
        },
        "Names" : {
          "type" : "array",
          "description" : "Short title for the Account to be created",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "Defaulted if Given or family name is mentioned" ]
              },
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "CrProfileType" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "profileType" : {
                "type" : "string",
                "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              },
              "profile" : {
                "type" : "string",
                "description" : "Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "OtherOfficer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherOfficerId" : {
                "type" : "string",
                "description" : "Other officers managing the Customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "table - dept account officer" ]
              }
            }
          }
        },
        "override" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "inputter" : {
          "type" : "array",
          "description" : "The user identifier who input the transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "inputter" : {
                "type" : "string",
                "description" : "The user identifier who input the transaction",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "dateTime" : {
          "type" : "array",
          "description" : "Contains the date and time separated by '-'",
          "items" : {
            "type" : "object",
            "properties" : {
              "dateTime" : {
                "type" : "string",
                "description" : "Contains the date and time separated by '-'",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "customerName" : {
          "type" : "string",
          "description" : "Name of the customer",
          "minLength" : 0,
          "maxLength" : 18,
          "enum" : [ "Defaulted if Given or family name is mentioned" ]
        },
        "customerNameAdditional" : {
          "type" : "string",
          "description" : "Continuation/Extension to the Customer Name.",
          "minLength" : 0,
          "maxLength" : 22,
          "enum" : [ "Defaulted if Given or family name is mentioned" ]
        },
        "shortName" : {
          "type" : "string",
          "description" : "Contains the name of the account, basically the short title of the account.",
          "minLength" : 0,
          "maxLength" : 9,
          "enum" : [ "Short name of the customer" ]
        },
        "birthIncorpDate" : {
          "type" : "string",
          "description" : "Date on which the entity is incorporated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "taxType" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 18
        },
        "customerRating" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35
        },
        "appliedOrCertified" : {
          "type" : "string",
          "description" : "Indicates whether the TIN or SSN is certified, applied or not certified",
          "minLength" : 0,
          "maxLength" : 18,
          "enum" : [ "Applied", "Certified", "Not Certified", "Pending Validation" ]
        },
        "accountOfficerId" : {
          "type" : "number",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "naicsCode" : {
          "type" : "string",
          "description" : "NAICS Code linked to the occupation or type of business of the Customer",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "@ref:reference-us-industry-service-v1.0.0" ]
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Y", " Null" ]
        },
        "addressLine1" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 35,
          "enum" : [ "Specifies the first line of Customer's address." ]
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the second line of Customer's address." ]
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 35
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 35
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 1,
          "maxLength" : 35
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxCertificationType" : {
          "type" : "string",
          "description" : "Taxpayer certification type code for W8 and W9 customer. Allowed values can be retrieved through getEbLookups for virtualTableName TAX.CERT.TYPE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "foreignTin" : {
          "type" : "string",
          "description" : "Foreign tax identification Number",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Foreign Tax ID Number" ]
        },
        "taxCertificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Date"
        },
        "reasonForMissingFtin" : {
          "type" : "string",
          "description" : "Reason for non-availability of foreign tax identification number information. Allowed values can be retrieved through getEbLookups for virtualTableName FTIN.MIS.REASON",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxCerticationExpiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Expiry date"
        },
        "fTINInformation" : {
          "type" : "string",
          "description" : "Additional information about Foreign tax identification number.  ",
          "minLength" : 0,
          "maxLength" : 45
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Global Intermediary id number" ]
        },
        "taxTreatyBenefits" : {
          "type" : "string",
          "description" : "A treaty between the United States and a foreign country that may provide foreign taxpayer an exemption from, or a reduced rate, of withholding for certain items of income.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxTreatyLimitationType" : {
          "type" : "string",
          "description" : "Captures any limitation of the tax treaty benefits. Allowed values can be retrieved through getEbLookups for virtualTableName TX.TREATY.LIM.TYPE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholding" : {
          "type" : "string",
          "description" : "Indicates if Backup with holding tax will be applied or not for the customer. Updated by system based on tax information provided by the customer. Y indicates that bank will withold tax from the customer on interest payments or other non-taxed earnings. N indicates that the Financial institution will not withhold tax.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxTreatyCountry" : {
          "type" : "string",
          "description" : "Indicates the tax treaty country if the customer nationality belongs to one of tax treaty countries with US",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "@ref:reference-countries-service-v1.0.0" ]
        },
        "taxWithholdingApplied" : {
          "type" : "string",
          "description" : "Capture the type of witholding taxes to be applied for the customer. Allowed values can be retrieved through getEbLookups for virtualTableName WHT.APPLIED",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxEntityType" : {
          "type" : "string",
          "description" : "Capture the internal revenue code (Chapter 3) for withholding tax payers(Non-residents and foreign corporations). Allowed values can be retrieved through getEbLookups for virtualTableName TX.ENT.TYPE.CODE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholdingReason" : {
          "type" : "string",
          "description" : "Describes the reason tax was withheld",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaStatusCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCode" : {
          "type" : "string",
          "description" : "Tax classification code of customer for W9 form. Allowed values can be retrieved through getEbLookups for virtualTableName W9.TAX.CLASS.CODE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9Status" : {
          "type" : "string",
          "description" : "Status of Tax certification",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCodeOther" : {
          "type" : "string",
          "description" : "Reason for mentioning tax classification code is mentioned as Other",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9StatusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date change Tax status changes from W8 to W9"
        },
        "w9PayeeExcempCode" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax. Allowed values can be retrieved through getEbLookups for virtualTableName W9.PAYE.EXM.CDE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaExcemptionType" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax reporting.  Allowed values can be retrieved through getEbLookups for virtualTableName W9.EXEM.FATCA",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w9ReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next tax status validation date"
        },
        "ownershipRuleId" : {
          "type" : "string",
          "description" : "Capture the rule id that defines the Beneficial ownership information required for the Customer. The rule will be defined in the system based on the customer type and determines which of the beneficiary rule information like ownership, control person and certifier details are mandatory for a corporate customer type or group.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-benOwnerTypes-service-v1.0.0" ]
        },
        "noOwnerGt25Percent" : {
          "type" : "string",
          "description" : "Flag to indicate if any related Customer owns more than 25,. If set to Y, it indicates that atleast one of beneficiary owns more than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "otherOwnersLt25PercentFlag" : {
          "type" : "string",
          "description" : "Flag to indicate if all owners own less than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "certifierName" : {
          "type" : "string",
          "description" : "Name of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 25
        },
        "certifierTitle" : {
          "type" : "string",
          "description" : "Title of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "additionalTitle" : {
          "type" : "string",
          "description" : "Additional Title information of the customer or certifier",
          "minLength" : 0,
          "maxLength" : 18
        },
        "certificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Corporate customers should declare the ownership information among its partners and it has to be verified by a certifier. Holds information on the date when the Ownership information was certified  by an authorised certifier."
        },
        "privacyNoticeFrequency" : {
          "type" : "string",
          "description" : "Financial institutions has to share their privacy policies and record the customers choice in opting in or out in sharing personal information with their marketing partners and affliates. The frequency date records the date when next annual privacy notice has to be sent to the customer. ",
          "minLength" : 0,
          "maxLength" : 39
        },
        "communicationMode" : {
          "type" : "string",
          "description" : "The communication method that will be followed by the financial institution to share the privacy policy, the information that will be shared etc., to the customer",
          "minLength" : 0,
          "maxLength" : 39
        },
        "privacyStatus" : {
          "type" : "string",
          "description" : "Indicates if the customer has choosen to Opt-in or Opt-out in sharing personal information.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "OPT-IN", " OPT-OUT" ]
        },
        "statusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the effective date of change of Fatca status"
        },
        "ctrExempt" : {
          "type" : "string",
          "description" : "Indicates if customer is exempt from CTR(Currency transaction reporting) or not. If set to YES, CTR report will not be generated for the customer when the cumulative transactions for the day was more than 10,000 dollars.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO", " Blank" ]
        },
        "ctrExemptReason" : {
          "type" : "string",
          "description" : "Holds the reason for marking the customer as CTR exempt.  Allowed values can be retrieved through getEbLookups for virtualTableName EXEMPT.REASON",
          "minLength" : 0,
          "maxLength" : 39
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 39
        },
        "regGGCertification" : {
          "type" : "string",
          "description" : "All commercial or corporate customers should certify that they do not engage in Internet gambling. If they do engage in internet gamling, it should through lawful means. Capture if certification related to customer is not involved in internet  gambling or not and if involved in lawful internet gambling has it been verified and certified.",
          "minLength" : 0,
          "maxLength" : 39
        },
        "regGGCertficationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when customers Regulation GG certification status was updated"
        },
        "affiliateMarketingStatus" : {
          "type" : "string",
          "description" : "Captures the customers decision to opt-in or opt-out of sharing maketing information to the bank affiliates",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO", " Blank" ]
        },
        "affiliateMarketingStatusDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer gave the decision for sharing maketing information to the bank affiliates."
        },
        "affiliateMarketingExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of expiry of affiliate marketing concurrence provide by Customer "
        },
        "otherNationalityId" : {
          "type" : "string",
          "description" : "Other Nationality of the Customer",
          "minLength" : 0,
          "maxLength" : 25
        },
        "spokenLanguage" : {
          "type" : "string",
          "description" : "Customers native language or the language that can be used for communication",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:references-languages-service.service.v1.0.0" ]
        },
        "isMobileBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", "NULL" ]
        },
        "isInternetBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the internet banking service or not.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "YES", "NULL" ]
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " SENT", " YES" ]
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " POSITIVE", " NEGATIVE", " RESULT.AWAITED" ]
        },
        "amlLastResultDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The last date when Anti Money Laundering result is performed and updated"
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 21
        },
        "isKycComplete" : {
          "type" : "string",
          "description" : "Whether information related to the customer has been collected and verified",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "YES", " NULL" ]
        },
        "mnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Specifies an easy means of referencing Customer" ]
        },
        "languageId" : {
          "type" : "string",
          "description" : "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "target" : {
          "type" : "string",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minLength" : 0,
          "maxLength" : 27
        },
        "customerStatus" : {
          "type" : "string",
          "description" : "The internal bank status of a customer",
          "minLength" : 0,
          "maxLength" : 27
        },
        "prospectId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "ACTIVE", " PROSPECT" ]
        },
        "branch" : {
          "type" : "string",
          "description" : "The branch information relevant to this BIC code.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Branch Name" ]
        },
        "customerSince" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date Since Customer is held in the system"
        },
        "dateOfDeath" : {
          "type" : "string",
          "format" : "date",
          "description" : "The death date of customer."
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 19
        },
        "currNo" : {
          "type" : "number",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minimum" : 0,
          "maximum" : 19
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "UsIndividualCustomer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsIndividualCustomerBody"
        }
      },
      "description" : "UsIndividualCustomer"
    },
    "UsIndividualCustomerBody" : {
      "type" : "object",
      "required" : [ "givenName", "lastName" ],
      "properties" : {
        "idDocument" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification type" ]
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies the Legal Document name" ]
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification of the Customer" ]
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies legal issuing authority" ]
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "employment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "employmentStatus" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 24
              },
              "occupation" : {
                "type" : "string",
                "description" : "Occupation of the customer",
                "minLength" : 0,
                "maxLength" : 26
              },
              "employStartDate" : {
                "type" : "string",
                "description" : "Starting date of the customer's employment",
                "minLength" : 0,
                "maxLength" : 26
              },
              "jobTitle" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 26
              },
              "employerAddress" : {
                "type" : "string",
                "description" : "The address of the customer's employer.",
                "minLength" : 0,
                "maxLength" : 24
              },
              "employerBusiness" : {
                "type" : "string",
                "description" : "The business of customer's employer involved.",
                "minLength" : 0,
                "maxLength" : 24
              },
              "salaryCurrency" : {
                "type" : "string",
                "description" : "Currency in which the Salary information of the customer is maintained",
                "minLength" : 0,
                "maxLength" : 24
              },
              "salaryAmount" : {
                "type" : "number",
                "description" : "Gross Salary details of the customer",
                "minimum" : 0,
                "maximum" : 26
              },
              "annualBonus" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 24
              },
              "salaryFrequency" : {
                "type" : "string",
                "description" : "Indicates the payment frequency of salary.",
                "minLength" : 0,
                "maxLength" : 26
              }
            }
          }
        },
        "creditScore" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditScoreDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date when credit score was updated"
              },
              "creditScore" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 14
              },
              "creditReportingAgency" : {
                "type" : "string",
                "description" : "Name of the agency that provided the credit score. Allowed values can be retrieved through getEbLookups for virtualTableName CREDIT.BUREAU",
                "minLength" : 0,
                "maxLength" : 26
              }
            }
          }
        },
        "relation" : {
          "type" : "array",
          "description" : "Identifies the inter-relationship between customer with other customers",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Identified relationship code" ]
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 17,
                "enum" : [ "Specifies inter-relationship Customer" ]
              },
              "relationOption" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "jointRelationDeliveryOption" : {
                      "type" : "string",
                      "description" : "This is used to specify what delivery addressing is to be used for the link customer. ",
                      "minLength" : 0,
                      "maxLength" : 27
                    },
                    "role" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "jointRelationRoleId" : {
                      "type" : "string",
                      "description" : "Role of joint customer with the main customer",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "customerLiability" : {
                      "type" : "string",
                      "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        },
        "PreviousIdentification" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "previousName" : {
                "type" : "string",
                "description" : "Customers former name",
                "minLength" : 0,
                "maxLength" : 25
              },
              "nameChangeDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Name change date"
              },
              "changeReason" : {
                "type" : "string",
                "description" : "Specifies the reason (if any) for any status change",
                "minLength" : 0,
                "maxLength" : 25
              }
            }
          }
        },
        "residenceInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "residenceStatus" : {
                "type" : "string",
                "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "residenceType" : {
                "type" : "string",
                "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                "minLength" : 0,
                "maxLength" : 13
              },
              "residenceSince" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date since the user has obtained the residence."
              },
              "residenceValue" : {
                "type" : "number",
                "description" : "Market Value of the customer's residence",
                "minimum" : 0,
                "maximum" : 14
              },
              "residenceMortgageValue" : {
                "type" : "number",
                "description" : "Mortgage value of the residence property of the customer",
                "minimum" : 0,
                "maximum" : 22
              }
            }
          }
        },
        "communication" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 20
              }
            }
          }
        },
        "communicationDevice" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationDevice" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "HOME PHONE", "WORK PHONE", "MOBILE PHONE", "EMAIL", "FAX" ]
              },
              "deviceDetails" : {
                "type" : "string",
                "description" : "Communication or contact information. Can be phone or fax number or email id",
                "minLength" : 0,
                "maxLength" : 18
              },
              "devicePrivacy" : {
                "type" : "string",
                "description" : "Indicates if the communication device listed can be shared. Listed indicates that the contact information can be shared. Unlisted indicates that the information cannot be made public.",
                "minLength" : 0,
                "maxLength" : 20,
                "enum" : [ "LISTED", "UNLISTED" ]
              }
            }
          }
        },
        "riskClass" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "riskLevel" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 21
              }
            }
          }
        },
        "overrideReason" : {
          "type" : "array",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "items" : {
            "type" : "object",
            "properties" : {
              "overrideReason" : {
                "type" : "string",
                "description" : "Reason for changing the customer's risk class from the calculated risk class.",
                "minLength" : 0,
                "maxLength" : 21
              }
            }
          }
        },
        "Names" : {
          "type" : "array",
          "description" : "Short title for the Account to be created",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "Defaulted if Given or family name is mentioned" ]
              },
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "CrProfileType" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "profileType" : {
                "type" : "string",
                "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              },
              "profile" : {
                "type" : "string",
                "description" : "Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "OtherOfficer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherOfficerId" : {
                "type" : "string",
                "description" : "Other officers managing the Customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "table - dept account officer" ]
              }
            }
          }
        },
        "override" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "inputter" : {
          "type" : "array",
          "description" : "The user identifier who input the transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "inputter" : {
                "type" : "string",
                "description" : "The user identifier who input the transaction",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "dateTime" : {
          "type" : "array",
          "description" : "Contains the date and time separated by '-'",
          "items" : {
            "type" : "object",
            "properties" : {
              "dateTime" : {
                "type" : "string",
                "description" : "Contains the date and time separated by '-'",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "title" : {
          "type" : "string",
          "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength" : 0,
          "maxLength" : 5,
          "enum" : [ "Holds the title for the customer's name" ]
        },
        "givenName" : {
          "type" : "string",
          "description" : "Customer's given name",
          "minLength" : 1,
          "maxLength" : 9,
          "enum" : [ "Indicates the Given Name" ]
        },
        "middleName" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 10,
          "enum" : [ "Specifies the Middle Name" ]
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of an individual customer",
          "minLength" : 1,
          "maxLength" : 10,
          "enum" : [ "Specifies the Family Name" ]
        },
        "nameSuffix" : {
          "type" : "string",
          "description" : "Post-nominal letters that indicate that the individual holds a position, educational degree, accreditation, office, or honor.Allowed values can be retrieved through getEbLookups for virtualTableName USREGS.CUS.SUFFIX",
          "minLength" : 0,
          "maxLength" : 17,
          "enum" : [ "@ref:meta-virtualtable-v1.0.0" ]
        },
        "maritalstatus" : {
          "type" : "string",
          "description" : "Marital status of the customer",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "/reference/lookups?virtualTableName=MARITAL.STATUS" ]
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 17,
          "enum" : [ "Customer's Gender" ]
        },
        "nationalityId" : {
          "type" : "string",
          "description" : "The identifier of the nationality of a customer",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Country of Citizenship" ]
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date of birth of an individual customer"
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 23
        },
        "taxId" : {
          "type" : "string",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "minLength" : 0,
          "maxLength" : 17,
          "enum" : [ "Customer's Tax ID" ]
        },
        "customerRating" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Customer's rating" ]
        },
        "taxType" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 17
        },
        "accountOfficerId" : {
          "type" : "string",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Account Officer responsible for the Customer" ]
        },
        "appliedOrCertified" : {
          "type" : "string",
          "description" : "Indicates whether the TIN or SSN is certified, applied or not certified",
          "minLength" : 0,
          "maxLength" : 18,
          "enum" : [ "Applied", " Certified", " Not Certified", " Pending Validat" ]
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Y", " Null" ]
        },
        "inActiveMilitaryService" : {
          "type" : "string",
          "description" : "Indicates if customer or account holder is in active military service",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Y", " N" ]
        },
        "addressLine1" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 35,
          "enum" : [ "Specifies the first line of Customer's address." ]
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the second line of Customer's address." ]
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 35
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 35
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 1,
          "maxLength" : 35
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxCertificationType" : {
          "type" : "string",
          "description" : "Taxpayer certification type code for W8 and W9 customer. Allowed values can be retrieved through getEbLookups for virtualTableName TAX.CERT.TYPE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "foreignTin" : {
          "type" : "string",
          "description" : "Foreign tax identification Number",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Foreign Tax ID Number" ]
        },
        "taxCertificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Date"
        },
        "reasonForMissingFtin" : {
          "type" : "string",
          "description" : "Reason for non-availability of foreign tax identification number information. Allowed values can be retrieved through getEbLookups for virtualTableName FTIN.MIS.REASON",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxCerticationExpiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Expiry date"
        },
        "fTINInformation" : {
          "type" : "string",
          "description" : "Additional information about Foreign tax identification number.  ",
          "minLength" : 0,
          "maxLength" : 45
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Global Intermediary id number" ]
        },
        "taxTreatyBenefits" : {
          "type" : "string",
          "description" : "A treaty between the United States and a foreign country that may provide foreign taxpayer an exemption from, or a reduced rate, of withholding for certain items of income.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxTreatyLimitationType" : {
          "type" : "string",
          "description" : "Captures any limitation of the tax treaty benefits. Allowed values can be retrieved through getEbLookups for virtualTableName TX.TREATY.LIM.TYPE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholding" : {
          "type" : "string",
          "description" : "Indicates if Backup with holding tax will be applied or not for the customer. Updated by system based on tax information provided by the customer. Y indicates that bank will withold tax from the customer on interest payments or other non-taxed earnings. N indicates that the Financial institution will not withhold tax.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxTreatyCountry" : {
          "type" : "string",
          "description" : "Indicates the tax treaty country if the customer nationality belongs to one of tax treaty countries with US",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "@ref:reference-countries-service-v1.0.0" ]
        },
        "taxWithholdingApplied" : {
          "type" : "string",
          "description" : "Capture the type of witholding taxes to be applied for the customer. Allowed values can be retrieved through getEbLookups for virtualTableName WHT.APPLIED",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxEntityType" : {
          "type" : "string",
          "description" : "Capture the internal revenue code (Chapter 3) for withholding tax payers(Non-residents and foreign corporations). Allowed values can be retrieved through getEbLookups for virtualTableName TX.ENT.TYPE.CODE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholdingReason" : {
          "type" : "string",
          "description" : "Describes the reason tax was withheld",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaStatusCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCode" : {
          "type" : "string",
          "description" : "Tax classification code of customer for W9 form. Allowed values can be retrieved through getEbLookups for virtualTableName W9.TAX.CLASS.CODE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9Status" : {
          "type" : "string",
          "description" : "Status of Tax certification",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCodeOther" : {
          "type" : "string",
          "description" : "Reason for mentioning tax classification code is mentioned as Other",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9StatusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date change Tax status changes from W8 to W9"
        },
        "w9PayeeExcempCode" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax. Allowed values can be retrieved through getEbLookups for virtualTableName W9.PAYE.EXM.CDE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaExcemptionType" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax reporting.  Allowed values can be retrieved through getEbLookups for virtualTableName W9.EXEM.FATCA",
          "minLength" : 0,
          "maxLength" : 35
        },
        "netMonthlyIncome" : {
          "type" : "number",
          "description" : "Net income earned by customer each month.",
          "minimum" : 0,
          "maximum" : 24
        },
        "netMonthlyExpense" : {
          "type" : "number",
          "description" : "Net expenses of customer each month.",
          "minimum" : 0,
          "maximum" : 26
        },
        "privacyNoticeFrequency" : {
          "type" : "string",
          "description" : "Financial institutions has to share their privacy policies and record the customers choice in opting in or out in sharing personal information with their marketing partners and affliates. The frequency date records the date when next annual privacy notice has to be sent to the customer. ",
          "minLength" : 0,
          "maxLength" : 39
        },
        "communicationMode" : {
          "type" : "string",
          "description" : "The communication method that will be followed by the financial institution to share the privacy policy, the information that will be shared etc., to the customer",
          "minLength" : 0,
          "maxLength" : 39
        },
        "privacyStatus" : {
          "type" : "string",
          "description" : "Indicates if the customer has choosen to Opt-in or Opt-out in sharing personal information.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "OPT-IN", " OPT-OUT" ]
        },
        "statusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the effective date of change of Fatca status"
        },
        "ctrExempt" : {
          "type" : "string",
          "description" : "Indicates if customer is exempt from CTR(Currency transaction reporting) or not. If set to YES, CTR report will not be generated for the customer when the cumulative transactions for the day was more than 10,000 dollars.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO", " Blank" ]
        },
        "ctrExemptReason" : {
          "type" : "string",
          "description" : "Holds the reason for marking the customer as CTR exempt.  Allowed values can be retrieved through getEbLookups for virtualTableName EXEMPT.REASON",
          "minLength" : 0,
          "maxLength" : 39
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 39
        },
        "affiliateMarketingStatus" : {
          "type" : "string",
          "description" : "Captures the customers decision to opt-in or opt-out of sharing maketing information to the bank affiliates",
          "minLength" : 0,
          "maxLength" : 39
        },
        "affiliateMarketingStatusDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer gave the decision for sharing maketing information to the bank affiliates."
        },
        "affiliateMarketingExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of expiry of affiliate marketing concurrence provide by Customer "
        },
        "otherNationalityId" : {
          "type" : "string",
          "description" : "Other Nationality of the Customer",
          "minLength" : 0,
          "maxLength" : 25
        },
        "spokenLanguage" : {
          "type" : "string",
          "description" : "Customers native language or the language that can be used for communication",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:references-languages-service.service.v1.0.0" ]
        },
        "isMobileBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", "NULL" ]
        },
        "isInternetBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the internet banking service or not.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "YES", "NULL" ]
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " SENT", " YES" ]
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " POSITIVE", " NEGATIVE", " RESULT.AWAITED" ]
        },
        "amlLastResultDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The last date when Anti Money Laundering result is performed and updated"
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 21
        },
        "isKycComplete" : {
          "type" : "string",
          "description" : "Whether information related to the customer has been collected and verified",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "YES", " NULL" ]
        },
        "mnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Specifies an easy means of referencing Customer" ]
        },
        "languageId" : {
          "type" : "string",
          "description" : "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "target" : {
          "type" : "string",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minLength" : 0,
          "maxLength" : 27
        },
        "naicsCode" : {
          "type" : "string",
          "description" : "NAICS Code linked to the occupation or type of business of the Customer",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "@ref:reference-us-industry-service-v1.0.0" ]
        },
        "customerStatus" : {
          "type" : "string",
          "description" : "The internal bank status of a customer",
          "minLength" : 0,
          "maxLength" : 27
        },
        "prospectId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "ACTIVE", " PROSPECT" ]
        },
        "branch" : {
          "type" : "string",
          "description" : "The branch information relevant to this BIC code.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Branch Name" ]
        },
        "customerSince" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date Since Customer is held in the system"
        },
        "dateOfDeath" : {
          "type" : "string",
          "format" : "date",
          "description" : "The death date of customer."
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 19
        },
        "currNo" : {
          "type" : "number",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minimum" : 0,
          "maximum" : 19
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "UsIndividualCustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsIndividualCustomerResponseBody"
        }
      },
      "description" : "UsIndividualCustomerResponse"
    },
    "UsIndividualCustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "idDocument" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification type" ]
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies the Legal Document name" ]
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies any legal identification of the Customer" ]
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Specifies legal issuing authority" ]
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "employment" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "employmentStatus" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 24
              },
              "occupation" : {
                "type" : "string",
                "description" : "Occupation of the customer",
                "minLength" : 0,
                "maxLength" : 26
              },
              "employStartDate" : {
                "type" : "string",
                "description" : "Starting date of the customer's employment",
                "minLength" : 0,
                "maxLength" : 26
              },
              "jobTitle" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 26
              },
              "employerAddress" : {
                "type" : "string",
                "description" : "The address of the customer's employer.",
                "minLength" : 0,
                "maxLength" : 24
              },
              "employerBusiness" : {
                "type" : "string",
                "description" : "The business of customer's employer involved.",
                "minLength" : 0,
                "maxLength" : 24
              },
              "salaryCurrency" : {
                "type" : "string",
                "description" : "Currency in which the Salary information of the customer is maintained",
                "minLength" : 0,
                "maxLength" : 24
              },
              "salaryAmount" : {
                "type" : "number",
                "description" : "Gross Salary details of the customer",
                "minimum" : 0,
                "maximum" : 26
              },
              "annualBonus" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 24
              },
              "salaryFrequency" : {
                "type" : "string",
                "description" : "Indicates the payment frequency of salary.",
                "minLength" : 0,
                "maxLength" : 26
              }
            }
          }
        },
        "creditScore" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "creditScoreDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date when credit score was updated"
              },
              "creditScore" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 14
              },
              "creditReportingAgency" : {
                "type" : "string",
                "description" : "Name of the agency that provided the credit score. Allowed values can be retrieved through getEbLookups for virtualTableName CREDIT.BUREAU",
                "minLength" : 0,
                "maxLength" : 26
              }
            }
          }
        },
        "relation" : {
          "type" : "array",
          "description" : "Identifies the inter-relationship between customer with other customers",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "Identified relationship code" ]
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 17,
                "enum" : [ "Specifies inter-relationship Customer" ]
              },
              "relationOption" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "jointRelationDeliveryOption" : {
                      "type" : "string",
                      "description" : "This is used to specify what delivery addressing is to be used for the link customer. ",
                      "minLength" : 0,
                      "maxLength" : 27
                    },
                    "role" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "jointRelationRoleId" : {
                      "type" : "string",
                      "description" : "Role of joint customer with the main customer",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "customerLiability" : {
                      "type" : "string",
                      "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        },
        "PreviousIdentification" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "previousName" : {
                "type" : "string",
                "description" : "Customers former name",
                "minLength" : 0,
                "maxLength" : 25
              },
              "nameChangeDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Name change date"
              },
              "changeReason" : {
                "type" : "string",
                "description" : "Specifies the reason (if any) for any status change",
                "minLength" : 0,
                "maxLength" : 25
              }
            }
          }
        },
        "residenceInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "residenceStatus" : {
                "type" : "string",
                "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                "minLength" : 0,
                "maxLength" : 15
              },
              "residenceType" : {
                "type" : "string",
                "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                "minLength" : 0,
                "maxLength" : 13
              },
              "residenceSince" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date since the user has obtained the residence."
              },
              "residenceValue" : {
                "type" : "number",
                "description" : "Market Value of the customer's residence",
                "minimum" : 0,
                "maximum" : 14
              },
              "residenceMortgageValue" : {
                "type" : "number",
                "description" : "Mortgage value of the residence property of the customer",
                "minimum" : 0,
                "maximum" : 22
              }
            }
          }
        },
        "communication" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 20
              }
            }
          }
        },
        "communicationDevice" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "communicationDevice" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 25,
                "enum" : [ "HOME PHONE", "WORK PHONE", "MOBILE PHONE", "EMAIL", "FAX" ]
              },
              "deviceDetails" : {
                "type" : "string",
                "description" : "Communication or contact information. Can be phone or fax number or email id",
                "minLength" : 0,
                "maxLength" : 18
              },
              "devicePrivacy" : {
                "type" : "string",
                "description" : "Indicates if the communication device listed can be shared. Listed indicates that the contact information can be shared. Unlisted indicates that the information cannot be made public.",
                "minLength" : 0,
                "maxLength" : 20,
                "enum" : [ "LISTED", "UNLISTED" ]
              }
            }
          }
        },
        "riskClass" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "riskLevel" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 21
              }
            }
          }
        },
        "overrideReason" : {
          "type" : "array",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "items" : {
            "type" : "object",
            "properties" : {
              "overrideReason" : {
                "type" : "string",
                "description" : "Reason for changing the customer's risk class from the calculated risk class.",
                "minLength" : 0,
                "maxLength" : 21
              }
            }
          }
        },
        "Names" : {
          "type" : "array",
          "description" : "Short title for the Account to be created",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "Defaulted if Given or family name is mentioned" ]
              },
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "CrProfileType" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "profileType" : {
                "type" : "string",
                "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              },
              "profile" : {
                "type" : "string",
                "description" : "Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                "minLength" : 0,
                "maxLength" : 27
              }
            }
          }
        },
        "OtherOfficer" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherOfficerId" : {
                "type" : "string",
                "description" : "Other officers managing the Customer",
                "minLength" : 0,
                "maxLength" : 27,
                "enum" : [ "table - dept account officer" ]
              }
            }
          }
        },
        "override" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "inputter" : {
          "type" : "array",
          "description" : "The user identifier who input the transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "inputter" : {
                "type" : "string",
                "description" : "The user identifier who input the transaction",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "dateTime" : {
          "type" : "array",
          "description" : "Contains the date and time separated by '-'",
          "items" : {
            "type" : "object",
            "properties" : {
              "dateTime" : {
                "type" : "string",
                "description" : "Contains the date and time separated by '-'",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "title" : {
          "type" : "string",
          "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength" : 0,
          "maxLength" : 5,
          "enum" : [ "Holds the title for the customer's name" ]
        },
        "givenName" : {
          "type" : "string",
          "description" : "Customer's given name",
          "minLength" : 1,
          "maxLength" : 9,
          "enum" : [ "Indicates the Given Name" ]
        },
        "middleName" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 10,
          "enum" : [ "Specifies the Middle Name" ]
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of an individual customer",
          "minLength" : 1,
          "maxLength" : 10,
          "enum" : [ "Specifies the Family Name" ]
        },
        "nameSuffix" : {
          "type" : "string",
          "description" : "Post-nominal letters that indicate that the individual holds a position, educational degree, accreditation, office, or honor.Allowed values can be retrieved through getEbLookups for virtualTableName USREGS.CUS.SUFFIX",
          "minLength" : 0,
          "maxLength" : 17,
          "enum" : [ "@ref:meta-virtualtable-v1.0.0" ]
        },
        "maritalstatus" : {
          "type" : "string",
          "description" : "Marital status of the customer",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "/reference/lookups?virtualTableName=MARITAL.STATUS" ]
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 17,
          "enum" : [ "Customer's Gender" ]
        },
        "nationalityId" : {
          "type" : "string",
          "description" : "The identifier of the nationality of a customer",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Country of Citizenship" ]
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date of birth of an individual customer"
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 23
        },
        "taxId" : {
          "type" : "string",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "minLength" : 0,
          "maxLength" : 17,
          "enum" : [ "Customer's Tax ID" ]
        },
        "customerRating" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Customer's rating" ]
        },
        "taxType" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 17
        },
        "accountOfficerId" : {
          "type" : "string",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Account Officer responsible for the Customer" ]
        },
        "appliedOrCertified" : {
          "type" : "string",
          "description" : "Indicates whether the TIN or SSN is certified, applied or not certified",
          "minLength" : 0,
          "maxLength" : 18,
          "enum" : [ "Applied", " Certified", " Not Certified", " Pending Validat" ]
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "Y", " Null" ]
        },
        "inActiveMilitaryService" : {
          "type" : "string",
          "description" : "Indicates if customer or account holder is in active military service",
          "minLength" : 0,
          "maxLength" : 23,
          "enum" : [ "Y", " N" ]
        },
        "addressLine1" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 35,
          "enum" : [ "Specifies the first line of Customer's address." ]
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the second line of Customer's address." ]
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 35
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 35
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 1,
          "maxLength" : 35
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxCertificationType" : {
          "type" : "string",
          "description" : "Taxpayer certification type code for W8 and W9 customer. Allowed values can be retrieved through getEbLookups for virtualTableName TAX.CERT.TYPE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "foreignTin" : {
          "type" : "string",
          "description" : "Foreign tax identification Number",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Foreign Tax ID Number" ]
        },
        "taxCertificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Date"
        },
        "reasonForMissingFtin" : {
          "type" : "string",
          "description" : "Reason for non-availability of foreign tax identification number information. Allowed values can be retrieved through getEbLookups for virtualTableName FTIN.MIS.REASON",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxCerticationExpiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Expiry date"
        },
        "fTINInformation" : {
          "type" : "string",
          "description" : "Additional information about Foreign tax identification number.  ",
          "minLength" : 0,
          "maxLength" : 45
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Global Intermediary id number" ]
        },
        "taxTreatyBenefits" : {
          "type" : "string",
          "description" : "A treaty between the United States and a foreign country that may provide foreign taxpayer an exemption from, or a reduced rate, of withholding for certain items of income.",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxTreatyLimitationType" : {
          "type" : "string",
          "description" : "Captures any limitation of the tax treaty benefits. Allowed values can be retrieved through getEbLookups for virtualTableName TX.TREATY.LIM.TYPE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholding" : {
          "type" : "string",
          "description" : "Indicates if Backup with holding tax will be applied or not for the customer. Updated by system based on tax information provided by the customer. Y indicates that bank will withold tax from the customer on interest payments or other non-taxed earnings. N indicates that the Financial institution will not withhold tax.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxTreatyCountry" : {
          "type" : "string",
          "description" : "Indicates the tax treaty country if the customer nationality belongs to one of tax treaty countries with US",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "@ref:reference-countries-service-v1.0.0" ]
        },
        "taxWithholdingApplied" : {
          "type" : "string",
          "description" : "Capture the type of witholding taxes to be applied for the customer. Allowed values can be retrieved through getEbLookups for virtualTableName WHT.APPLIED",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxEntityType" : {
          "type" : "string",
          "description" : "Capture the internal revenue code (Chapter 3) for withholding tax payers(Non-residents and foreign corporations). Allowed values can be retrieved through getEbLookups for virtualTableName TX.ENT.TYPE.CODE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholdingReason" : {
          "type" : "string",
          "description" : "Describes the reason tax was withheld",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaStatusCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCode" : {
          "type" : "string",
          "description" : "Tax classification code of customer for W9 form. Allowed values can be retrieved through getEbLookups for virtualTableName W9.TAX.CLASS.CODE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9Status" : {
          "type" : "string",
          "description" : "Status of Tax certification",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCodeOther" : {
          "type" : "string",
          "description" : "Reason for mentioning tax classification code is mentioned as Other",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9StatusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date change Tax status changes from W8 to W9"
        },
        "w9PayeeExcempCode" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax. Allowed values can be retrieved through getEbLookups for virtualTableName W9.PAYE.EXM.CDE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaExcemptionType" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax reporting.  Allowed values can be retrieved through getEbLookups for virtualTableName W9.EXEM.FATCA",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w9ReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next tax status validation date"
        },
        "netMonthlyIncome" : {
          "type" : "number",
          "description" : "Net income earned by customer each month.",
          "minimum" : 0,
          "maximum" : 24
        },
        "netMonthlyExpense" : {
          "type" : "number",
          "description" : "Net expenses of customer each month.",
          "minimum" : 0,
          "maximum" : 26
        },
        "privacyNoticeFrequency" : {
          "type" : "string",
          "description" : "Financial institutions has to share their privacy policies and record the customers choice in opting in or out in sharing personal information with their marketing partners and affliates. The frequency date records the date when next annual privacy notice has to be sent to the customer. ",
          "minLength" : 0,
          "maxLength" : 39
        },
        "communicationMode" : {
          "type" : "string",
          "description" : "The communication method that will be followed by the financial institution to share the privacy policy, the information that will be shared etc., to the customer",
          "minLength" : 0,
          "maxLength" : 39
        },
        "privacyStatus" : {
          "type" : "string",
          "description" : "Indicates if the customer has choosen to Opt-in or Opt-out in sharing personal information.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "OPT-IN", " OPT-OUT" ]
        },
        "statusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Identifies the effective date of change of Fatca status"
        },
        "ctrExempt" : {
          "type" : "string",
          "description" : "Indicates if customer is exempt from CTR(Currency transaction reporting) or not. If set to YES, CTR report will not be generated for the customer when the cumulative transactions for the day was more than 10,000 dollars.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO", " Blank" ]
        },
        "ctrExemptReason" : {
          "type" : "string",
          "description" : "Holds the reason for marking the customer as CTR exempt.  Allowed values can be retrieved through getEbLookups for virtualTableName EXEMPT.REASON",
          "minLength" : 0,
          "maxLength" : 39
        },
        "escheat" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer is in escheat status. When set to Y, escheat process will be triggered by system during close of business. Also updated as Y by system based on definition for automatic escheat process.",
          "minLength" : 0,
          "maxLength" : 39,
          "enum" : [ "YES", " NO" ]
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "additionalInformation" : {
          "type" : "string",
          "description" : "Additional Information provided to add context",
          "minLength" : 0,
          "maxLength" : 39
        },
        "affiliateMarketingStatus" : {
          "type" : "string",
          "description" : "Captures the customers decision to opt-in or opt-out of sharing maketing information to the bank affiliates",
          "minLength" : 0,
          "maxLength" : 39
        },
        "affiliateMarketingStatusDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer gave the decision for sharing maketing information to the bank affiliates."
        },
        "affiliateMarketingExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of expiry of affiliate marketing concurrence provide by Customer "
        },
        "otherNationalityId" : {
          "type" : "string",
          "description" : "Other Nationality of the Customer",
          "minLength" : 0,
          "maxLength" : 25
        },
        "spokenLanguage" : {
          "type" : "string",
          "description" : "Customers native language or the language that can be used for communication",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:references-languages-service.service.v1.0.0" ]
        },
        "isMobileBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", "NULL" ]
        },
        "isInternetBankingService" : {
          "type" : "string",
          "description" : "Indicates whether is Customer is subscribed to the internet banking service or not.",
          "minLength" : 0,
          "maxLength" : 24,
          "enum" : [ "YES", "NULL" ]
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 21
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " SENT", " YES" ]
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "NULL", " POSITIVE", " NEGATIVE", " RESULT.AWAITED" ]
        },
        "amlLastResultDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The last date when Anti Money Laundering result is performed and updated"
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 21
        },
        "isKycComplete" : {
          "type" : "string",
          "description" : "Whether information related to the customer has been collected and verified",
          "minLength" : 0,
          "maxLength" : 21,
          "enum" : [ "YES", " NULL" ]
        },
        "mnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Specifies an easy means of referencing Customer" ]
        },
        "languageId" : {
          "type" : "string",
          "description" : "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 27
        },
        "target" : {
          "type" : "string",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minLength" : 0,
          "maxLength" : 27
        },
        "naicsCode" : {
          "type" : "string",
          "description" : "NAICS Code linked to the occupation or type of business of the Customer",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "@ref:reference-us-industry-service-v1.0.0" ]
        },
        "customerStatus" : {
          "type" : "string",
          "description" : "The internal bank status of a customer",
          "minLength" : 0,
          "maxLength" : 27
        },
        "prospectId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "ACTIVE", " PROSPECT" ]
        },
        "branch" : {
          "type" : "string",
          "description" : "The branch information relevant to this BIC code.",
          "minLength" : 0,
          "maxLength" : 27,
          "enum" : [ "Branch Name" ]
        },
        "customerSince" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date Since Customer is held in the system"
        },
        "dateOfDeath" : {
          "type" : "string",
          "format" : "date",
          "description" : "The death date of customer."
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 19
        },
        "currNo" : {
          "type" : "number",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minimum" : 0,
          "maximum" : 19
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "UsCustomerAddresslistResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerAddresslistResponseBody"
        }
      },
      "description" : "UsCustomerAddresslistResponse"
    },
    "UsCustomerAddresslistResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "addressReference" : {
            "type" : "string",
            "description" : "Reference Id of address record"
          },
          "addressLine1" : {
            "type" : "string"
          },
          "addressLine2" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string",
            "description" : "City address stated on driver licence or utlility bill. For example London, New York etc."
          },
          "stateId" : {
            "type" : "string",
            "description" : "Represents the US State to which the address belongs to."
          },
          "countyId" : {
            "type" : "string",
            "description" : "County associated with the address. "
          },
          "zipCode" : {
            "type" : "number",
            "description" : "Zip code"
          },
          "zipPlusFour" : {
            "type" : "number",
            "description" : "Zip plus 4"
          },
          "addressPurpose" : {
            "type" : "string",
            "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party)."
          },
          "addressStatus" : {
            "type" : "string",
            "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc."
          },
          "customerContactFlag" : {
            "type" : "string",
            "description" : "Flag to indicate if Customer information was modified based on Customer request"
          }
        }
      }
    },
    "UsCustomerCreditscoreResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerCreditscoreResponseBody"
        }
      },
      "description" : "UsCustomerCreditscoreResponse"
    },
    "UsCustomerCreditscoreResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "agencyId" : {
            "type" : "string",
            "description" : "Name of the agency that provided the credit score. Allowed values can be retrieved through getEbLookups for virtualTableName CREDIT.BUREAU",
            "maxLength" : 30
          },
          "creditScore" : {
            "type" : "number"
          }
        }
      }
    },
    "UsDocumentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsDocumentsResponseBody"
        }
      },
      "description" : "UsDocumentsResponse"
    },
    "UsDocumentsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "referenceNumber" : {
            "type" : "string",
            "description" : "Reference Numbers",
            "maxLength" : 35
          },
          "documentId" : {
            "type" : "string",
            "description" : "Based on documentCode, the field defaults the required document codes",
            "maxLength" : 26
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
            "maxLength" : 10
          },
          "statusChangeDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Identifies the effective date of change of Fatca status"
          },
          "signatureDate" : {
            "type" : "string",
            "format" : "date"
          },
          "stateId" : {
            "type" : "string",
            "description" : "Represents the US State to which the address belongs to.",
            "maxLength" : 2
          },
          "countryOfIssue" : {
            "type" : "string",
            "description" : "Country where the document was issued",
            "maxLength" : 9
          },
          "issuedBy" : {
            "type" : "string",
            "description" : "The issuer of a security or a bond.",
            "maxLength" : 35
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date the item was issued."
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
          },
          "documentSequence" : {
            "type" : "string",
            "description" : "Sequence number of revised document",
            "maxLength" : 4
          },
          "receivedDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Identifies the date on which the document was received"
          },
          "additionalInformation" : {
            "type" : "string",
            "description" : "Additional Information provided to add context",
            "maxLength" : 55
          },
          "imageReference" : {
            "type" : "string",
            "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to",
            "maxLength" : 15
          }
        }
      }
    },
    "UsCustomerKycandTax" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerKycandTaxBody"
        }
      },
      "description" : "UsCustomerKycandTax"
    },
    "UsCustomerKycandTaxBody" : {
      "type" : "object",
      "properties" : {
        "riskClass" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "riskLevel" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 9
              }
            }
          }
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 8,
          "enum" : [ "NULL", " SENT", " YES" ]
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 9,
          "enum" : [ "NULL", " POSITIVE", " NEGATIVE", " RESULT.AWAITED" ]
        },
        "amlLastResultDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The last date when Anti Money Laundering result is performed and updated"
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 15
        },
        "overrideReason" : {
          "type" : "string",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "isKycComplete" : {
          "type" : "string",
          "description" : "Whether information related to the customer has been collected and verified",
          "minLength" : 0,
          "maxLength" : 13,
          "enum" : [ "YES", "NULL" ]
        },
        "taxCertificationType" : {
          "type" : "string",
          "description" : "Taxpayer certification type code for W8 and W9 customer. Allowed values can be retrieved through getEbLookups for virtualTableName TAX.CERT.TYPE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "foreignTin" : {
          "type" : "string",
          "description" : "Foreign tax identification Number",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Foreign Tax ID Number" ]
        },
        "taxCertificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Date"
        },
        "reasonForMissingFtin" : {
          "type" : "string",
          "description" : "Reason for non-availability of foreign tax identification number information. Allowed values can be retrieved through getEbLookups for virtualTableName FTIN.MIS.REASON",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxCerticationExpiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Expiry date"
        },
        "fTINInformation" : {
          "type" : "string",
          "description" : "Additional information about Foreign tax identification number.  ",
          "minLength" : 0,
          "maxLength" : 45
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Global Intermediary id number" ]
        },
        "taxTreatyBenefits" : {
          "type" : "string",
          "description" : "A treaty between the United States and a foreign country that may provide foreign taxpayer an exemption from, or a reduced rate, of withholding for certain items of income.",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "YES", " NO" ]
        },
        "taxTreatyLimitationType" : {
          "type" : "string",
          "description" : "Captures any limitation of the tax treaty benefits. Allowed values can be retrieved through getEbLookups for virtualTableName TX.TREATY.LIM.TYPE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholding" : {
          "type" : "string",
          "description" : "Indicates if Backup with holding tax will be applied or not for the customer. Updated by system based on tax information provided by the customer. Y indicates that bank will withold tax from the customer on interest payments or other non-taxed earnings. N indicates that the Financial institution will not withhold tax.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "YES", " NO" ]
        },
        "taxTreatyCountry" : {
          "type" : "string",
          "description" : "Indicates the tax treaty country if the customer nationality belongs to one of tax treaty countries with US",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "@ref:reference-countries-service-v1.0.0" ]
        },
        "taxWithholdingApplied" : {
          "type" : "string",
          "description" : "Capture the type of witholding taxes to be applied for the customer. Allowed values can be retrieved through getEbLookups for virtualTableName WHT.APPLIED",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxEntityType" : {
          "type" : "string",
          "description" : "Capture the internal revenue code (Chapter 3) for withholding tax payers(Non-residents and foreign corporations). Allowed values can be retrieved through getEbLookups for virtualTableName TX.ENT.TYPE.CODE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholdingReason" : {
          "type" : "string",
          "description" : "Describes the reason tax was withheld",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaStatusCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCode" : {
          "type" : "string",
          "description" : "Tax classification code of customer for W9 form. Allowed values can be retrieved through getEbLookups for virtualTableName W9.TAX.CLASS.CODE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9Status" : {
          "type" : "string",
          "description" : "Status of Tax certification",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "W8", " W9", " Blank" ]
        },
        "taxClassificationCodeOther" : {
          "type" : "string",
          "description" : "Reason for mentioning tax classification code is mentioned as Other",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9StatusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date change Tax status changes from W8 to W9"
        },
        "w9PayeeExcempCode" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax. Allowed values can be retrieved through getEbLookups for virtualTableName W9.PAYE.EXM.CDE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaExcemptionType" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax reporting.  Allowed values can be retrieved through getEbLookups for virtualTableName W9.EXEM.FATCA",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w9ReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next tax status validation date"
        }
      }
    },
    "UsCustomerKycandTaxResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerKycandTaxResponseBody"
        }
      },
      "description" : "UsCustomerKycandTaxResponse"
    },
    "UsCustomerKycandTaxResponseBody" : {
      "type" : "object",
      "properties" : {
        "riskClass" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "riskLevel" : {
                "type" : "number",
                "minimum" : 0,
                "maximum" : 9
              }
            }
          }
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 15
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 8,
          "enum" : [ "NULL", " SENT", " YES" ]
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 9,
          "enum" : [ "NULL", " POSITIVE", " NEGATIVE", " RESULT.AWAITED" ]
        },
        "amlLastResultDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The last date when Anti Money Laundering result is performed and updated"
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 15
        },
        "overrideReason" : {
          "type" : "string",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "minLength" : 0,
          "maxLength" : 14
        },
        "isKycComplete" : {
          "type" : "string",
          "description" : "Whether information related to the customer has been collected and verified",
          "minLength" : 0,
          "maxLength" : 13,
          "enum" : [ "YES", "NULL" ]
        },
        "taxCertificationType" : {
          "type" : "string",
          "description" : "Taxpayer certification type code for W8 and W9 customer. Allowed values can be retrieved through getEbLookups for virtualTableName TAX.CERT.TYPE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "foreignTin" : {
          "type" : "string",
          "description" : "Foreign tax identification Number",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Foreign Tax ID Number" ]
        },
        "taxCertificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Date"
        },
        "reasonForMissingFtin" : {
          "type" : "string",
          "description" : "Reason for non-availability of foreign tax identification number information. Allowed values can be retrieved through getEbLookups for virtualTableName FTIN.MIS.REASON",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxCerticationExpiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Tax certification Expiry date"
        },
        "fTINInformation" : {
          "type" : "string",
          "description" : "Additional information about Foreign tax identification number.  ",
          "minLength" : 0,
          "maxLength" : 45
        },
        "giin" : {
          "type" : "string",
          "description" : "Specifies the Global Intermediary Identification Numbers of financial institutions",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "Global Intermediary id number" ]
        },
        "taxTreatyBenefits" : {
          "type" : "string",
          "description" : "A treaty between the United States and a foreign country that may provide foreign taxpayer an exemption from, or a reduced rate, of withholding for certain items of income.",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "YES", " NO" ]
        },
        "taxTreatyLimitationType" : {
          "type" : "string",
          "description" : "Captures any limitation of the tax treaty benefits. Allowed values can be retrieved through getEbLookups for virtualTableName TX.TREATY.LIM.TYPE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholding" : {
          "type" : "string",
          "description" : "Indicates if Backup with holding tax will be applied or not for the customer. Updated by system based on tax information provided by the customer. Y indicates that bank will withold tax from the customer on interest payments or other non-taxed earnings. N indicates that the Financial institution will not withhold tax.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "YES", " NO" ]
        },
        "taxTreatyCountry" : {
          "type" : "string",
          "description" : "Indicates the tax treaty country if the customer nationality belongs to one of tax treaty countries with US",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "@ref:reference-countries-service-v1.0.0" ]
        },
        "taxWithholdingApplied" : {
          "type" : "string",
          "description" : "Capture the type of witholding taxes to be applied for the customer. Allowed values can be retrieved through getEbLookups for virtualTableName WHT.APPLIED",
          "minLength" : 0,
          "maxLength" : 35
        },
        "taxEntityType" : {
          "type" : "string",
          "description" : "Capture the internal revenue code (Chapter 3) for withholding tax payers(Non-residents and foreign corporations). Allowed values can be retrieved through getEbLookups for virtualTableName TX.ENT.TYPE.CODE",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxWithholdingReason" : {
          "type" : "string",
          "description" : "Describes the reason tax was withheld",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaStatusCode" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "taxClassificationCode" : {
          "type" : "string",
          "description" : "Tax classification code of customer for W9 form. Allowed values can be retrieved through getEbLookups for virtualTableName W9.TAX.CLASS.CODE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9Status" : {
          "type" : "string",
          "description" : "Status of Tax certification",
          "minLength" : 0,
          "maxLength" : 45,
          "enum" : [ "W8", " W9", " Blank" ]
        },
        "taxClassificationCodeOther" : {
          "type" : "string",
          "description" : "Reason for mentioning tax classification code is mentioned as Other",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w8w9StatusChangeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date change Tax status changes from W8 to W9"
        },
        "w9PayeeExcempCode" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax. Allowed values can be retrieved through getEbLookups for virtualTableName W9.PAYE.EXM.CDE",
          "minLength" : 0,
          "maxLength" : 35
        },
        "fatcaExcemptionType" : {
          "type" : "string",
          "description" : "Reason a W9 Customer or corporation is exempt from Tax reporting.  Allowed values can be retrieved through getEbLookups for virtualTableName W9.EXEM.FATCA",
          "minLength" : 0,
          "maxLength" : 35
        },
        "w9ReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next tax status validation date"
        }
      }
    },
    "UsCustomerPrimaryAddress" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerPrimaryAddressBody"
        }
      },
      "description" : "UsCustomerPrimaryAddress"
    },
    "UsCustomerPrimaryAddressBody" : {
      "type" : "object",
      "properties" : {
        "Contact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "mobileNumber" : {
                "type" : "string",
                "description" : "Mobile number of the customer",
                "minLength" : 0,
                "maxLength" : 12
              },
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "override" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "inputter" : {
          "type" : "array",
          "description" : "The user identifier who input the transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "inputter" : {
                "type" : "string",
                "description" : "The user identifier who input the transaction",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "dateTime" : {
          "type" : "array",
          "description" : "Contains the date and time separated by '-'",
          "items" : {
            "type" : "object",
            "properties" : {
              "dateTime" : {
                "type" : "string",
                "description" : "Contains the date and time separated by '-'",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "addressLine1" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the first line of Customer's address." ]
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the second line of Customer's address." ]
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 35
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 35
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressLocation" : {
          "type" : "string",
          "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
          "minLength" : 0,
          "maxLength" : 15
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 14
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 19
        },
        "currNo" : {
          "type" : "number",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minimum" : 0,
          "maximum" : 19
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "UsCustomerPrimaryAddressResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerPrimaryAddressResponseBody"
        }
      },
      "description" : "UsCustomerPrimaryAddressResponse"
    },
    "UsCustomerPrimaryAddressResponseBody" : {
      "type" : "object",
      "properties" : {
        "Contact" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "mobileNumber" : {
                "type" : "string",
                "description" : "Mobile number of the customer",
                "minLength" : 0,
                "maxLength" : 12
              },
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "override" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "inputter" : {
          "type" : "array",
          "description" : "The user identifier who input the transaction",
          "items" : {
            "type" : "object",
            "properties" : {
              "inputter" : {
                "type" : "string",
                "description" : "The user identifier who input the transaction",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "dateTime" : {
          "type" : "array",
          "description" : "Contains the date and time separated by '-'",
          "items" : {
            "type" : "object",
            "properties" : {
              "dateTime" : {
                "type" : "string",
                "description" : "Contains the date and time separated by '-'",
                "minLength" : 0,
                "maxLength" : 19
              }
            }
          }
        },
        "addressLine1" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the first line of Customer's address." ]
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "Specifies the second line of Customer's address." ]
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 35,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 35
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 35
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "addressLocation" : {
          "type" : "string",
          "description" : "Identifies the nature of the postal address, like primary, secondary or office address",
          "minLength" : 0,
          "maxLength" : 15
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 14
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "minLength" : 0,
          "maxLength" : 19
        },
        "currNo" : {
          "type" : "number",
          "description" : "Current Number which indicates how many times the record is modified.",
          "minimum" : 0,
          "maximum" : 19
        },
        "authoriser" : {
          "type" : "string",
          "description" : "This indicates the user who authorized the transaction.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "companyCode" : {
          "type" : "string",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "deptCode" : {
          "type" : "string",
          "description" : "The department code where the transaction was authorized.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditorCode" : {
          "type" : "string",
          "description" : "Reference to the auditor code.",
          "minLength" : 0,
          "maxLength" : 19
        },
        "auditTimeDate" : {
          "type" : "string",
          "description" : "Reference to the audit date and time.",
          "minLength" : 0,
          "maxLength" : 19
        }
      }
    },
    "UsCustomerRelation" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerRelationBody"
        }
      },
      "description" : "UsCustomerRelation"
    },
    "UsCustomerRelationBody" : {
      "type" : "object",
      "properties" : {
        "relationship" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 25
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "role" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "jointRelationRoleId" : {
                      "type" : "string",
                      "description" : "Role of joint customer with the main customer",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        },
        "ownershipRuleId" : {
          "type" : "string",
          "description" : "Capture the rule id that defines the Beneficial ownership information required for the Customer. The rule will be defined in the system based on the customer type and determines which of the beneficiary rule information like ownership, control person and certifier details are mandatory for a corporate customer type or group.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-benOwnerTypes-service-v1.0.0" ]
        },
        "noOwnerGt25Percent" : {
          "type" : "string",
          "description" : "Flag to indicate if any related Customer owns more than 25,. If set to Y, it indicates that atleast one of beneficiary owns more than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "otherOwnersLt25PercentFlag" : {
          "type" : "string",
          "description" : "Flag to indicate if all owners own less than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "certifierName" : {
          "type" : "string",
          "description" : "Name of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 25
        },
        "certifierTitle" : {
          "type" : "string",
          "description" : "Title of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "additionalTitle" : {
          "type" : "string",
          "description" : "Additional Title information of the customer or certifier",
          "minLength" : 0,
          "maxLength" : 18
        },
        "certificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Corporate customers should declare the ownership information among its partners and it has to be verified by a certifier. Holds information on the date when the Ownership information was certified  by an authorised certifier."
        }
      }
    },
    "UsCustomerRelationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerRelationResponseBody"
        }
      },
      "description" : "UsCustomerRelationResponse"
    },
    "UsCustomerRelationResponseBody" : {
      "type" : "object",
      "properties" : {
        "relationship" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 25
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 25
              },
              "role" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "jointRelationRoleId" : {
                      "type" : "string",
                      "description" : "Role of joint customer with the main customer",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 25
                    }
                  }
                }
              }
            }
          }
        },
        "ownershipRuleId" : {
          "type" : "string",
          "description" : "Capture the rule id that defines the Beneficial ownership information required for the Customer. The rule will be defined in the system based on the customer type and determines which of the beneficiary rule information like ownership, control person and certifier details are mandatory for a corporate customer type or group.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-benOwnerTypes-service-v1.0.0" ]
        },
        "noOwnerGt25Percent" : {
          "type" : "string",
          "description" : "Flag to indicate if any related Customer owns more than 25,. If set to Y, it indicates that atleast one of beneficiary owns more than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "otherOwnersLt25PercentFlag" : {
          "type" : "string",
          "description" : "Flag to indicate if all owners own less than 25,",
          "minLength" : 0,
          "maxLength" : 41,
          "enum" : [ "YES", " NO" ]
        },
        "certifierName" : {
          "type" : "string",
          "description" : "Name of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 25
        },
        "certifierTitle" : {
          "type" : "string",
          "description" : "Title of the person who certifies the Beneficial Ownership details",
          "minLength" : 0,
          "maxLength" : 16
        },
        "additionalTitle" : {
          "type" : "string",
          "description" : "Additional Title information of the customer or certifier",
          "minLength" : 0,
          "maxLength" : 18
        },
        "certificationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Corporate customers should declare the ownership information among its partners and it has to be verified by a certifier. Holds information on the date when the Ownership information was certified  by an authorised certifier."
        }
      }
    },
    "UsCustomerSecondaryAddress" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerSecondaryAddressBody"
        }
      },
      "description" : "UsCustomerSecondaryAddress"
    },
    "UsCustomerSecondaryAddressBody" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "shortName" : {
          "type" : "string",
          "description" : "Contains the name of the account, basically the short title of the account.",
          "minLength" : 0,
          "maxLength" : 9
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 25
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 25
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", " Null" ]
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "taxAddressType" : {
          "type" : "string",
          "description" : "Captures how the address can be used for tax purposes. Allowed values can be retrieved through getEbLookups for virtualTableName IRS.ADDRESS.TYPE",
          "minLength" : 0,
          "maxLength" : 14
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "UsCustomerSecondaryAddressResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerSecondaryAddressResponseBody"
        }
      },
      "description" : "UsCustomerSecondaryAddressResponse"
    },
    "UsCustomerSecondaryAddressResponseBody" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "shortName" : {
          "type" : "string",
          "description" : "Contains the name of the account, basically the short title of the account.",
          "minLength" : 0,
          "maxLength" : 9
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 25
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 25
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", " Null" ]
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "taxAddressType" : {
          "type" : "string",
          "description" : "Captures how the address can be used for tax purposes. Allowed values can be retrieved through getEbLookups for virtualTableName IRS.ADDRESS.TYPE",
          "minLength" : 0,
          "maxLength" : 14
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "UsCustomerSecondaryAddress1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerSecondaryAddress1Body"
        }
      },
      "description" : "UsCustomerSecondaryAddress1"
    },
    "UsCustomerSecondaryAddress1Body" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "shortName" : {
          "type" : "string",
          "description" : "Contains the name of the account, basically the short title of the account.",
          "minLength" : 0,
          "maxLength" : 9
        },
        "name" : {
          "type" : "string",
          "description" : "Short title for the Account to be created",
          "minLength" : 0,
          "maxLength" : 4
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 25
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 25
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", " Null" ]
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "taxAddressType" : {
          "type" : "string",
          "description" : "Captures how the address can be used for tax purposes. Allowed values can be retrieved through getEbLookups for virtualTableName IRS.ADDRESS.TYPE",
          "minLength" : 0,
          "maxLength" : 14
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "UsCustomerSecondaryAddressResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/UsCustomerSecondaryAddressResponse1Body"
        }
      },
      "description" : "UsCustomerSecondaryAddressResponse1"
    },
    "UsCustomerSecondaryAddressResponse1Body" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "addressLine2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 25
        },
        "shortName" : {
          "type" : "string",
          "description" : "Contains the name of the account, basically the short title of the account.",
          "minLength" : 0,
          "maxLength" : 9
        },
        "name" : {
          "type" : "string",
          "description" : "Short title for the Account to be created",
          "minLength" : 0,
          "maxLength" : 4
        },
        "city" : {
          "type" : "string",
          "description" : "City address stated on driver licence or utlility bill. For example London, New York etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "stateId" : {
          "type" : "string",
          "description" : "Represents the US State to which the address belongs to.",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-state-service-v1.0.0" ]
        },
        "countyId" : {
          "type" : "string",
          "description" : "County associated with the address. ",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "@ref:reference-us-county-service-v1.0.0" ]
        },
        "zipCode" : {
          "type" : "number",
          "description" : "Zip code",
          "minimum" : 0,
          "maximum" : 25
        },
        "zipPlusFour" : {
          "type" : "number",
          "description" : "Zip plus 4",
          "minimum" : 0,
          "maximum" : 25
        },
        "country" : {
          "type" : "string",
          "description" : "Identifies the country of the customer.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "customerContactIndicator" : {
          "type" : "string",
          "description" : "Flag to indicate if Customer made contact. If set to YES, contact date will be updated with system date",
          "minLength" : 0,
          "maxLength" : 25,
          "enum" : [ "YES", " Null" ]
        },
        "addressStatus" : {
          "type" : "string",
          "description" : "Indicates the status of customer mailing address like foreign address, mailing address, bad address, etc.",
          "minLength" : 0,
          "maxLength" : 25
        },
        "taxAddressType" : {
          "type" : "string",
          "description" : "Captures how the address can be used for tax purposes. Allowed values can be retrieved through getEbLookups for virtualTableName IRS.ADDRESS.TYPE",
          "minLength" : 0,
          "maxLength" : 14
        },
        "addressPurpose" : {
          "type" : "string",
          "description" : "Identifies the purpose or usage of the address. Allowed values are CTC (Communication to Customer), CTICOP(Communication to In Care Of Party) or CTOP(Communication to Other Party).",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "AddressPreferencesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AddressPreferencesResponseBody"
        }
      },
      "description" : "AddressPreferencesResponse"
    },
    "AddressPreferencesResponseBody" : {
      "type" : "object",
      "properties" : {
        "alternateaddressperiod" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "periodFrom" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 12
              },
              "periodTo" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 9
              }
            }
          }
        },
        "carrier" : {
          "type" : "string",
          "description" : "Carrier to be used for sending messages",
          "minLength" : 0,
          "maxLength" : 7
        },
        "defaultCarrier" : {
          "type" : "string",
          "description" : "Indicates the carrier to be used when there is a period for which no specific address preference is provided",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "AddressPreference" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AddressPreferenceBody"
        }
      },
      "description" : "AddressPreference"
    },
    "AddressPreferenceBody" : {
      "type" : "object",
      "properties" : {
        "alternateaddressperiod" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "periodFrom" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 12
              },
              "periodTo" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 9
              }
            }
          }
        },
        "carrier" : {
          "type" : "string",
          "description" : "Carrier to be used for sending messages",
          "minLength" : 0,
          "maxLength" : 7
        },
        "defaultCarrier" : {
          "type" : "string",
          "description" : "Indicates the carrier to be used when there is a period for which no specific address preference is provided",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    }
  }
}