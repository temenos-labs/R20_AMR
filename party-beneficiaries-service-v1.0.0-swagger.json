{
  "swagger" : "2.0",
  "info" : {
    "description" : "Management of Party Beneficiaries",
    "version" : "v1.0.0",
    "title" : "Party Beneficiaries APIs"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "paths" : {
    "/party/beneficiaries/{beneficiaryId}" : {
      "put" : {
        "summary" : "Update beneficiary details",
        "description" : "Updates an existing beneficiary",
        "operationId" : "updateBeneficiary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "beneficiaryId",
          "in" : "path",
          "description" : "Indicates the Id of beneficiary when beneficiary details are stored",
          "required" : true,
          "type" : "string",
          "x-example" : "EN9415700007"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Beneficiary"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BeneficiaryResponse",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Remove beneficiary",
        "description" : "Delete an existing beneficiary record",
        "operationId" : "deleteBeneficiary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "beneficiaryId",
          "in" : "path",
          "description" : "Indicates the Id of beneficiary when beneficiary details are stored",
          "required" : true,
          "type" : "string",
          "x-example" : "EN9415700007"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BeneficiaryResponse",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/beneficiaries" : {
      "post" : {
        "summary" : "Create beneficiary",
        "description" : "Create a new beneficiary",
        "operationId" : "createBeneficiary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Beneficiary"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BeneficiaryResponse",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/beneficiaries/beneficiariesApprovals/{beneficiaryId}" : {
      "put" : {
        "summary" : "Approve beneficiary",
        "description" : "Approve an existing beneficiary record",
        "operationId" : "approveBeneficiary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "beneficiaryId",
          "in" : "path",
          "description" : "Indicates the Id of beneficiary when beneficiary details are stored",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BeneficiaryResponse",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/beneficiaries/cancellations/{beneficiaryId}" : {
      "delete" : {
        "summary" : "Reject beneficiary",
        "description" : "Reject an existing beneficiary record",
        "operationId" : "rejectBeneficiary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "beneficiaryId",
          "in" : "path",
          "description" : "Indicates the Id of beneficiary when beneficiary details are stored",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BeneficiaryDelete"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BeneficiaryResponse",
            "schema" : {
              "$ref" : "#/definitions/BeneficiaryResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Contains the description of purpose of the payment."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            }
          }
        }
      }
    },
    "Beneficiary" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BeneficiaryBody"
        }
      },
      "description" : "Beneficiary",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "Beneficiary BIC is missing. Only name provided",
              "id" : "FT-BIC.BEN.CODE.MISSING.NAME.GIVEN",
              "type" : "Override"
            } ]
          }
        },
        "body" : {
          "beneficiaryIBAN" : "DE89370400440532013000",
          "beneficiaryAccountId" : "",
          "beneficiaryNickNames" : [ {
            "beneficiaryNickName" : "Ozil"
          } ],
          "overrides" : [ {
            "override" : ""
          } ],
          "preferredPaymentProduct" : "",
          "beneficiaryOurCharges" : "",
          "paymentCountry" : "",
          "beneficiaryBICIBAN" : "",
          "transactionType" : "",
          "beneficiaryBICIBANNames" : [ {
            "beneficiaryBICIBANName" : "DRESDNER BANK AG"
          } ],
          "paymentCurrencyId" : "USD",
          "beneficiaryCustomerId" : "Ozil",
          "beneficiaryBIC" : "",
          "recordStatus" : "",
          "preferredPaymentAmount" : 0,
          "bankSortCode" : "",
          "customerReference" : "",
          "customerId" : "100336",
          "linkToBeneficiaryId" : "",
          "beneficiaryBICIBANCity" : "",
          "defaultNarrative" : "",
          "paymentDetails" : [ {
            "paymentDetail" : ""
          } ],
          "accountWithBankSortCode" : "",
          "accountWithBank" : ""
        }
      }
    },
    "BeneficiaryBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryNickNames" : {
          "type" : "array",
          "description" : "Nickname of the beneficiary",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryNickName" : {
                "type" : "string",
                "description" : "Nickname of the beneficiary",
                "maxLength" : 35
              }
            }
          }
        },
        "beneficiaryBICIBANNames" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryBICIBANName" : {
                "type" : "string",
                "description" : "Contains the name of the beneficiary's BIC IBAN number",
                "maxLength" : 35
              }
            }
          }
        },
        "paymentDetails" : {
          "type" : "array",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "items" : {
            "type" : "object",
            "properties" : {
              "paymentDetail" : {
                "type" : "string",
                "description" : "Indicates the payment details for the beneficiary to apply the payment.",
                "maxLength" : 35
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "maxLength" : 35
              }
            }
          }
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "maxLength" : 30
        },
        "beneficiaryCustomerId" : {
          "type" : "string",
          "description" : "Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.",
          "maxLength" : 40
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer",
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "maxLength" : 40
        },
        "bankSortCode" : {
          "type" : "string",
          "description" : "The sort code or the national clearing code of the beneficiary bank. ",
          "maxLength" : 40
        },
        "customerReference" : {
          "type" : "string",
          "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
          "maxLength" : 40
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "maxLength" : 40
        },
        "defaultNarrative" : {
          "type" : "string",
          "description" : "The default narrative which will be provided on the debit and credit side of the payment. ",
          "maxLength" : 30
        },
        "linkToBeneficiaryId" : {
          "type" : "string",
          "description" : "For a customer defined beneficiaries, it specifies the link to bank defined beneficiaries. ",
          "maxLength" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "maxLength" : 35
        },
        "beneficiaryBICIBAN" : {
          "type" : "string",
          "description" : "Beneficiary IBAN details",
          "maxLength" : 35
        },
        "beneficiaryBICIBANCity" : {
          "type" : "string",
          "description" : "Beneficiaries city details",
          "maxLength" : 35
        },
        "preferredPaymentAmount" : {
          "type" : "number",
          "description" : "Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. "
        },
        "preferredPaymentProduct" : {
          "type" : "string",
          "description" : "Preferred payment product can be specified for Beneficiary. This will be used for defaulting the payment product for specific beneficiary. ",
          "maxLength" : 25
        },
        "accountWithBank" : {
          "type" : "string",
          "description" : "Identifies the bank where the beneficiary maintains his account",
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "maxLength" : 17
        },
        "beneficiaryOurCharges" : {
          "type" : "string",
          "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "maxLength" : 40
        },
        "paymentCountry" : {
          "type" : "string",
          "description" : "The country to which a payment is sent, usually where the beneficiary resides",
          "maxLength" : 35
        },
        "accountWithBankSortCode" : {
          "type" : "string",
          "description" : "Bank sort code details with account",
          "maxLength" : 35
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "maxLength" : 13
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "Contains the current status of the transaction. For example: 'ACCC': 'AcceptedSettlementCompleted' - Settlement on the creditor's account has been completed.'ACCP': 'AcceptedCustomerProfile' - Preceding check of technical validation was successful. Customer profile check was also successful.'CANC': 'Cancelled' Payment initiation has been cancelled before execution Remark: This codeis accepted as new code by ISO20022.'RCVD': 'Received' - Payment initiation has been received by the receiving agent."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            },
            "requestParse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "BeneficiaryResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BeneficiaryResponseBody"
        }
      },
      "description" : "BeneficiaryResponse"
    },
    "BeneficiaryResponseBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryNickNames" : {
          "type" : "array",
          "description" : "Nickname of the beneficiary",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryNickName" : {
                "type" : "string",
                "description" : "Nickname of the beneficiary",
                "maxLength" : 35
              }
            }
          }
        },
        "beneficiaryBICIBANNames" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryBICIBANName" : {
                "type" : "string",
                "description" : "Contains the name of the beneficiary's BIC IBAN number",
                "maxLength" : 35
              }
            }
          }
        },
        "paymentDetails" : {
          "type" : "array",
          "description" : "Indicates the payment details for the beneficiary to apply the payment.",
          "items" : {
            "type" : "object",
            "properties" : {
              "paymentDetail" : {
                "type" : "string",
                "description" : "Indicates the payment details for the beneficiary to apply the payment.",
                "maxLength" : 35
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "maxLength" : 35
              }
            }
          }
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "maxLength" : 30
        },
        "beneficiaryCustomerId" : {
          "type" : "string",
          "description" : "Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.",
          "maxLength" : 40
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer",
          "maxLength" : 35
        },
        "beneficiaryAccountId" : {
          "type" : "string",
          "description" : "Unique account identifier of the beneficiary account number.",
          "maxLength" : 40
        },
        "bankSortCode" : {
          "type" : "string",
          "description" : "The sort code or the national clearing code of the beneficiary bank. ",
          "maxLength" : 40
        },
        "customerReference" : {
          "type" : "string",
          "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
          "maxLength" : 40
        },
        "beneficiaryBIC" : {
          "type" : "string",
          "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
          "maxLength" : 40
        },
        "defaultNarrative" : {
          "type" : "string",
          "description" : "The default narrative which will be provided on the debit and credit side of the payment. ",
          "maxLength" : 30
        },
        "linkToBeneficiaryId" : {
          "type" : "string",
          "description" : "For a customer defined beneficiaries, it specifies the link to bank defined beneficiaries. ",
          "maxLength" : 35
        },
        "beneficiaryIBAN" : {
          "type" : "string",
          "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
          "maxLength" : 35
        },
        "beneficiaryBICIBAN" : {
          "type" : "string",
          "description" : "Beneficiary IBAN details",
          "maxLength" : 35
        },
        "beneficiaryBICIBANCity" : {
          "type" : "string",
          "description" : "Beneficiaries city details",
          "maxLength" : 35
        },
        "preferredPaymentAmount" : {
          "type" : "number",
          "description" : "Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. "
        },
        "preferredPaymentProduct" : {
          "type" : "string",
          "description" : "Preferred payment product can be specified for Beneficiary. This will be used for defaulting the payment product for specific beneficiary. ",
          "maxLength" : 25
        },
        "accountWithBank" : {
          "type" : "string",
          "description" : "Identifies the bank where the beneficiary maintains his account",
          "maxLength" : 35
        },
        "paymentCurrencyId" : {
          "type" : "string",
          "description" : "The currency of payment.",
          "maxLength" : 17
        },
        "beneficiaryOurCharges" : {
          "type" : "string",
          "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
          "maxLength" : 40
        },
        "paymentCountry" : {
          "type" : "string",
          "description" : "The country to which a payment is sent, usually where the beneficiary resides",
          "maxLength" : 35
        },
        "accountWithBankSortCode" : {
          "type" : "string",
          "description" : "Bank sort code details with account",
          "maxLength" : 35
        },
        "recordStatus" : {
          "type" : "string",
          "description" : "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
          "maxLength" : 13
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the record"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override"
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message"
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override"
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "BeneficiaryDelete" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        }
      },
      "description" : "BeneficiaryDelete"
    },
    "deleteBeneficiary" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BeneficiaryBody"
        }
      },
      "description" : "Beneficiary",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "Beneficiary BIC is missing. Only name provided",
              "id" : "FT-BIC.BEN.CODE.MISSING.NAME.GIVEN",
              "type" : "Override"
            } ]
          }
        },
        "body" : {
          "beneficiaryIBAN" : "DE89370400440532013000",
          "beneficiaryAccountId" : "",
          "beneficiaryNickNames" : [ {
            "beneficiaryNickName" : "Ozil"
          } ],
          "overrides" : [ {
            "override" : ""
          } ],
          "preferredPaymentProduct" : "",
          "beneficiaryOurCharges" : "",
          "paymentCountry" : "",
          "beneficiaryBICIBAN" : "",
          "transactionType" : "",
          "beneficiaryBICIBANNames" : [ {
            "beneficiaryBICIBANName" : "DRESDNER BANK AG"
          } ],
          "paymentCurrencyId" : "USD",
          "beneficiaryCustomerId" : "Ozil",
          "beneficiaryBIC" : "",
          "recordStatus" : "",
          "preferredPaymentAmount" : 0,
          "bankSortCode" : "",
          "customerReference" : "",
          "customerId" : "100336",
          "linkToBeneficiaryId" : "",
          "beneficiaryBICIBANCity" : "",
          "defaultNarrative" : "",
          "paymentDetails" : [ {
            "paymentDetail" : ""
          } ],
          "accountWithBankSortCode" : "",
          "accountWithBank" : ""
        }
      }
    },
    "updateBeneficiary" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BeneficiaryBody"
        }
      },
      "description" : "Beneficiary",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "Beneficiary BIC is missing. Only name provided",
              "id" : "FT-BIC.BEN.CODE.MISSING.NAME.GIVEN",
              "type" : "Override"
            } ]
          }
        },
        "body" : {
          "beneficiaryIBAN" : "DE89370400440532013000",
          "beneficiaryAccountId" : "",
          "beneficiaryNickNames" : [ {
            "beneficiaryNickName" : "Ozil"
          } ],
          "overrides" : [ {
            "override" : ""
          } ],
          "preferredPaymentProduct" : "",
          "beneficiaryOurCharges" : "",
          "paymentCountry" : "",
          "beneficiaryBICIBAN" : "",
          "transactionType" : "",
          "beneficiaryBICIBANNames" : [ {
            "beneficiaryBICIBANName" : "DRESDNER BANK AG"
          } ],
          "paymentCurrencyId" : "USD",
          "beneficiaryCustomerId" : "Ozil",
          "beneficiaryBIC" : "",
          "recordStatus" : "",
          "preferredPaymentAmount" : 0,
          "bankSortCode" : "",
          "customerReference" : "",
          "customerId" : "100336",
          "linkToBeneficiaryId" : "",
          "beneficiaryBICIBANCity" : "",
          "defaultNarrative" : "",
          "paymentDetails" : [ {
            "paymentDetail" : ""
          } ],
          "accountWithBankSortCode" : "",
          "accountWithBank" : ""
        }
      }
    }
  }
}