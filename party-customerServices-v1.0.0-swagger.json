{
  "swagger" : "2.0",
  "info" : {
    "description" : "API to create, update and manage Customer details such as delivery preferences, joint customer details, party relationships, KYC details & posting restrictions",
    "version" : "v1.0.0",
    "title" : "Party Digital Channels"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "paths" : {
    "/party/customers/{customerId}" : {
      "get" : {
        "summary" : "Retrieves list of Customer details",
        "description" : "Retrieves the Customer details such as Customer Contact Infromation, Residence details, Legal document details, Occupation details and Relationship details for the Specific Customer",
        "operationId" : "getCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Customer details",
        "description" : "Update Customer details with the Information such as Customer Contact Infromation, Residence details, Legal document details, Occupation details and Relationship details, etc provided by the User",
        "operationId" : "updateCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers" : {
      "get" : {
        "summary" : "Retrieves list of Customer basic details",
        "description" : "Retrieves the Customer details such as Delivery or Postal details, Contact Infromation, Residence details, Customer Profile, Legal document details, Occupation details and Status of Customer",
        "operationId" : "getCustomers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerName",
          "in" : "query",
          "description" : "Name of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "street",
          "in" : "query",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "town",
          "in" : "query",
          "description" : "The town associated with the address of Customer or Party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postCode",
          "in" : "query",
          "description" : "Identifies the address postal code for the customer.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirth",
          "in" : "query",
          "description" : "The date of birth of an individual customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sectorId",
          "in" : "query",
          "description" : "An institution-defined identifier of the type of customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountOfficerId",
          "in" : "query",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "industryId",
          "in" : "query",
          "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "nationalityId",
          "in" : "query",
          "description" : "The identifier of the nationality of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "residenceId",
          "in" : "query",
          "description" : "The identifier of the country of residence of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "The last name of an individual customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phoneNumber",
          "in" : "query",
          "description" : "The phone number of the customer or prospect",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomersResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomersResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a Customer",
        "description" : "Create a Customer with the Information such as Customer Contact Infromation, Residence details, Legal document details, Occupation details and Relationship details, etc provided by the User",
        "operationId" : "createCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Customer"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/relationships" : {
      "get" : {
        "summary" : "Retrieves list of Customer Relationships",
        "description" : "Retrieves customer relationship details such as Type of Relationship, Party Information, RelatedAs details, Owning details, Role & Purpose of Relationship for specific party or Customer",
        "operationId" : "getCustomerRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerRelationGroupId",
          "in" : "query",
          "description" : "Identifies the key to Customer Relationship Group to form a relation",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partyId",
          "in" : "query",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relatedPartyId",
          "in" : "query",
          "description" : "Identifier of the Related Party",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "relationId",
          "in" : "query",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRelationshipResponse1"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create Customer Relationship with other customers",
        "description" : "Create a Customer Relationship for a Customer with details such as Type of Relationship, Party Information, RelatedAs details, Owning details, Role & Purpose of Relationship",
        "operationId" : "createCustomerRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRelationshipResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/relationships/{relationId}" : {
      "put" : {
        "summary" : "Update Customer Relationship",
        "description" : "Update Customer Relationship for a Customer with details such as Type of Relationship, Party Information, Related details, Owning details, Role & Purpose of Relationship",
        "operationId" : "updateCustomerRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerRelationshipResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/reportingStatus" : {
      "get" : {
        "summary" : "Retrieves reporting status of the customer",
        "description" : "Retrieves the FATCA/CRS Reporting status and Reporting Jurisdiction of the Customer",
        "operationId" : "getCustomerReportingStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerReportingStatusResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerReportingStatusResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/sweeps" : {
      "get" : {
        "summary" : "Retrieves Account Sweep details of the specific customer",
        "description" : "Retrieves Account Sweep details such as Sweep reference, Type, Balance requirements for Sweep & Frequency of Sweep for the list of accounts available to a Customer",
        "operationId" : "getCustomerSweeps",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerSweepsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerSweepsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/deliveryOptions" : {
      "get" : {
        "summary" : "Retrieves Delivery Preferences of the Customer",
        "description" : "Retrieves the Delivery Preferences of the Customer such as the Message group, carrier and address.",
        "operationId" : "getCustomerDeliveryOptions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDeliveryOptionsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDeliveryOptionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/channels" : {
      "get" : {
        "summary" : "Retrieves list of message channels",
        "description" : "Retrieves the list of message channels such as Internet Banking, Mobile Banking, ATM, etc available for the specific customer",
        "operationId" : "getCustomerDigitalChannels",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "190092"
        }, {
          "name" : "channelName",
          "in" : "query",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDigitalChannelsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDigitalChannelsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/messages" : {
      "post" : {
        "summary" : "Create a new secure message for a Customer",
        "description" : "Create a new secure message for a Customer to be sent by bank",
        "operationId" : "createMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Messages"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "MessagesResponse",
            "schema" : {
              "$ref" : "#/definitions/MessagesResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/jointCustomers" : {
      "get" : {
        "summary" : "Retrieves Joint Customer details for a specific Customer",
        "description" : "Retrieves details such as Joint Relation code, Name, Joint Customer details and reverse relationships for a specific Customer",
        "operationId" : "getJointCustomerDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "190217"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "JointCustomerDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/JointCustomerDetailsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/KYC" : {
      "get" : {
        "summary" : "Retrieves KYC details for a specific Customer",
        "description" : "Retrieves the KYC details such as Contact Date, Introducer, Last and Next Review date, KYC and AML Status of a Customer",
        "operationId" : "getCustomerKYCDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerKYCDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerKYCDetailsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/personalProfiles" : {
      "get" : {
        "summary" : "Retrieves Personal details of Customer",
        "description" : "Retrieves Personal details such as Residence, Communication details, Occupation details, Asset & Liability information",
        "operationId" : "getCustomerPersonalDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPersonalDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPersonalDetailsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/postingRestrictions" : {
      "get" : {
        "summary" : "Retrieves Posting Restriction details",
        "description" : "Retrieves the Credit and Debit Posting Restriction details such as Restriction Reference and name of restriction set for a Customer",
        "operationId" : "getCustomerPostingRestrictions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerPostingRestrictionsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerPostingRestrictionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/relationships/{relationId}" : {
      "post" : {
        "summary" : "Create Party Relationship details",
        "description" : "Create a Party Relationship between a Person, Entity or Customer with details such as Party Name, Type, RelatedAs, Relation Code and Owning details",
        "operationId" : "createPartyRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PartyRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/PartyRelationshipResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Party Relationship details",
        "description" : "Update Party Relationship between a Person, Entity or Customer with details such as Party Name, Type, RelatedAs, Relation Code and Owning details",
        "operationId" : "updatePartyRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "relationId",
          "in" : "path",
          "description" : "Identifier of the Customer Relationship and Party Relationship",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PartyRelationship"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/PartyRelationshipResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/relationships/{partyId}" : {
      "get" : {
        "summary" : "Retrieves list of Party relationship details",
        "description" : "Retrieves the relationship details such as Party Name, Type, RelatedAs, Relation Code of a customers involved in a Relationship",
        "operationId" : "getPartyRelationship",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "partyId",
          "in" : "path",
          "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "PartyRelationshipResponse",
            "schema" : {
              "$ref" : "#/definitions/PartyRelationshipResponse1"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/cards" : {
      "get" : {
        "summary" : "Retrieves Card details of a customer",
        "description" : "Retrieves the Card details such as Card Number, Card Type and Status, linked account and its balances of a customer",
        "operationId" : "getCustomerCreditCards",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100384"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerCreditCardsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerCreditCardsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/standingOrders" : {
      "get" : {
        "summary" : "Retrieves Standing Instruction details of a customer",
        "description" : "Retrieves the list of  Standing Instructions for a Customer with details such as Instruction Reference, Order Type, frequency of Payments, Mode of Payment and Credit & Debit Parties involved",
        "operationId" : "getStandingOrders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "standingOrderId",
          "in" : "query",
          "description" : "The unique standing order identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderingCustomerId",
          "in" : "query",
          "description" : "Indicates the customer id for the ordering customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "StandingOrdersResponse",
            "schema" : {
              "$ref" : "#/definitions/StandingOrdersResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/directDebits" : {
      "get" : {
        "summary" : "Retrieves Direct Debits details of a Customer",
        "description" : "Retrieves the list of direct debits for a Customer with details such as Direct Debit Reference, debit & credit Accounts, transaction amount, payment frequency, next payment date and direction of payment",
        "operationId" : "getDirectDebits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "directDebitId",
          "in" : "query",
          "description" : "The unique identifier of the direct debit mandate. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DirectDebitsResponse",
            "schema" : {
              "$ref" : "#/definitions/DirectDebitsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{deliveryPreferenceId}/customerDeliveryPreferences" : {
      "post" : {
        "summary" : "Create Customer Delivery Preferences",
        "description" : "Creates delivery preferences for a customer or account with Message Group, Carrier, Role, Address, Email details and Format of messages",
        "operationId" : "createDeliveryPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deliveryPreferenceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeliveryPreference"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DeliveryPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/DeliveryPreferenceResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update Customer Deliver Preferences",
        "description" : "Update delivery preferences for a  customer or account with Message Group, Carrier, Role, Address & Email details, Format of messages",
        "operationId" : "updateDeliveryPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deliveryPreferenceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeliveryPreference"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DeliveryPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/DeliveryPreferenceResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/limits/{limitId}" : {
      "put" : {
        "summary" : "Update Credit Limit details for customer",
        "description" : "Updates the limit details such as currency, limit grade, commodity, country and limit product details",
        "operationId" : "updateLimit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limitId",
          "in" : "path",
          "description" : "The identifier of credit limit",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Limit"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "LimitResponse",
            "schema" : {
              "$ref" : "#/definitions/LimitResponse"
            }
          },
          "400" : {
            "description" : "BusinessScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the record"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "CustomerResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerResponseBody"
        }
      },
      "description" : "CustomerResponse"
    },
    "CustomerResponseBody" : {
      "type" : "object",
      "properties" : {
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "customerNameAdditional" : {
                "type" : "string",
                "description" : "Continuation/Extension to the Customer Name.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "communicationDevices" : {
          "type" : "array",
          "description" : "Indicates the communication details of the customer like PhoneNumber, email.",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect",
                "minLength" : 0,
                "maxLength" : 35
              },
              "smsNumber" : {
                "type" : "string",
                "description" : "The mobile SMS number of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "faxIds" : {
          "type" : "array",
          "description" : "The fax (facsimile) number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "faxId" : {
                "type" : "string",
                "description" : "The fax (facsimile) number of the customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "officePhoneNumbers" : {
          "type" : "array",
          "description" : "The office phone number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "officePhoneNumber" : {
                "type" : "string",
                "description" : "The office phone number of the customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addressCities" : {
          "type" : "array",
          "description" : "The town and/or city component of the base address of a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "addressCity" : {
                "type" : "string",
                "description" : "The town and/or city component of the base address of a customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string",
                "description" : "Identifies the country of the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "legalDetails" : {
          "type" : "array",
          "description" : "Indicates the legal document details of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "otherNationalityIds" : {
          "type" : "array",
          "description" : "Other Nationality of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherNationalityId" : {
                "type" : "string",
                "description" : "Other Nationality of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "employDetails" : {
          "type" : "array",
          "description" : "Indicates the employ details of Customer like Status, title, occupation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "employStatus" : {
                "type" : "string",
                "description" : "Employment status of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "occupation" : {
                "type" : "string",
                "description" : "Occupation of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employJobTitle" : {
                "type" : "string",
                "description" : "Employment Job Title of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employerName" : {
                "type" : "string",
                "description" : "Name of the customer's employer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employStartDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Starting date of the customer's employment"
              },
              "salaryCurrency" : {
                "type" : "string",
                "description" : "Currency in which the Salary information of the customer is maintained",
                "minLength" : 0,
                "maxLength" : 35
              },
              "salaryAmount" : {
                "type" : "number",
                "description" : "Gross Salary details of the customer",
                "minimum" : 0,
                "maximum" : 35
              }
            }
          }
        },
        "residenceDetails" : {
          "type" : "array",
          "description" : "Indicates the residence details of Customer or entity like type, status, value.",
          "items" : {
            "type" : "object",
            "properties" : {
              "residenceStatus" : {
                "type" : "string",
                "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceSince" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date since the user has obtained the residence."
              },
              "residenceType" : {
                "type" : "string",
                "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceValue" : {
                "type" : "number",
                "description" : "Market Value of the customer's residence",
                "minimum" : 0,
                "maximum" : 35
              },
              "residenceMortgageValue" : {
                "type" : "number",
                "description" : "Mortgage value of the residence property of the customer",
                "minimum" : 0,
                "maximum" : 35
              }
            }
          }
        },
        "relationshipDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "jointRelationCode" : {
                "type" : "number",
                "description" : "The identifier of the relationship between joint holder and owner ",
                "minimum" : 0,
                "maximum" : 35
              },
              "jointCustomer" : {
                "type" : "number",
                "description" : "Joint or related customer id",
                "minimum" : 0,
                "maximum" : 35
              },
              "reverseJointRelationCode" : {
                "type" : "number",
                "description" : "Relationship code for the Related Customer",
                "minimum" : 0,
                "maximum" : 35
              },
              "jointRelationRoleId" : {
                "type" : "number",
                "description" : "Role of joint customer with the main customer",
                "minimum" : 0,
                "maximum" : 35
              },
              "jointRelationRoleNote" : {
                "type" : "string",
                "description" : "Additional notes about the role",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postingRestrictIds" : {
          "type" : "array",
          "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "postingRestrictId" : {
                "type" : "number",
                "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
                "minimum" : 0,
                "maximum" : 35
              }
            }
          }
        },
        "taxIds" : {
          "type" : "array",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxId" : {
                "type" : "string",
                "description" : "Holds the Customer's TAX/SSN Id.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "language" : {
          "type" : "number",
          "description" : "The language that the contents of the field are displayed in.",
          "minimum" : 0,
          "maximum" : 35
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date of birth of an individual customer"
        },
        "customerStatus" : {
          "type" : "number",
          "description" : "The internal bank status of a customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "customerMnemonic" : {
          "type" : "string",
          "description" : "Specifies an alternative easy means of referencing the Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "nationalityId" : {
          "type" : "string",
          "description" : "The identifier of the nationality of a customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "residenceId" : {
          "type" : "string",
          "description" : "The identifier of the country of residence of a customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountOfficerId" : {
          "type" : "number",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "industryId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
          "minimum" : 0,
          "maximum" : 35
        },
        "target" : {
          "type" : "number",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minimum" : 0,
          "maximum" : 35
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "maritalStatus" : {
          "type" : "string",
          "description" : "Marital status of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "customerCompany" : {
          "type" : "string",
          "description" : "Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company",
          "minLength" : 0,
          "maxLength" : 35
        },
        "customerLiability" : {
          "type" : "number",
          "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
          "minimum" : 0,
          "maximum" : 35
        },
        "postCode" : {
          "type" : "number",
          "description" : "Identifies the address postal code for the customer.",
          "minimum" : 0,
          "maximum" : 35
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isKycComplete" : {
          "type" : "boolean",
          "description" : "Whether information related to the customer has been collected and verified"
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amlLastResultDate" : {
          "type" : "string",
          "description" : "The last date when Anti Money Laundering result is performed and updated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "title" : {
          "type" : "string",
          "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isSecureMessage" : {
          "type" : "string",
          "description" : "If 'Yes', then the customer will receive a SECURE message.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of an individual customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "givenName" : {
          "type" : "string",
          "description" : "Customer's given name",
          "minLength" : 0,
          "maxLength" : 35
        },
        "birthIncorpDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the entity is incorporated"
        },
        "domicile" : {
          "type" : "string",
          "description" : "Indicates country of domicile",
          "minLength" : 0,
          "maxLength" : 35
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 35
        },
        "overrideReason" : {
          "type" : "string",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "numberOfDependents" : {
          "type" : "number",
          "description" : "Specifies the number of dependents to the customer",
          "minimum" : 0,
          "maximum" : 35
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the record"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message for bad requests"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message caused by server"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "Customer" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerBody"
        }
      },
      "description" : "Customer"
    },
    "CustomerBody" : {
      "type" : "object",
      "properties" : {
        "displayNames" : {
          "type" : "array",
          "description" : "Contains the name used for display or enrichment purposes",
          "items" : {
            "type" : "object",
            "properties" : {
              "displayName" : {
                "type" : "string",
                "description" : "Contains the name used for display or enrichment purposes",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "customerNames" : {
          "type" : "array",
          "description" : "Name of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "customerName" : {
                "type" : "string",
                "description" : "Name of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "customerNameAdditional" : {
                "type" : "string",
                "description" : "Continuation/Extension to the Customer Name.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "communicationDevices" : {
          "type" : "array",
          "description" : "Indicates the communication details of the customer like PhoneNumber, email.",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect",
                "minLength" : 0,
                "maxLength" : 35
              },
              "smsNumber" : {
                "type" : "string",
                "description" : "The mobile SMS number of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "email" : {
                "type" : "string",
                "description" : "Email Identifier of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "communicationType" : {
                "type" : "string",
                "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "preferredChannel" : {
                "type" : "string",
                "description" : "Preferred method of contact to the customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "faxIds" : {
          "type" : "array",
          "description" : "The fax (facsimile) number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "faxId" : {
                "type" : "string",
                "description" : "The fax (facsimile) number of the customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "officePhoneNumbers" : {
          "type" : "array",
          "description" : "The office phone number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "officePhoneNumber" : {
                "type" : "string",
                "description" : "The office phone number of the customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "streets" : {
          "type" : "array",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "items" : {
            "type" : "object",
            "properties" : {
              "street" : {
                "type" : "string",
                "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "Communication Address of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "description" : "Communication Address of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "addressCities" : {
          "type" : "array",
          "description" : "The town and/or city component of the base address of a customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "addressCity" : {
                "type" : "string",
                "description" : "The town and/or city component of the base address of a customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "country" : {
                "type" : "string",
                "description" : "Identifies the country of the customer.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "legalDetails" : {
          "type" : "array",
          "description" : "Indicates the legal document details of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "legalId" : {
                "type" : "string",
                "description" : "Unique reference number of the legal documents submitted as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalDocumentName" : {
                "type" : "string",
                "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalHolderName" : {
                "type" : "string",
                "description" : "Name of the account holder in the Legal Document",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalIssueAuthorisedDate" : {
                "type" : "string",
                "description" : "Authority who issued the legal document",
                "minLength" : 0,
                "maxLength" : 35
              },
              "legalIssueDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Date of Issue of the legal document"
              },
              "legalExpiredDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Expiry date of the legal document submitted as proof"
              }
            }
          }
        },
        "otherNationalityIds" : {
          "type" : "array",
          "description" : "Other Nationality of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherNationalityId" : {
                "type" : "string",
                "description" : "Other Nationality of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "employDetails" : {
          "type" : "array",
          "description" : "Indicates the employ details of Customer like Status, title, occupation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "employStatus" : {
                "type" : "string",
                "description" : "Employment status of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "occupation" : {
                "type" : "string",
                "description" : "Occupation of the customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employJobTitle" : {
                "type" : "string",
                "description" : "Employment Job Title of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employerName" : {
                "type" : "string",
                "description" : "Name of the customer's employer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "employStartDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Starting date of the customer's employment"
              },
              "salaryCurrency" : {
                "type" : "string",
                "description" : "Currency in which the Salary information of the customer is maintained",
                "minLength" : 0,
                "maxLength" : 35
              },
              "salaryAmount" : {
                "type" : "number",
                "description" : "Gross Salary details of the customer",
                "minimum" : 0,
                "maximum" : 35
              }
            }
          }
        },
        "residenceDetails" : {
          "type" : "array",
          "description" : "Indicates the residence details of Customer or entity like type, status, value.",
          "items" : {
            "type" : "object",
            "properties" : {
              "residenceStatus" : {
                "type" : "string",
                "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceSince" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date since the user has obtained the residence."
              },
              "residenceType" : {
                "type" : "string",
                "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                "minLength" : 0,
                "maxLength" : 35
              },
              "residenceValue" : {
                "type" : "number",
                "description" : "Market Value of the customer's residence",
                "minimum" : 0,
                "maximum" : 35
              },
              "residenceMortgageValue" : {
                "type" : "number",
                "description" : "Mortgage value of the residence property of the customer",
                "minimum" : 0,
                "maximum" : 35
              }
            }
          }
        },
        "relationshipDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "jointRelationCode" : {
                "type" : "number",
                "description" : "The identifier of the relationship between joint holder and owner ",
                "minimum" : 0,
                "maximum" : 35
              },
              "jointCustomer" : {
                "type" : "number",
                "description" : "Joint or related customer id",
                "minimum" : 0,
                "maximum" : 35
              },
              "reverseJointRelationCode" : {
                "type" : "number",
                "description" : "Relationship code for the Related Customer",
                "minimum" : 0,
                "maximum" : 35
              },
              "jointRelationRoleId" : {
                "type" : "number",
                "description" : "Role of joint customer with the main customer",
                "minimum" : 0,
                "maximum" : 35
              },
              "jointRelationRoleNote" : {
                "type" : "string",
                "description" : "Additional notes about the role",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "postingRestrictIds" : {
          "type" : "array",
          "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "postingRestrictId" : {
                "type" : "number",
                "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
                "minimum" : 0,
                "maximum" : 35
              }
            }
          }
        },
        "taxIds" : {
          "type" : "array",
          "description" : "Holds the Customer's TAX/SSN Id.",
          "items" : {
            "type" : "object",
            "properties" : {
              "taxId" : {
                "type" : "string",
                "description" : "Holds the Customer's TAX/SSN Id.",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "language" : {
          "type" : "number",
          "description" : "The language that the contents of the field are displayed in.",
          "minimum" : 0,
          "maximum" : 35
        },
        "dateOfBirth" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date of birth of an individual customer"
        },
        "customerStatus" : {
          "type" : "number",
          "description" : "The internal bank status of a customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "customerMnemonic" : {
          "type" : "string",
          "description" : "Specifies an alternative easy means of referencing the Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "nationalityId" : {
          "type" : "string",
          "description" : "The identifier of the nationality of a customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "residenceId" : {
          "type" : "string",
          "description" : "The identifier of the country of residence of a customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "accountOfficerId" : {
          "type" : "number",
          "description" : "The identifier of the department head or specific account officer responsible for the customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "industryId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
          "minimum" : 0,
          "maximum" : 35
        },
        "target" : {
          "type" : "number",
          "description" : "Specifies how the Customer is considered by the bank and how he fits in with the Account Officer's overall marketing strategy",
          "minimum" : 0,
          "maximum" : 35
        },
        "sectorId" : {
          "type" : "number",
          "description" : "An institution-defined identifier of the type of customer",
          "minimum" : 0,
          "maximum" : 35
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender of the Individual Customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "maritalStatus" : {
          "type" : "string",
          "description" : "Marital status of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "customerCompany" : {
          "type" : "string",
          "description" : "Branch of the customer. Accepts the id of the COMPANY which shares customer with currently signed in company",
          "minLength" : 0,
          "maxLength" : 35
        },
        "customerLiability" : {
          "type" : "number",
          "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
          "minimum" : 0,
          "maximum" : 35
        },
        "postCode" : {
          "type" : "number",
          "description" : "Identifies the address postal code for the customer.",
          "minimum" : 0,
          "maximum" : 35
        },
        "contactDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date that first contact was made with the Customer."
        },
        "introducer" : {
          "type" : "string",
          "description" : "Name of the person who introduced the Customer to the bank",
          "minLength" : 0,
          "maxLength" : 35
        },
        "kycRelationship" : {
          "type" : "string",
          "description" : "Indicates the Customer Relationship details of the customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isKycComplete" : {
          "type" : "boolean",
          "description" : "Whether information related to the customer has been collected and verified"
        },
        "kycLastReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date customer KYC information was last reviewed"
        },
        "kycNextSystemReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date system has calculated customer should next be reviewed."
        },
        "kycNextReviewDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Next date of KYC review defined manually by the User"
        },
        "amlCheck" : {
          "type" : "string",
          "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amlResult" : {
          "type" : "string",
          "description" : "Describe the results of Anti Money Laundering.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "amlLastResultDate" : {
          "type" : "string",
          "description" : "The last date when Anti Money Laundering result is performed and updated",
          "minLength" : 0,
          "maxLength" : 35
        },
        "title" : {
          "type" : "string",
          "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "isSecureMessage" : {
          "type" : "string",
          "description" : "If 'Yes', then the customer will receive a SECURE message.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "lastName" : {
          "type" : "string",
          "description" : "The last name of an individual customer",
          "minLength" : 0,
          "maxLength" : 35
        },
        "givenName" : {
          "type" : "string",
          "description" : "Customer's given name",
          "minLength" : 0,
          "maxLength" : 35
        },
        "birthIncorpDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the entity is incorporated"
        },
        "domicile" : {
          "type" : "string",
          "description" : "Indicates country of domicile",
          "minLength" : 0,
          "maxLength" : 35
        },
        "manualRiskClass" : {
          "type" : "string",
          "description" : "Customer's risk class updated manually by the User overriding the risk class calculated by the KYC process",
          "minLength" : 0,
          "maxLength" : 35
        },
        "overrideReason" : {
          "type" : "string",
          "description" : "Reason for changing the customer's risk class from the calculated risk class.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "numberOfDependents" : {
          "type" : "number",
          "description" : "Specifies the number of dependents to the customer",
          "minimum" : 0,
          "maximum" : 35
        }
      }
    },
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "CustomersResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomersResponseBody"
        }
      },
      "description" : "CustomersResponse"
    },
    "CustomersResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "streets" : {
            "type" : "array",
            "description" : "Contains the first line of customer's base address, example building number, street number etc.",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string",
                  "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                  "maxLength" : 35
                }
              }
            }
          },
          "communicationDevices" : {
            "type" : "array",
            "description" : "Indicates the communication details of the customer like PhoneNumber, email.",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumber" : {
                  "type" : "string",
                  "description" : "The phone number of the customer or prospect",
                  "maxLength" : 17
                },
                "smsNumber" : {
                  "type" : "string",
                  "description" : "The mobile SMS number of the customer",
                  "maxLength" : 17
                },
                "email" : {
                  "type" : "string",
                  "description" : "Email Identifier of the Customer",
                  "maxLength" : 50
                }
              }
            }
          },
          "officePhoneNumbers" : {
            "type" : "array",
            "description" : "The office phone number of the customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "officePhoneNumber" : {
                  "type" : "string",
                  "description" : "The office phone number of the customer",
                  "maxLength" : 17
                }
              }
            }
          },
          "addressDetails" : {
            "type" : "array",
            "description" : "Additional address information, e.g. Contact Person. Building, Floor, Apartment, Street Number, Street Name, Town, Area, Code",
            "items" : {
              "type" : "object",
              "properties" : {
                "address" : {
                  "type" : "string",
                  "description" : "Communication Address of the Customer",
                  "maxLength" : 35
                }
              }
            }
          },
          "addressCities" : {
            "type" : "array",
            "description" : "The town and/or city component of the base address of a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "addressCity" : {
                  "type" : "string",
                  "description" : "The town and/or city component of the base address of a customer",
                  "maxLength" : 35
                }
              }
            }
          },
          "postCodes" : {
            "type" : "array",
            "description" : "Identifies the address postal code for the customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "postCode" : {
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer.",
                  "maxLength" : 35
                }
              }
            }
          },
          "countries" : {
            "type" : "array",
            "description" : "Identifies the country of the customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "country" : {
                  "type" : "string",
                  "description" : "Identifies the country of the customer.",
                  "maxLength" : 35
                }
              }
            }
          },
          "vulnerabilities" : {
            "type" : "array",
            "description" : "The type of vulnerability (physical impairment) the customer had.",
            "items" : {
              "type" : "object",
              "properties" : {
                "vulnerability" : {
                  "type" : "string",
                  "description" : "The type of vulnerability (physical impairment) the customer had.",
                  "maxLength" : 35
                }
              }
            }
          },
          "profileTypes" : {
            "type" : "array",
            "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
            "items" : {
              "type" : "object",
              "properties" : {
                "profileType" : {
                  "type" : "string",
                  "description" : "Identifies the type of profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                  "maxLength" : 35
                },
                "profileTypeName" : {
                  "type" : "string",
                  "description" : "Specifies the description of the profile Type.",
                  "maxLength" : 35
                },
                "profile" : {
                  "type" : "string",
                  "description" : "Identifies the profile that can be assigned to the customer. Bank needs to profile its clients in order to be effective in cross selling and campaign management.",
                  "maxLength" : 35
                },
                "profileName" : {
                  "type" : "string",
                  "description" : "Specifies the description of the profile.",
                  "maxLength" : 35
                }
              }
            }
          },
          "legalDetails" : {
            "type" : "array",
            "description" : "Indicates the legal document details of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "legalId" : {
                  "type" : "string",
                  "description" : "Unique reference number of the legal documents submitted as identification proof",
                  "maxLength" : 35
                },
                "legalDocumentName" : {
                  "type" : "string",
                  "description" : "Name of the legal documents such as passport, driving licence etc., provided as identification proof",
                  "maxLength" : 35
                },
                "legalHolderName" : {
                  "type" : "string",
                  "description" : "Name of the account holder in the Legal Document",
                  "maxLength" : 100
                },
                "legalIssueAuthorisedDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Authority who issued the legal document"
                },
                "legalIssueDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Date of Issue of the legal document"
                },
                "legalExpiredDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Expiry date of the legal document submitted as proof"
                }
              }
            }
          },
          "otherNationalityIds" : {
            "type" : "array",
            "description" : "Other Nationality of the Customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "otherNationalityId" : {
                  "type" : "string",
                  "description" : "Other Nationality of the Customer",
                  "maxLength" : 9
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 35
          },
          "faxId" : {
            "type" : "string",
            "description" : "The fax (facsimile) number of the customer",
            "maxLength" : 17
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of birth of an individual customer"
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
            "maxLength" : 4
          },
          "statusName" : {
            "type" : "string",
            "description" : "An institution-defined high level description or segmentation of the customer",
            "maxLength" : 4
          },
          "customerMnemonic" : {
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer",
            "maxLength" : 10
          },
          "nationalityId" : {
            "type" : "string",
            "description" : "The identifier of the nationality of a customer",
            "maxLength" : 2
          },
          "nationalityName" : {
            "type" : "string",
            "description" : "Name of the Nationality of the Customer",
            "maxLength" : 2
          },
          "residenceId" : {
            "type" : "string",
            "description" : "The identifier of the country of residence of a customer",
            "maxLength" : 2
          },
          "accountOfficerId" : {
            "type" : "number",
            "description" : "The identifier of the department head or specific account officer responsible for the customer",
            "maximum" : 4
          },
          "industryId" : {
            "type" : "number",
            "description" : "An institution-defined identifier of the industry in which the customer is trading, operating or is associated with",
            "maximum" : 4
          },
          "sectorId" : {
            "type" : "number",
            "description" : "An institution-defined identifier of the type of customer",
            "maximum" : 4
          },
          "lastName" : {
            "type" : "string",
            "description" : "The last name of an individual customer",
            "maxLength" : 50
          },
          "accountOfficerName" : {
            "type" : "string",
            "description" : "Name of the Account/Relationship Officer attached to the Customer",
            "maxLength" : 4
          },
          "title" : {
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
            "maxLength" : 15
          },
          "gender" : {
            "type" : "string",
            "description" : "Gender of the Individual Customer",
            "maxLength" : 10
          },
          "sectorName" : {
            "type" : "string",
            "description" : "An institution-defined identifier of the type of customer",
            "maxLength" : 4
          },
          "targetName" : {
            "type" : "string",
            "description" : "Describes the target in an abbreviated form which can be used for reporting when space is limited.This can be expanded to allow the User to enter a short description of the Target code in various languages. ",
            "maxLength" : 4
          },
          "maritalStatus" : {
            "type" : "string",
            "description" : "Marital status of the customer",
            "maxLength" : 15
          },
          "industryName" : {
            "type" : "string",
            "description" : "Industry associated with the Customer",
            "maxLength" : 4
          },
          "residenceName" : {
            "type" : "string",
            "description" : "Name of the residence country.",
            "maxLength" : 2
          },
          "dateOfDeath" : {
            "type" : "string",
            "format" : "date",
            "description" : "The death date of customer."
          },
          "notificationDateOfDeath" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which the bank gets the notification that the customer is dead."
          },
          "companyId" : {
            "type" : "string",
            "description" : "The identifier of the underlying Entity/Company/Branch.",
            "maxLength" : 11
          },
          "customerLiability" : {
            "type" : "string",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country.",
            "maxLength" : 10
          }
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message "
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "CustomerRelationship" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRelationshipBody"
        }
      },
      "description" : "CustomerRelationship"
    },
    "CustomerRelationshipBody" : {
      "type" : "object",
      "properties" : {
        "originatingRelation" : {
          "type" : "array",
          "description" : "Details about the Customer Relationships and Party Relationships",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationReference" : {
                "type" : "string",
                "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "party" : {
                "type" : "string",
                "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyRelation" : {
                "type" : "string",
                "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Indicates the role of a customer or party, Eg: Benefial Owner, Nominee etc",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyEffectiveDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Effective date from which there is a relationship between originating party and the portfolio."
              },
              "relationships" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "relatedRelationReference" : {
                      "type" : "string",
                      "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedParty" : {
                      "type" : "string",
                      "description" : "Identifier of the Related Party",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyId" : {
                      "type" : "string",
                      "description" : "Identifier of the Related Party",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyRelation" : {
                      "type" : "string",
                      "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyRole" : {
                      "type" : "string",
                      "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyEffectiveDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "To state the effective date of the relationship."
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              }
            }
          }
        },
        "customerRelationGroupId" : {
          "type" : "number",
          "description" : "Identifies the key to Customer Relationship Group to form a relation",
          "minimum" : 0,
          "maximum" : 35
        },
        "customerRelationGroupName" : {
          "type" : "string",
          "description" : "Name of a Customer Relationship Group if applicable to the relationship.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "purposeOfRelationship" : {
          "type" : "string",
          "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerRelationshipResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRelationshipResponseBody"
        }
      },
      "description" : "CustomerRelationshipResponse"
    },
    "CustomerRelationshipResponseBody" : {
      "type" : "object",
      "properties" : {
        "originatingRelation" : {
          "type" : "array",
          "description" : "Details about the Customer Relationships and Party Relationships",
          "items" : {
            "type" : "object",
            "properties" : {
              "relationReference" : {
                "type" : "string",
                "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "party" : {
                "type" : "string",
                "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyRelation" : {
                "type" : "string",
                "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyRole" : {
                "type" : "string",
                "description" : "Indicates the role of a customer or party, Eg: Benefial Owner, Nominee etc",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyEffectiveDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Effective date from which there is a relationship between originating party and the portfolio."
              },
              "relationships" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "relatedRelationReference" : {
                      "type" : "string",
                      "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedParty" : {
                      "type" : "string",
                      "description" : "Identifier of the Related Party",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyId" : {
                      "type" : "string",
                      "description" : "Identifier of the Related Party",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyRelation" : {
                      "type" : "string",
                      "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyRole" : {
                      "type" : "string",
                      "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "relatedPartyEffectiveDate" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "To state the effective date of the relationship."
                    },
                    "owningPercent" : {
                      "type" : "string",
                      "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                      "minLength" : 0,
                      "maxLength" : 35
                    }
                  }
                }
              }
            }
          }
        },
        "customerRelationGroupId" : {
          "type" : "number",
          "description" : "Identifies the key to Customer Relationship Group to form a relation",
          "minimum" : 0,
          "maximum" : 35
        },
        "customerRelationGroupName" : {
          "type" : "string",
          "description" : "Name of a Customer Relationship Group if applicable to the relationship.",
          "minLength" : 0,
          "maxLength" : 35
        },
        "purposeOfRelationship" : {
          "type" : "string",
          "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "CustomerRelationshipResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerRelationshipResponse1Body"
        }
      },
      "description" : "CustomerRelationshipResponse1"
    },
    "CustomerRelationshipResponse1Body" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "originatingRelation" : {
            "type" : "array",
            "description" : "Details about the Customer Relationships and Party Relationships",
            "items" : {
              "type" : "object",
              "properties" : {
                "relationReference" : {
                  "type" : "string",
                  "description" : "Customer Relationship of originating party. It is used in conjunction with the relatedRelationReference attribute.",
                  "maxLength" : 35
                },
                "party" : {
                  "type" : "string",
                  "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
                  "maxLength" : 35
                },
                "partyId" : {
                  "type" : "string",
                  "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                  "maxLength" : 10
                },
                "owningPercent" : {
                  "type" : "string",
                  "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                  "maxLength" : 6
                },
                "partyRelation" : {
                  "type" : "string",
                  "description" : "Originating Party's relationship to the underlying portfolio. Should be a valid relationship.",
                  "maxLength" : 35
                },
                "partyRole" : {
                  "type" : "string",
                  "description" : "Indicates the role of a customer or party, Eg: Benefial Owner, Nominee etc",
                  "maxLength" : 20
                },
                "partyEffectiveDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Effective date from which there is a relationship between originating party and the portfolio."
                },
                "relationships" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "relatedRelationReference" : {
                        "type" : "string",
                        "description" : "To relate the Customer Relationship between Originating party and other parties. It is used in conjunction with the relationReference attribute",
                        "maxLength" : 35
                      },
                      "relatedParty" : {
                        "type" : "string",
                        "description" : "Identifier of the Related Party",
                        "maxLength" : 35
                      },
                      "relatedPartyId" : {
                        "type" : "string",
                        "description" : "Identifier of the Related Party",
                        "maxLength" : 10
                      },
                      "relatedPartyRelation" : {
                        "type" : "string",
                        "description" : "The relation between the originating party and the related party.For Example:Mother, Daughter",
                        "maxLength" : 3
                      },
                      "relatedPartyRole" : {
                        "type" : "string",
                        "description" : "To define the role of the related party.For example: SOLICITOR, AUTHORISED SIGNATORY and POWER OF ATTORNEY",
                        "maxLength" : 20
                      },
                      "relatedPartyEffectiveDate" : {
                        "type" : "string",
                        "format" : "date",
                        "description" : "To state the effective date of the relationship."
                      },
                      "owningPercent" : {
                        "type" : "string",
                        "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                        "maxLength" : 6
                      }
                    }
                  }
                }
              }
            }
          },
          "relationId" : {
            "type" : "string",
            "description" : "Identifier of the Customer Relationship and Party Relationship",
            "maxLength" : 35
          },
          "customerRelationGroupId" : {
            "type" : "string",
            "description" : "Identifies the key to Customer Relationship Group to form a relation",
            "maxLength" : 15
          },
          "customerRelationGroupName" : {
            "type" : "string",
            "description" : "Name of a Customer Relationship Group if applicable to the relationship.",
            "maxLength" : 40
          },
          "purposeOfRelationship" : {
            "type" : "string",
            "description" : "The purpose of the relationship between the Originating Party and the Related Party. Valid options - TAX, LIMIT, ADVICES, OTHERS or can be left blank",
            "maxLength" : 35
          }
        }
      }
    },
    "CustomerReportingStatusResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerReportingStatusResponseBody"
        }
      },
      "description" : "CustomerReportingStatusResponse"
    },
    "CustomerReportingStatusResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "crsStatuses" : {
            "type" : "array",
            "description" : "Holds the status of the customer as Reportable or Non-reportable.",
            "items" : {
              "type" : "object",
              "properties" : {
                "crsStatus" : {
                  "type" : "array",
                  "description" : "Holds the status of the customer as Reportable or Non-reportable.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "reportableJurisdictions" : {
            "type" : "array",
            "description" : "Indicates the residences of the participating jurisdictions of the reporting customer.",
            "items" : {
              "type" : "object",
              "properties" : {
                "reportableJurisdiction" : {
                  "type" : "array",
                  "description" : "Indicates the residences of the participating jurisdictions of the reporting customer.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "fatcaStatus" : {
            "type" : "string",
            "description" : "Specifies the Fatca status or Account Classification of the client. ",
            "maxLength" : 2
          },
          "postingRestriction" : {
            "type" : "string",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account"
          },
          "amlResult" : {
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering."
          }
        }
      }
    },
    "CustomerSweepsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerSweepsResponseBody"
        }
      },
      "description" : "CustomerSweepsResponse"
    },
    "CustomerSweepsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "toAccountDetails" : {
            "type" : "array",
            "description" : "Creditor unique account details",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "accountName" : {
                  "type" : "string",
                  "description" : "Display name or short name of the account specified."
                },
                "accountCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the account. For example: USD, GBP."
                },
                "minimumBalance" : {
                  "type" : "string",
                  "description" : "The minimum account balance required"
                },
                "maximumBalance" : {
                  "type" : "string",
                  "description" : "The maximum account balance allowed"
                }
              }
            }
          },
          "fromAccountDetails" : {
            "type" : "array",
            "description" : "Debit account details for sweep record",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "accountName" : {
                  "type" : "string",
                  "description" : "Display name or short name of the account specified."
                },
                "accountCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the account. For example: USD, GBP."
                }
              }
            }
          },
          "sweepId" : {
            "type" : "string",
            "description" : "Identifier of the Retail account sweep",
            "maxLength" : 35
          },
          "sweepType" : {
            "type" : "string",
            "description" : "Sweep types defined to the user"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction."
          },
          "chargeId" : {
            "type" : "string",
            "description" : "This indicates the charge code which will be triggered for payment stop instruction. Applicable when financial institutions would like to charge for stop payment of cheque etc. "
          },
          "chargeAmount" : {
            "type" : "string",
            "description" : "Retrieves the Charge Amount after redeem"
          },
          "chargeAccountId" : {
            "type" : "string",
            "description" : "Indicates the account to which the charges has to be levied. Used when charges are to be taken from a separate account"
          }
        }
      }
    },
    "CustomerDeliveryOptionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryOptionsResponseBody"
        }
      },
      "description" : "CustomerDeliveryOptionsResponse"
    },
    "CustomerDeliveryOptionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "deliveryPreferences" : {
            "type" : "array",
            "description" : "Indicates the customer delivery preferences like message group, carrier, address.",
            "items" : {
              "type" : "object",
              "properties" : {
                "messageGroup" : {
                  "type" : "string",
                  "description" : "Message group name that provides details of all Messages to be triggered.",
                  "maxLength" : 35
                },
                "carrier" : {
                  "type" : "string",
                  "description" : "Carrier to be used for sending messages",
                  "maxLength" : 10
                },
                "isRequired" : {
                  "type" : "boolean",
                  "description" : "Indicates if the related delivery carrier details will be added or removed as a preferred carrier for communication"
                },
                "address" : {
                  "type" : "string",
                  "description" : "Communication Address of the Customer",
                  "maxLength" : 3
                }
              }
            }
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 35
          }
        }
      }
    },
    "CustomerDigitalChannelsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDigitalChannelsResponseBody"
        }
      },
      "description" : "CustomerDigitalChannelsResponse"
    },
    "CustomerDigitalChannelsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "digitalChannels" : {
            "type" : "array",
            "description" : "Specific channels details for a customer",
            "items" : {
              "type" : "object",
              "properties" : {
                "channelName" : {
                  "type" : "string",
                  "description" : "Name of the (digital) channel registered by the Customer",
                  "maxLength" : 20
                },
                "status" : {
                  "type" : "string",
                  "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
                  "maxLength" : 35
                },
                "productLine" : {
                  "type" : "string",
                  "description" : "Indicates a Financial Line, Eg: Loans,Deposits,Accounts etc.",
                  "maxLength" : 35
                },
                "arrangementId" : {
                  "type" : "string",
                  "description" : "Indicates an unique identifier of an account",
                  "maxLength" : 35
                },
                "startDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Contains the date on which the transaction or payment gets initiated."
                },
                "endDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
                },
                "userType" : {
                  "type" : "string",
                  "description" : "The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL",
                  "maxLength" : 12
                },
                "loginMethod" : {
                  "type" : "string",
                  "description" : "The type of login method e.g. password, PIN, OTP",
                  "maxLength" : 20
                },
                "lastSignOnDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Last date and time the user last logged in."
                }
              }
            }
          },
          "isInternetBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the internet banking service or not."
          },
          "isMobileBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not."
          },
          "externalUserId" : {
            "type" : "string",
            "description" : "Contains the external user identifier for which the consent is created.",
            "maxLength" : 70
          },
          "externalUserName" : {
            "type" : "string",
            "description" : "External or Digital Channel User Name",
            "maxLength" : 70
          },
          "authenticationType" : {
            "type" : "string",
            "description" : "The type of authentication for this external user. It should be either External or User Maintained.",
            "maxLength" : 35
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 10
          }
        }
      }
    },
    "Messages" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MessagesBody"
        }
      },
      "description" : "Messages"
    },
    "MessagesBody" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "type" : "array",
          "description" : "Specifies the record ID of parent message. ",
          "items" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message ",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "subject" : {
          "type" : "string",
          "description" : "The subject of the message to be sent or received.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "toCustomerId" : {
          "type" : "string",
          "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent",
          "minLength" : 0,
          "maxLength" : 12
        }
      }
    },
    "MessagesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MessagesResponseBody"
        }
      },
      "description" : "MessagesResponse"
    },
    "MessagesResponseBody" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "type" : "array",
          "description" : "Specifies the record ID of parent message. ",
          "items" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message ",
                "minLength" : 0,
                "maxLength" : 7
              }
            }
          }
        },
        "subject" : {
          "type" : "string",
          "description" : "The subject of the message to be sent or received.",
          "minLength" : 0,
          "maxLength" : 7
        },
        "toCustomerId" : {
          "type" : "string",
          "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent",
          "minLength" : 0,
          "maxLength" : 12
        }
      }
    },
    "JointCustomerDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/JointCustomerDetailsResponseBody"
        }
      },
      "description" : "JointCustomerDetailsResponse"
    },
    "JointCustomerDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "jointCustomerDetails" : {
            "type" : "array",
            "description" : "Identifies the details of Customer in a Joint Relationship",
            "items" : {
              "type" : "object",
              "properties" : {
                "jointRelationCode" : {
                  "type" : "number",
                  "description" : "The identifier of the relationship between joint holder and owner ",
                  "maximum" : 3
                },
                "jointRelationDisplayName" : {
                  "type" : "string",
                  "description" : "Display name of Joint Relationship identifier",
                  "maxLength" : 3
                },
                "jointCustomer" : {
                  "type" : "number",
                  "description" : "Joint or related customer id",
                  "maximum" : 10
                },
                "jointCustomerName" : {
                  "type" : "string",
                  "description" : "Name of Joint Customer",
                  "maxLength" : 10
                },
                "reverseJointRelationCode" : {
                  "type" : "number",
                  "description" : "Relationship code for the Related Customer",
                  "maximum" : 3
                },
                "reverseJointRelationName" : {
                  "type" : "string",
                  "description" : "Describes the Relation code and is used for the enrichment of the code for reverse joint relation.",
                  "maxLength" : 3
                },
                "deliveryOption" : {
                  "type" : "array",
                  "description" : "Identifes the delivery options available to the customer",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "jointRelationRoleId" : {
                        "type" : "number",
                        "description" : "Role of joint customer with the main customer",
                        "maximum" : 20
                      },
                      "jointRoleDisplayName" : {
                        "type" : "string",
                        "description" : "Description of the joint customer role.",
                        "maxLength" : 20
                      },
                      "jointRelationRoleNotes" : {
                        "type" : "string",
                        "description" : "Additional notes about the role",
                        "maxLength" : 35
                      },
                      "jointRelationDeliveryOption" : {
                        "type" : "string",
                        "description" : "This is used to specify what delivery addressing is to be used for the link customer. ",
                        "maxLength" : 8
                      },
                      "jointRelationRoleInfo" : {
                        "type" : "string",
                        "description" : "Additional information of the role.",
                        "maxLength" : 35
                      }
                    }
                  }
                }
              }
            }
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          }
        }
      }
    },
    "CustomerKYCDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerKYCDetailsResponseBody"
        }
      },
      "description" : "CustomerKYCDetailsResponse"
    },
    "CustomerKYCDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "contactDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date that first contact was made with the Customer."
          },
          "introducer" : {
            "type" : "string",
            "description" : "Name of the person who introduced the Customer to the bank",
            "maxLength" : 35
          },
          "kycRelationship" : {
            "type" : "string",
            "description" : "Indicates the Customer Relationship details of the customer",
            "maxLength" : 35
          },
          "isKycComplete" : {
            "type" : "boolean",
            "description" : "Whether information related to the customer has been collected and verified"
          },
          "kycLastReviewDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date customer KYC information was last reviewed"
          },
          "kycNextSystemReviewDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date system has calculated customer should next be reviewed."
          },
          "kycNextReviewDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Next date of KYC review defined manually by the User"
          },
          "amlCheck" : {
            "type" : "string",
            "description" : "Describe the legal controls that is required by institutions to prevent or report Anti Money Laundering activities. It can have YES, SENT or NULL values.",
            "maxLength" : 4
          },
          "amlResult" : {
            "type" : "string",
            "description" : "Describe the results of Anti Money Laundering.",
            "maxLength" : 14
          },
          "amlLastResultDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The last date when Anti Money Laundering result is performed and updated"
          }
        }
      }
    },
    "CustomerPersonalDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPersonalDetailsResponseBody"
        }
      },
      "description" : "CustomerPersonalDetailsResponse"
    },
    "CustomerPersonalDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "employDetails" : {
            "type" : "array",
            "description" : "Indicates the employ details of Customer like Status, title, occupation.",
            "items" : {
              "type" : "object",
              "properties" : {
                "employStatus" : {
                  "type" : "string",
                  "description" : "Employment status of the customer",
                  "maxLength" : 35
                },
                "occupation" : {
                  "type" : "string",
                  "description" : "Occupation of the customer",
                  "maxLength" : 35
                },
                "employJobTitle" : {
                  "type" : "string",
                  "description" : "Employment Job Title of the Customer",
                  "maxLength" : 10
                },
                "employerName" : {
                  "type" : "string",
                  "description" : "Name of the customer's employer",
                  "maxLength" : 35
                },
                "employStartDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Starting date of the customer's employment"
                },
                "salaryCurrency" : {
                  "type" : "string",
                  "description" : "Currency in which the Salary information of the customer is maintained",
                  "maxLength" : 3
                },
                "salaryAmount" : {
                  "type" : "number",
                  "description" : "Gross Salary details of the customer",
                  "maximum" : 19
                },
                "employerBusiness" : {
                  "type" : "string",
                  "description" : "The business of customer's employer involved.",
                  "maxLength" : 35
                },
                "annualBonus" : {
                  "type" : "number",
                  "description" : "Indicates the Annual bonus received by customer",
                  "maximum" : 19
                },
                "salaryFrequency" : {
                  "type" : "string",
                  "description" : "Indicates the payment frequency of salary.",
                  "maxLength" : 17
                },
                "netMonthlyIncome" : {
                  "type" : "string",
                  "description" : "Net income earned by customer each month.",
                  "maxLength" : 19
                },
                "netMonthlyExpense" : {
                  "type" : "string",
                  "description" : "Net expenses of customer each month.",
                  "maxLength" : 19
                },
                "Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "employerAddress" : {
                        "type" : "string",
                        "description" : "The address of the customer's employer.",
                        "maxLength" : 35
                      }
                    }
                  }
                }
              }
            }
          },
          "residenceDetails" : {
            "type" : "array",
            "description" : "Indicates the residence details of Customer or entity like type, status, value.",
            "items" : {
              "type" : "object",
              "properties" : {
                "residenceStatus" : {
                  "type" : "string",
                  "description" : "Residence Status of the Customer for CRM purpose like Owner, Tenant, Householder, Nester etc.",
                  "maxLength" : 35
                },
                "residenceType" : {
                  "type" : "string",
                  "description" : "Residence type of the customer like Farmhouse, Independent house, Residential Apartment, Serviced Apartments",
                  "maxLength" : 35
                },
                "residenceValue" : {
                  "type" : "number",
                  "description" : "Market Value of the customer's residence",
                  "maximum" : 19
                },
                "residenceMortgageValue" : {
                  "type" : "number",
                  "description" : "Mortgage value of the residence property of the customer",
                  "maximum" : 19
                },
                "residenceSince" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "The date since the user has obtained the residence."
                }
              }
            }
          },
          "communicationDevice" : {
            "type" : "array",
            "description" : "Indicates the communication details of the customer like PhoneNumber, email.",
            "items" : {
              "type" : "object",
              "properties" : {
                "communicationType" : {
                  "type" : "string",
                  "description" : "Communication type to the customer, as defined by the institution. E.g. Proposal, Alert, Campaign, New Product Update, Robinson List, Statement.",
                  "maxLength" : 35
                },
                "preferredChannel" : {
                  "type" : "string",
                  "description" : "Preferred method of contact to the customer",
                  "maxLength" : 20
                }
              }
            }
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 35
          },
          "isSecureMessage" : {
            "type" : "boolean",
            "description" : "If 'Yes', then the customer will receive a SECURE message."
          },
          "isInternetBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the internet banking service or not."
          },
          "isMobileBankingService" : {
            "type" : "boolean",
            "description" : "Indicates whether is Customer is subscribed to the mobile banking service or not."
          },
          "customerSegment" : {
            "type" : "string",
            "description" : "Segment of the customer.",
            "maxLength" : 6
          },
          "customerVisitCount" : {
            "type" : "number",
            "description" : "Count of the Number of visits to the bank."
          },
          "customerRecentVisitDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Recently visited date of the customer to the bank."
          },
          "assetCurrency" : {
            "type" : "string",
            "description" : "Currency of the asset."
          },
          "assetAmount" : {
            "type" : "number",
            "description" : "The asset amount."
          },
          "customerLiability" : {
            "type" : "string",
            "description" : "Indicates the customer consolidation number for credit grouping purposes, within the same branch/country."
          }
        }
      }
    },
    "CustomerPostingRestrictionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerPostingRestrictionsResponseBody"
        }
      },
      "description" : "CustomerPostingRestrictionsResponse"
    },
    "CustomerPostingRestrictionsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "postingRestricts" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "type" : "string",
                  "description" : "Name of the customer",
                  "maxLength" : 35
                },
                "postingRestrictId" : {
                  "type" : "string",
                  "description" : "Identifies any restrictions for posting entries that are imposed on a Customer",
                  "maxLength" : 2
                },
                "postingRestrictDisplayName" : {
                  "type" : "string",
                  "description" : "Display name of Posting Restriction, if any, applicable for the customer",
                  "maxLength" : 2
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          }
        }
      }
    },
    "PartyRelationship" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PartyRelationshipBody"
        }
      },
      "description" : "PartyRelationship"
    },
    "PartyRelationshipBody" : {
      "type" : "object",
      "properties" : {
        "partyDisplayNames" : {
          "type" : "array",
          "description" : "A description of the Party Relationship",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyDisplayName" : {
                "type" : "string",
                "description" : "A description of the Party Relationship",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "partyRelationships" : {
          "type" : "array",
          "description" : "Indicates the party relationship details of Person,Entity or Customer like party type, party relation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyType" : {
                "type" : "string",
                "description" : "Indicates the type of customer which is part of the relationship. It may be Customer, Person or Entity.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relatedPartyType" : {
                "type" : "string",
                "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relatedAs" : {
                "type" : "string",
                "description" : "Entity Relationship with the partyType",
                "minLength" : 0,
                "maxLength" : 35
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        }
      }
    },
    "PartyRelationshipResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PartyRelationshipResponseBody"
        }
      },
      "description" : "PartyRelationshipResponse"
    },
    "PartyRelationshipResponseBody" : {
      "type" : "object",
      "properties" : {
        "partyDisplayNames" : {
          "type" : "array",
          "description" : "A description of the Party Relationship",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyDisplayName" : {
                "type" : "string",
                "description" : "A description of the Party Relationship",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        },
        "partyRelationships" : {
          "type" : "array",
          "description" : "Indicates the party relationship details of Person,Entity or Customer like party type, party relation.",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyType" : {
                "type" : "string",
                "description" : "Indicates the type of customer which is part of the relationship. It may be Customer, Person or Entity.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "partyId" : {
                "type" : "string",
                "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relatedPartyType" : {
                "type" : "string",
                "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relationPartyId" : {
                "type" : "string",
                "description" : "Related customers or persons/entities that are part of the relationship.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relationshipCode" : {
                "type" : "string",
                "description" : "Relationship identifier between the partyType and relatedPartyType",
                "minLength" : 0,
                "maxLength" : 35
              },
              "relatedAs" : {
                "type" : "string",
                "description" : "Entity Relationship with the partyType",
                "minLength" : 0,
                "maxLength" : 35
              },
              "owningPercent" : {
                "type" : "string",
                "description" : "Used to record the percentage of ownership in the relationship. For example an entity may be partially or wholly owned by another entity. This will only be allowed to be entered if the relation is indicated as a type allowing Ownership",
                "minLength" : 0,
                "maxLength" : 35
              }
            }
          }
        }
      }
    },
    "PartyRelationshipResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/PartyRelationshipResponse1Body"
        }
      },
      "description" : "PartyRelationshipResponse1"
    },
    "PartyRelationshipResponse1Body" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "relationshipDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "relationPartyId" : {
                  "type" : "string",
                  "description" : "Related customers or persons/entities that are part of the relationship.",
                  "maxLength" : 20
                },
                "relatedPartyName" : {
                  "type" : "string",
                  "description" : "Name of the Party related to the Customer",
                  "maxLength" : 20
                },
                "relatedPartyType" : {
                  "type" : "string",
                  "description" : "Indicates the related party's customer type. It may be Customer, Person or Entity.",
                  "maxLength" : 10
                },
                "relatedAs" : {
                  "type" : "string",
                  "description" : "Entity Relationship with the partyType",
                  "maxLength" : 13
                },
                "relationshipCode" : {
                  "type" : "string",
                  "description" : "Relationship identifier between the partyType and relatedPartyType",
                  "maxLength" : 3
                },
                "relationship" : {
                  "type" : "string",
                  "description" : "Details about the Customer Relationships and Party Relationships",
                  "maxLength" : 3
                }
              }
            }
          },
          "partyRelationshipId" : {
            "type" : "string",
            "description" : "Party Relationship identifier",
            "maxLength" : 35
          }
        }
      }
    },
    "CustomerCreditCardsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerCreditCardsResponseBody"
        }
      },
      "description" : "CustomerCreditCardsResponse"
    },
    "CustomerCreditCardsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
            "maxLength" : 12
          },
          "cardType" : {
            "type" : "string",
            "description" : "The type of the card, e.g. Visa, Mastercard, etc."
          },
          "cardNumber" : {
            "type" : "string",
            "description" : "Cards issued are defined with an identifier consisting of three elements. The card type, a full stop and the card number. The card number may be any alphanumeric construction, commonly a 16 numeric number is used. VISA.5332870296579001. The id must be in the form of:  CCCC.AAAAAAAAAAAAAAAA  Where CCCC is the card type and AAAAAAAAAAAAAAAA is a unique identifier.  Examples:   VISA.1234567887654321   GC.1111222233334444   AB21.1111111122222222",
            "maxLength" : 25
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "issueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date the item was issued."
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
          },
          "onlineActualBalance" : {
            "type" : "number",
            "description" : "Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date."
          }
        }
      }
    },
    "StandingOrdersResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/StandingOrdersResponseBody"
        }
      },
      "description" : "StandingOrdersResponse"
    },
    "StandingOrdersResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "displayNames" : {
            "type" : "array",
            "description" : "Contains the name used for display or enrichment purposes",
            "items" : {
              "type" : "object",
              "properties" : {
                "displayName" : {
                  "type" : "string",
                  "description" : "Contains the name used for display or enrichment purposes",
                  "maxLength" : 35
                }
              }
            }
          },
          "accountWithBanks" : {
            "type" : "array",
            "description" : "Identifies the bank where the beneficiary maintains his account",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountWithBank" : {
                  "type" : "string",
                  "description" : "Identifies the bank where the beneficiary maintains his account",
                  "maxLength" : 35
                }
              }
            }
          },
          "standingOrderId" : {
            "type" : "string",
            "description" : "The unique standing order identifier",
            "maxLength" : 35
          },
          "orderType" : {
            "type" : "string",
            "description" : "Identifies the type of the order. Possible values are Single, Ifdone, Revol, oco. Single order - only one order item may be input. If done order -  If one order gets executed, the other order is also executed immediately. Revolving order -  based on the condition specified, it will wait for both the deals to be executed simultaneously. OCO -If one order gets executed, then the other order gets cancelled.",
            "maxLength" : 5
          },
          "paymentMethod" : {
            "type" : "string",
            "description" : "Method chosen to make the payment",
            "maxLength" : 4
          },
          "currencyId" : {
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
            "maxLength" : 3
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 18
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.",
            "maxLength" : 50
          },
          "counterPartyAccountId" : {
            "type" : "string",
            "description" : "The identifier of the counter party's account",
            "maxLength" : 35
          },
          "beneficiaryId" : {
            "type" : "string",
            "description" : "Indicates the Id of beneficiary when beneficiary details are stored",
            "maxLength" : 17
          },
          "percentageOverCurrentBalance" : {
            "type" : "string",
            "description" : "This is used to specify a percentage value, which would be applied on the accounts excess amount(Accounts cleared balance - CURRENT.AMOUNT) to arrive at ",
            "maxLength" : 6
          },
          "payTo" : {
            "type" : "string",
            "description" : "This field holds the reason for change in IB.STATUS field."
          },
          "currentFrequencyDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the date based on current frequency"
          },
          "currentFrequency" : {
            "type" : "string",
            "description" : "Indicates the current frequency of the standing order",
            "maxLength" : 35
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "currentEndDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Identifies the current end date of the standing order for the currency, amount and frequency specified. When the bank has received from the customer clear instructions which stipulate that the standing order must  only be executed during a determined period of time.  This is the date of the last execution of the standing order or when the customer has requested the bank to pay a certain amount during a determined period of time and then another amount starting from that date. In this case, this field specifies the end date of the first standing order amount.  After that date the second amount will then be executed."
          },
          "futureNotice" : {
            "type" : "string",
            "description" : "Flag to indicate that the standing order should execute until future notice, i.e. until an end date is provided.",
            "maxLength" : 10
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction"
          },
          "creditAccountName" : {
            "type" : "string",
            "description" : "Account name details of the creditor"
          },
          "bankSortCode" : {
            "type" : "string",
            "description" : "The sort code or the national clearing code of the beneficiary bank. "
          },
          "stoStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "STO initiation start date"
          },
          "beneficiaryBIC" : {
            "type" : "string",
            "description" : "BIC (Bank Identifier Code) of the beneficiary customer ",
            "maxLength" : 11
          },
          "beneficiaryIBAN" : {
            "type" : "string",
            "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189",
            "maxLength" : 35
          },
          "beneficiaryOurCharges" : {
            "type" : "string",
            "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)",
            "maxLength" : 3
          },
          "paymentOrderProductName" : {
            "type" : "string",
            "description" : "Indicates the name of payment order product ",
            "maxLength" : 10
          },
          "beneficiaryCountryId" : {
            "type" : "string",
            "description" : "Country of the beneficiary account number. For example: US, IN, EU",
            "maxLength" : 2
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 6
          }
        }
      }
    },
    "DirectDebitsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DirectDebitsResponseBody"
        }
      },
      "description" : "DirectDebitsResponse"
    },
    "DirectDebitsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "directDebitId" : {
            "type" : "string",
            "description" : "The unique identifier of the direct debit mandate. ",
            "maxLength" : 25
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          },
          "customerMnemonic" : {
            "type" : "string",
            "description" : "Specifies an alternative easy means of referencing the Customer",
            "maxLength" : 10
          },
          "creditAccountId" : {
            "type" : "string",
            "description" : "Credit account identifier of the payment or transaction",
            "maxLength" : 35
          },
          "creditorName" : {
            "type" : "string",
            "description" : "Name or short title of the credit account",
            "maxLength" : 70
          },
          "sortCode" : {
            "type" : "string",
            "description" : "Contains bank sort code or iban branch identifier for the account",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "direction" : {
            "type" : "string",
            "description" : "Indicates the direction of the Direct debit claim for which mandate is received. The claim can be 'Outward' i.e. Claim is sent to the other bank or 'Inward'  i.e. other bank submit their claim to debit our customer's account. ",
            "maxLength" : 10
          },
          "currency" : {
            "type" : "string",
            "description" : "Indicates the type of currency to which the account belongs",
            "maxLength" : 3
          },
          "standAloneDdi" : {
            "type" : "string",
            "description" : "Defines whether the direct debit mandate is for stand-alone purpose i.e. one-off instruction",
            "maxLength" : 1
          },
          "amount" : {
            "type" : "number",
            "description" : "This is the payment amount",
            "maximum" : 19
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
            "maxLength" : 35
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "frequency" : {
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction.",
            "maxLength" : 19
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "nextPaymentDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates next payment date for the contract"
          },
          "currencyName" : {
            "type" : "string",
            "description" : "The name that is displayed for the currency"
          },
          "accountName" : {
            "type" : "string",
            "description" : "Display name or short name of the account specified."
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          }
        }
      }
    },
    "DeliveryPreference" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DeliveryPreferenceBody"
        }
      },
      "description" : "DeliveryPreference"
    },
    "DeliveryPreferenceBody" : {
      "type" : "object",
      "properties" : {
        "messageGroup" : {
          "type" : "array",
          "description" : "Message group name that provides details of all Messages to be triggered.",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "messageGroupDetail" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "description" : "Indicates the Role of the Customer",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "carrier" : {
                      "type" : "string",
                      "description" : "Carrier to be used for sending messages",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Option to specify if the delivery message should be triggered for the carrier. Possible values - Yes or No.",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "The Version of Delivery address pertaining the to Carrier to which the message group or other messages should be sent. Possible Options - Yes or No",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "format" : {
                      "type" : "string",
                      "description" : "The delivery format version to be used. It should always be '1' if the formatting module is SWIFT",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "copies" : {
                      "type" : "string",
                      "description" : "The number of copies required of a message group or other messages. The default value is '1'",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "language" : {
                      "type" : "string",
                      "description" : "The language that the contents of the field are displayed in.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "holdOutput" : {
                      "type" : "string",
                      "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "holdMailStartDate" : {
                      "type" : "string",
                      "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "holdMailEndDate" : {
                      "type" : "string",
                      "description" : "The Hold Mail Start Date for message group or other messages if Hold Output is set to Yes",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "holdMailOption" : {
                      "type" : "string",
                      "description" : "The Hold Mail End Date for message group or other messages if Hold Output is set to Yes",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "Contains the date on which the transaction or payment gets initiated.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "endDate" : {
                      "type" : "string",
                      "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        },
        "otherMessagesDetail" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string",
                "description" : "Indicates the Role of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrier" : {
                "type" : "string",
                "description" : "Carrier to be used for sending messages",
                "minLength" : 0,
                "maxLength" : 10
              },
              "required" : {
                "type" : "string",
                "description" : "Option to specify if the delivery message should be triggered for the carrier. Possible values - Yes or No.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrierPosition" : {
                "type" : "string",
                "description" : "The Version of Delivery address pertaining the to Carrier to which the message group or other messages should be sent. Possible Options - Yes or No",
                "minLength" : 0,
                "maxLength" : 15
              },
              "format" : {
                "type" : "string",
                "description" : "The delivery format version to be used. It should always be '1' if the formatting module is SWIFT",
                "minLength" : 0,
                "maxLength" : 6
              },
              "copies" : {
                "type" : "string",
                "description" : "The number of copies required of a message group or other messages. The default value is '1'",
                "minLength" : 0,
                "maxLength" : 6
              },
              "language" : {
                "type" : "string",
                "description" : "The language that the contents of the field are displayed in.",
                "minLength" : 0,
                "maxLength" : 8
              },
              "holdOutput" : {
                "type" : "string",
                "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                "minLength" : 0,
                "maxLength" : 35
              },
              "holdMailStartDate" : {
                "type" : "string",
                "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                "minLength" : 0,
                "maxLength" : 17
              },
              "holdMailEndDate" : {
                "type" : "string",
                "description" : "The Hold Mail Start Date for message group or other messages if Hold Output is set to Yes",
                "minLength" : 0,
                "maxLength" : 15
              },
              "holdMailOption" : {
                "type" : "string",
                "description" : "The Hold Mail End Date for message group or other messages if Hold Output is set to Yes",
                "minLength" : 0,
                "maxLength" : 35
              },
              "startDate" : {
                "type" : "string",
                "description" : "Contains the date on which the transaction or payment gets initiated.",
                "minLength" : 0,
                "maxLength" : 11
              },
              "endDate" : {
                "type" : "string",
                "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "applyOtherMessages" : {
          "type" : "string",
          "description" : "Identifies the customer preferences for any message group or other messages for which specific preferences have not been defined.",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "DeliveryPreferenceResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DeliveryPreferenceResponseBody"
        }
      },
      "description" : "DeliveryPreferenceResponse"
    },
    "DeliveryPreferenceResponseBody" : {
      "type" : "object",
      "properties" : {
        "messageGroup" : {
          "type" : "array",
          "description" : "Message group name that provides details of all Messages to be triggered.",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation",
                "minLength" : 0,
                "maxLength" : 35
              },
              "messageGroupDetail" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "role" : {
                      "type" : "string",
                      "description" : "Indicates the Role of the Customer",
                      "minLength" : 0,
                      "maxLength" : 35
                    },
                    "carrier" : {
                      "type" : "string",
                      "description" : "Carrier to be used for sending messages",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Option to specify if the delivery message should be triggered for the carrier. Possible values - Yes or No.",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "The Version of Delivery address pertaining the to Carrier to which the message group or other messages should be sent. Possible Options - Yes or No",
                      "minLength" : 0,
                      "maxLength" : 25
                    },
                    "format" : {
                      "type" : "string",
                      "description" : "The delivery format version to be used. It should always be '1' if the formatting module is SWIFT",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "copies" : {
                      "type" : "string",
                      "description" : "The number of copies required of a message group or other messages. The default value is '1'",
                      "minLength" : 0,
                      "maxLength" : 6
                    },
                    "language" : {
                      "type" : "string",
                      "description" : "The language that the contents of the field are displayed in.",
                      "minLength" : 0,
                      "maxLength" : 8
                    },
                    "holdOutput" : {
                      "type" : "string",
                      "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "holdMailStartDate" : {
                      "type" : "string",
                      "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                      "minLength" : 0,
                      "maxLength" : 17
                    },
                    "holdMailEndDate" : {
                      "type" : "string",
                      "description" : "The Hold Mail Start Date for message group or other messages if Hold Output is set to Yes",
                      "minLength" : 0,
                      "maxLength" : 15
                    },
                    "holdMailOption" : {
                      "type" : "string",
                      "description" : "The Hold Mail End Date for message group or other messages if Hold Output is set to Yes",
                      "minLength" : 0,
                      "maxLength" : 14
                    },
                    "startDate" : {
                      "type" : "string",
                      "description" : "Contains the date on which the transaction or payment gets initiated.",
                      "minLength" : 0,
                      "maxLength" : 11
                    },
                    "endDate" : {
                      "type" : "string",
                      "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                      "minLength" : 0,
                      "maxLength" : 11
                    }
                  }
                }
              }
            }
          }
        },
        "otherMessagesDetail" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "role" : {
                "type" : "string",
                "description" : "Indicates the Role of the Customer",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrier" : {
                "type" : "string",
                "description" : "Carrier to be used for sending messages",
                "minLength" : 0,
                "maxLength" : 10
              },
              "required" : {
                "type" : "string",
                "description" : "Option to specify if the delivery message should be triggered for the carrier. Possible values - Yes or No.",
                "minLength" : 0,
                "maxLength" : 35
              },
              "carrierPosition" : {
                "type" : "string",
                "description" : "The Version of Delivery address pertaining the to Carrier to which the message group or other messages should be sent. Possible Options - Yes or No",
                "minLength" : 0,
                "maxLength" : 15
              },
              "format" : {
                "type" : "string",
                "description" : "The delivery format version to be used. It should always be '1' if the formatting module is SWIFT",
                "minLength" : 0,
                "maxLength" : 6
              },
              "copies" : {
                "type" : "string",
                "description" : "The number of copies required of a message group or other messages. The default value is '1'",
                "minLength" : 0,
                "maxLength" : 6
              },
              "language" : {
                "type" : "string",
                "description" : "The language that the contents of the field are displayed in.",
                "minLength" : 0,
                "maxLength" : 8
              },
              "holdOutput" : {
                "type" : "string",
                "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                "minLength" : 0,
                "maxLength" : 35
              },
              "holdMailStartDate" : {
                "type" : "string",
                "description" : "Defines whether or not the output delivery for message group or other messages is to be held. Possible values - Yes/No",
                "minLength" : 0,
                "maxLength" : 17
              },
              "holdMailEndDate" : {
                "type" : "string",
                "description" : "The Hold Mail Start Date for message group or other messages if Hold Output is set to Yes",
                "minLength" : 0,
                "maxLength" : 15
              },
              "holdMailOption" : {
                "type" : "string",
                "description" : "The Hold Mail End Date for message group or other messages if Hold Output is set to Yes",
                "minLength" : 0,
                "maxLength" : 35
              },
              "startDate" : {
                "type" : "string",
                "description" : "Contains the date on which the transaction or payment gets initiated.",
                "minLength" : 0,
                "maxLength" : 11
              },
              "endDate" : {
                "type" : "string",
                "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned",
                "minLength" : 0,
                "maxLength" : 11
              }
            }
          }
        },
        "applyOtherMessages" : {
          "type" : "string",
          "description" : "Identifies the customer preferences for any message group or other messages for which specific preferences have not been defined.",
          "minLength" : 0,
          "maxLength" : 35
        }
      }
    },
    "Limit" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LimitBody"
        }
      },
      "description" : "Limit"
    },
    "LimitBody" : {
      "type" : "object",
      "properties" : {
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 9
              },
              "countryPercent" : {
                "type" : "string",
                "description" : "Percent of risk associated for that country",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "grades" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "limitGrade" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 10
              },
              "gradePercent" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        },
        "commodities" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "commodity" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 9
              },
              "commodityPercent" : {
                "type" : "string",
                "description" : "Indicates the percentage involvement in the Commodity (Industry)",
                "minLength" : 0,
                "maxLength" : 16
              }
            }
          }
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "onlineLimitDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the limit available for use"
        },
        "availableMarker" : {
          "type" : "string",
          "description" : "Whether the limit available for use or not",
          "minLength" : 0,
          "maxLength" : 15
        },
        "allowNetting" : {
          "type" : "string",
          "description" : "Whether the customer for this liability can allow netting of both credit and debit accounts",
          "minLength" : 0,
          "maxLength" : 12
        },
        "onlineUpdate" : {
          "type" : "string",
          "description" : "This field controls online update of fed (cash) type of collateral",
          "minLength" : 0,
          "maxLength" : 12
        },
        "limitProductId" : {
          "type" : "string",
          "description" : "Reserved for future use",
          "minLength" : 0,
          "maxLength" : 14
        },
        "checkLimit" : {
          "type" : "string",
          "description" : "Defines whether overrides should appear when default LIMIT records are used or defaulted",
          "minLength" : 0,
          "maxLength" : 10
        },
        "band" : {
          "type" : "string",
          "description" : "Limit check update set",
          "minLength" : 0,
          "maxLength" : 4
        },
        "reducingLimit" : {
          "type" : "string",
          "description" : "Identifies if the Limit reference defined in the ID is a 'reducing' or 'non-reducing' limit type",
          "minLength" : 0,
          "maxLength" : 13
        },
        "internalAmount" : {
          "type" : "string",
          "description" : "Indicates the amount allocated to the Credit Limit by the Bank",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    },
    "LimitResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LimitResponseBody"
        }
      },
      "description" : "LimitResponse"
    },
    "LimitResponseBody" : {
      "type" : "object",
      "properties" : {
        "countries" : {
          "type" : "array",
          "description" : "Identifies the country of the customer.",
          "items" : {
            "type" : "object",
            "properties" : {
              "countryId" : {
                "type" : "string",
                "description" : "ISO country code of the financial institution. ",
                "minLength" : 0,
                "maxLength" : 9
              },
              "countryPercent" : {
                "type" : "string",
                "description" : "Percent of risk associated for that country",
                "minLength" : 0,
                "maxLength" : 14
              }
            }
          }
        },
        "grades" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "limitGrade" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 10
              },
              "gradePercent" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 12
              }
            }
          }
        },
        "commodities" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "commodity" : {
                "type" : "string",
                "description" : "Specify the grade of the risk",
                "minLength" : 0,
                "maxLength" : 9
              },
              "commodityPercent" : {
                "type" : "string",
                "description" : "Indicates the percentage involvement in the Commodity (Industry)",
                "minLength" : 0,
                "maxLength" : 16
              }
            }
          }
        },
        "currencyId" : {
          "type" : "string",
          "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency.",
          "minLength" : 0,
          "maxLength" : 10
        },
        "onlineLimitDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the limit available for use"
        },
        "availableMarker" : {
          "type" : "string",
          "description" : "Whether the limit available for use or not",
          "minLength" : 0,
          "maxLength" : 15
        },
        "allowNetting" : {
          "type" : "string",
          "description" : "Whether the customer for this liability can allow netting of both credit and debit accounts",
          "minLength" : 0,
          "maxLength" : 12
        },
        "onlineUpdate" : {
          "type" : "string",
          "description" : "This field controls online update of fed (cash) type of collateral",
          "minLength" : 0,
          "maxLength" : 12
        },
        "limitProductId" : {
          "type" : "string",
          "description" : "Reserved for future use",
          "minLength" : 0,
          "maxLength" : 14
        },
        "checkLimit" : {
          "type" : "string",
          "description" : "Defines whether overrides should appear when default LIMIT records are used or defaulted",
          "minLength" : 0,
          "maxLength" : 10
        },
        "band" : {
          "type" : "string",
          "description" : "Limit check update set",
          "minLength" : 0,
          "maxLength" : 4
        },
        "reducingLimit" : {
          "type" : "string",
          "description" : "Identifies if the Limit reference defined in the ID is a 'reducing' or 'non-reducing' limit type",
          "minLength" : 0,
          "maxLength" : 13
        },
        "internalAmount" : {
          "type" : "string",
          "description" : "Indicates the amount allocated to the Credit Limit by the Bank",
          "minLength" : 0,
          "maxLength" : 14
        }
      }
    }
  }
}