{
  "swagger" : "2.0",
  "info" : {
    "description" : "Issuance of Bid Bond guarantees",
    "version" : "v1.0.0",
    "title" : "createGuarnteeBidBond"
  },
  "host" : "api.server.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "paths" : {
    "/holdings/guarantees/bidBonds" : {
      "post" : {
        "operationId" : "createGuarnteeBidBond",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createGuarnteeBidBond"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createGuarnteeBidBondResponse",
            "schema" : {
              "$ref" : "#/definitions/createGuarnteeBidBondResponse"
            }
          },
          "default" : {
            "description" : "createGuarnteeBidBondErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/createGuarnteeBidBondErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Contains the description of purpose of the payment."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            }
          }
        }
      }
    },
    "createGuarnteeBidBond" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/createGuarnteeBidBondBody"
        }
      },
      "description" : "createGuarnteeBidBond",
      "example" : {
        "header" : { },
        "body" : {
          "expiryDate" : "20191228",
          "amount" : "10000",
          "customerId" : "100160",
          "currency" : "USD"
        }
      }
    },
    "createGuarnteeBidBondBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryIds" : {
          "type" : "array",
          "description" : "The identifier of the beneficiary",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryId" : {
                "type" : "string",
                "description" : "Indicates the Id of beneficiary when beneficiary details are stored"
              }
            }
          }
        },
        "beneficiaryAddresses" : {
          "type" : "array",
          "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddress" : {
                "type" : "string",
                "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known"
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date on which the charge will be debited to the charge account"
              },
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted"
              },
              "debitChargeAccount" : {
                "type" : "string",
                "description" : "The account from which the Charges will be debited"
              },
              "chargeCode" : {
                "type" : "string",
                "description" : "Indicates the charge code to which the charges are identified and calculated and to be debited to the customer account. For example: C(Credit less Charges The Credit less Charges), D(Debit plus Charge The Debit plus Charge) , W(Waive)."
              }
            }
          }
        },
        "bankAddresses" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "bankAddress" : {
                "type" : "string",
                "description" : "Hold the name and address of the RECEIVING.BANK."
              }
            }
          }
        },
        "detailsOfGuarantee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "detailOfGuarantee" : {
                "type" : "string",
                "description" : "This field contains all terms, conditions and details of the guarantee undertaking. "
              }
            }
          }
        },
        "bidBondReference" : {
          "type" : "string",
          "description" : "Another ID for the transaction for retrieval purposes or it can be used for the bank to use a unique guarantee number rather than the system generated ID"
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "currency" : {
          "type" : "string",
          "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates"
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount"
        },
        "dealDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the deal was agreed. "
        },
        "valueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
        },
        "expiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
        },
        "maturityDate" : {
          "type" : "string",
          "description" : "Indicates maturity date of the contract"
        },
        "termsAndConditions" : {
          "type" : "string",
          "description" : "Specifies the terms and conditions in the text format for the payment instruction, if any."
        },
        "eventsProcessing" : {
          "type" : "string",
          "description" : "Determines whether the principal movements and raising entries will occur Online or at End of Day Allowed values: - ONLINE (default) - END.OF.DAY"
        },
        "autoExpiry" : {
          "type" : "string",
          "description" : "Decision field to determine whether the contingent entries are to be reversed after the deal expiry date or not Allowed values: - YES - NO - null (default value, same as NO)"
        },
        "liquidationMode" : {
          "type" : "string",
          "description" : "Indicates the manner in which the overdue payments are handled There are three options available: AUTOMATIC - will liquidate across the charge/commission account on the contract SEMI AUTOMATIC - will liquidate the charge/commission to the account only if sufficient balance is available. Else, PD will be written MANUAL - will create a PD contract irrespective of availability of funds"
        },
        "takeMargin" : {
          "type" : "string",
          "description" : "Field to check whether provision is to be taken for the transaction or not. YES or NO"
        },
        "marginPercent" : {
          "type" : "string",
          "description" : "Field to state the percentage of provision to be taken"
        },
        "marginAmount" : {
          "type" : "string",
          "description" : "Actual amount of provision that is debited for the transaction"
        },
        "marginDebitAccount" : {
          "type" : "string",
          "description" : "Field to state the account from which the provision amount is to be debited"
        },
        "receivingBank" : {
          "type" : "string",
          "description" : "Identifies the counter party Bank to whom the Guarantee message is to be sent when it is an issue of undertaking."
        },
        "applicableRule" : {
          "type" : "string",
          "description" : "Specifies the rules the Letter of credit is subject to. Following are the valid inputs under this field: UCP LATEST VERSION, EUCP LATEST VERSION, UCPURR LATEST VERSION, EUCPURR LATEST VERSION, ISP LATEST VERSION, OTHR. If OTHR is input then, the rule under which credit is subject to must be input in applicable rules description field."
        },
        "narrative" : {
          "type" : "string",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference"
        },
        "furtherIdentification" : {
          "type" : "string",
          "description" : "This field identifies the purpose of the guarantee message (ISSUE or REQUEST). Ie to identify if the message conveys the issuance of guarantee from the guarantor or requesting the receiver bank to issue the another guarantee undertaking based on the undertaking received from guarantor."
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "Contains the current status of the transaction. For example: 'ACCC': 'AcceptedSettlementCompleted' - Settlement on the creditor's account has been completed.'ACCP': 'AcceptedCustomerProfile' - Preceding check of technical validation was successful. Customer profile check was also successful.'CANC': 'Cancelled' Payment initiation has been cancelled before execution Remark: This codeis accepted as new code by ISO20022.'RCVD': 'Received' - Payment initiation has been received by the receiving agent."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            },
            "parse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "createGuarnteeBidBondResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/createGuarnteeBidBondResponseBody"
        }
      },
      "description" : "createGuarnteeBidBondResponse"
    },
    "createGuarnteeBidBondResponseBody" : {
      "type" : "object",
      "properties" : {
        "beneficiaryIds" : {
          "type" : "array",
          "description" : "The identifier of the beneficiary",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryId" : {
                "type" : "string",
                "description" : "Indicates the Id of beneficiary when beneficiary details are stored"
              }
            }
          }
        },
        "beneficiaryAddresses" : {
          "type" : "array",
          "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known",
          "items" : {
            "type" : "object",
            "properties" : {
              "beneficiaryAddress" : {
                "type" : "string",
                "description" : "The address of the Beneficiary if the customer number of the Beneficiary is not known"
              }
            }
          }
        },
        "charges" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "chargeDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "The date on which the charge will be debited to the charge account"
              },
              "chargeCurrency" : {
                "type" : "string",
                "description" : "Indicates the currency code of the charge account from where the fee is deducted"
              },
              "debitChargeAccount" : {
                "type" : "string",
                "description" : "The account from which the Charges will be debited"
              },
              "chargeCode" : {
                "type" : "string",
                "description" : "Indicates the charge code to which the charges are identified and calculated and to be debited to the customer account. For example: C(Credit less Charges The Credit less Charges), D(Debit plus Charge The Debit plus Charge) , W(Waive)."
              }
            }
          }
        },
        "bankAddresses" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "bankAddress" : {
                "type" : "string",
                "description" : "Hold the name and address of the RECEIVING.BANK."
              }
            }
          }
        },
        "detailsOfGuarantee" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "detailOfGuarantee" : {
                "type" : "string",
                "description" : "This field contains all terms, conditions and details of the guarantee undertaking. "
              }
            }
          }
        },
        "bidBondReference" : {
          "type" : "string",
          "description" : "Another ID for the transaction for retrieval purposes or it can be used for the bank to use a unique guarantee number rather than the system generated ID"
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "guaranteeType" : {
          "type" : "string",
          "description" : "Refers to the type of the contract that is being issued."
        },
        "category" : {
          "type" : "string",
          "description" : "Indicates the account or contract product name. For example for an account this maybe current, savings etc."
        },
        "contractType" : {
          "type" : "string",
          "description" : "Indicates if the position is related to Loan, Deposit ,FX-Forward/FX-Swap"
        },
        "currency" : {
          "type" : "string",
          "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates"
        },
        "amount" : {
          "type" : "number",
          "description" : "This is the payment amount"
        },
        "dealDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date on which the deal was agreed. "
        },
        "valueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
        },
        "expiryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
        },
        "maturityDate" : {
          "type" : "string",
          "description" : "Indicates maturity date of the contract"
        },
        "termsAndConditions" : {
          "type" : "string",
          "description" : "Specifies the terms and conditions in the text format for the payment instruction, if any."
        },
        "eventsProcessing" : {
          "type" : "string",
          "description" : "Determines whether the principal movements and raising entries will occur Online or at End of Day Allowed values: - ONLINE (default) - END.OF.DAY"
        },
        "autoExpiry" : {
          "type" : "string",
          "description" : "Decision field to determine whether the contingent entries are to be reversed after the deal expiry date or not Allowed values: - YES - NO - null (default value, same as NO)"
        },
        "liquidationMode" : {
          "type" : "string",
          "description" : "Indicates the manner in which the overdue payments are handled There are three options available: AUTOMATIC - will liquidate across the charge/commission account on the contract SEMI AUTOMATIC - will liquidate the charge/commission to the account only if sufficient balance is available. Else, PD will be written MANUAL - will create a PD contract irrespective of availability of funds"
        },
        "takeMargin" : {
          "type" : "string",
          "description" : "Field to check whether provision is to be taken for the transaction or not. YES or NO"
        },
        "marginPercent" : {
          "type" : "string",
          "description" : "Field to state the percentage of provision to be taken"
        },
        "marginAmount" : {
          "type" : "string",
          "description" : "Actual amount of provision that is debited for the transaction"
        },
        "marginDebitAccount" : {
          "type" : "string",
          "description" : "Field to state the account from which the provision amount is to be debited"
        },
        "receivingBank" : {
          "type" : "string",
          "description" : "Identifies the counter party Bank to whom the Guarantee message is to be sent when it is an issue of undertaking."
        },
        "applicableRule" : {
          "type" : "string",
          "description" : "Specifies the rules the Letter of credit is subject to. Following are the valid inputs under this field: UCP LATEST VERSION, EUCP LATEST VERSION, UCPURR LATEST VERSION, EUCPURR LATEST VERSION, ISP LATEST VERSION, OTHR. If OTHR is input then, the rule under which credit is subject to must be input in applicable rules description field."
        },
        "narrative" : {
          "type" : "string",
          "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference"
        },
        "furtherIdentification" : {
          "type" : "string",
          "description" : "This field identifies the purpose of the guarantee message (ISSUE or REQUEST). Ie to identify if the message conveys the issuance of guarantee from the guarantor or requesting the receiver bank to issue the another guarantee undertaking based on the undertaking received from guarantor."
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the record"
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "parse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override"
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message"
              }
            }
          }
        }
      }
    },
    "createGuarnteeBidBondErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/createGuarnteeBidBondErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "createGuarnteeBidBondErrorResponse"
    },
    "createGuarnteeBidBondErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type"
        }
      }
    }
  }
}