{"swagger":"2.0","info":{"description":"API to create, update and manage investor account detail information","version":"v1.0.0","title":"Investor account information"},"host":"localhost:8080","basePath":"/IRISgi/multifonds/api/v1.0.0","schemes":["http"],"paths":{"/party/registers":{"get":{"summary":"Retrieves the list of investor account informations","description":"Retrieves the list of investor account informations","operationId":"getRegister","produces":["application/json"],"parameters":[{"name":"page","in":"query","description":"Current page number (Default:1)","required":false,"type":"number"},{"name":"size","in":"query","description":"Total number of records per page (Default:25)","required":false,"type":"number"},{"name":"orders","in":"query","description":"An 'orders' parameter allows you to specify the order in which rows appear in the result set Eg: orders=fundname:0,masterfund:1 where 'fundname' is field, '0' for ascending manner and ',' as seperator for fields","required":false,"type":"string"},{"name":"groups","in":"query","description":"A 'groups' parameter is used to collect data across multiple records and group the results by one or more columns. Eg: groups=nationality,reclaimtax-nationality:EQ:Indian,reclaimtax:EQ:N-nationality:COUNT where 'nationality,reclaimtax' is for the fields and 'nationality:EQ:Indian,reclaimtax:EQ:N-nationality' are filters, 'nationality:COUNT' is a aggregator and '-' as seperator ","required":false,"type":"string"},{"name":"filters","in":"query","description":"Use a 'filters' parameter to select rows based on a value by using basic operators like EQ, NE etc.., Eg: filters=statistictype:NE:SRS where 'statistictype' is a field, 'NE' is a operator and 'SRS' is a value","required":false,"type":"string"},{"name":"referenceId","in":"header","description":"uniqueId for security purpose","required":false,"type":"string"},{"name":"token","in":"header","description":"unique token","required":false,"type":"string"},{"name":"username","in":"header","description":"username","required":false,"type":"string"},{"name":"company","in":"header","description":"company name","required":false,"type":"string"},{"name":"command","in":"header","description":"API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set","required":false,"type":"string"}],"responses":{"200":{"description":"getRegister Success Response","schema":{"$ref":"#/definitions/getRegisterSuccessResponse"}},"400":{"description":"getRegister Error Response","schema":{"$ref":"#/definitions/getRegisterErrorResponse"}},"403":{"description":"getRegister Error Response","schema":{"$ref":"#/definitions/getRegisterErrorResponse"}},"404":{"description":"getRegister Error Response","schema":{"$ref":"#/definitions/getRegisterErrorResponse"}},"422":{"description":"getRegister Error Response","schema":{"$ref":"#/definitions/getRegisterErrorResponse"}},"500":{"description":"getRegister Error Response","schema":{"$ref":"#/definitions/getRegisterErrorResponse"}},"501":{"description":"getRegister Error Response","schema":{"$ref":"#/definitions/getRegisterErrorResponse"}}}},"post":{"summary":"Creates a investor account information record","description":"Creates a investor account information record","operationId":"postRegister","produces":["application/json"],"parameters":[{"name":"referenceId","in":"header","description":"uniqueId for security purpose","required":false,"type":"string"},{"name":"token","in":"header","description":"unique token","required":false,"type":"string"},{"name":"username","in":"header","description":"username","required":false,"type":"string"},{"name":"company","in":"header","description":"company name","required":false,"type":"string"},{"name":"command","in":"header","description":"API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set","required":false,"type":"string"},{"in":"body","name":"Payload","description":"postRegister Payload","required":true,"schema":{"$ref":"#/definitions/sRegisterV1.0.0Payload"}}],"responses":{"201":{"description":"postRegister Success Response","schema":{"$ref":"#/definitions/postRegisterSuccessResponse"}},"400":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}},"401":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}},"403":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}},"404":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}},"405":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}},"409":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}},"422":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}},"500":{"description":"postRegister Error Response","schema":{"$ref":"#/definitions/postRegisterErrorResponse"}}}},"put":{"summary":"Updates investor account information records with identifiers specified in the payload","description":"Updates investor account information records with identifiers specified in the payload","operationId":"putRegister","produces":["application/json"],"parameters":[{"name":"referenceId","in":"header","description":"uniqueId for security purpose","required":false,"type":"string"},{"name":"token","in":"header","description":"unique token","required":false,"type":"string"},{"name":"username","in":"header","description":"username","required":false,"type":"string"},{"name":"company","in":"header","description":"company name","required":false,"type":"string"},{"name":"command","in":"header","description":"API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set","required":false,"type":"string"},{"in":"body","name":"Payload","description":"putRegister Payload","required":true,"schema":{"$ref":"#/definitions/sRegisterV1.0.0BULKPayload"}}],"responses":{"201":{"description":"putRegister Success Response","schema":{"$ref":"#/definitions/putRegisterSuccessResponse"}},"403":{"description":"putRegister Error Response","schema":{"$ref":"#/definitions/putRegisterErrorResponse"}},"404":{"description":"putRegister Error Response","schema":{"$ref":"#/definitions/putRegisterErrorResponse"}},"405":{"description":"putRegister Error Response","schema":{"$ref":"#/definitions/putRegisterErrorResponse"}},"409":{"description":"putRegister Error Response","schema":{"$ref":"#/definitions/putRegisterErrorResponse"}},"422":{"description":"putRegister Error Response","schema":{"$ref":"#/definitions/putRegisterErrorResponse"}},"500":{"description":"putRegister Error Response","schema":{"$ref":"#/definitions/putRegisterErrorResponse"}},"501":{"description":"putRegister Error Response","schema":{"$ref":"#/definitions/putRegisterErrorResponse"}}}},"delete":{"summary":"Deletes investor account information records with identifiers provided in the payload","description":"Deletes investor account information records with identifiers provided in the payload","operationId":"deleteRegister","produces":["application/json"],"parameters":[{"name":"referenceId","in":"header","description":"uniqueId for security purpose","required":false,"type":"string"},{"name":"token","in":"header","description":"unique token","required":false,"type":"string"},{"name":"username","in":"header","description":"username","required":false,"type":"string"},{"name":"company","in":"header","description":"company name","required":false,"type":"string"},{"name":"command","in":"header","description":"API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set","required":false,"type":"string"},{"in":"body","name":"Payload","description":"deleteRegister Payload","required":true,"schema":{"$ref":"#/definitions/sRegisterV1.0.0BULKPayload"}}],"responses":{"200":{"description":"deleteRegister Success Response","schema":{"$ref":"#/definitions/deleteRegisterSuccessResponse"}},"403":{"description":"deleteRegister Error Response","schema":{"$ref":"#/definitions/deleteRegisterErrorResponse"}},"404":{"description":"deleteRegister Error Response","schema":{"$ref":"#/definitions/deleteRegisterErrorResponse"}},"405":{"description":"deleteRegister Error Response","schema":{"$ref":"#/definitions/deleteRegisterErrorResponse"}},"422":{"description":"deleteRegister Error Response","schema":{"$ref":"#/definitions/deleteRegisterErrorResponse"}}}}},"/party/registers/{registerId}":{"get":{"summary":"Retrieves a specific investor account information record","description":"Retrieves a specific investor account information record","operationId":"getRegisterByRegisterId","produces":["application/json"],"parameters":[{"name":"page","in":"query","description":"Current page number (Default:1)","required":false,"type":"number"},{"name":"size","in":"query","description":"Total number of records per page (Default:25)","required":false,"type":"number"},{"name":"orders","in":"query","description":"An 'orders' parameter allows you to specify the order in which rows appear in the result set Eg: orders=fundname:0,masterfund:1 where 'fundname' is field, '0' for ascending manner and ',' as seperator for fields","required":false,"type":"string"},{"name":"groups","in":"query","description":"A 'groups' parameter is used to collect data across multiple records and group the results by one or more columns. Eg: groups=nationality,reclaimtax-nationality:EQ:Indian,reclaimtax:EQ:N-nationality:COUNT where 'nationality,reclaimtax' is for the fields and 'nationality:EQ:Indian,reclaimtax:EQ:N-nationality' are filters, 'nationality:COUNT' is a aggregator and '-' as seperator ","required":false,"type":"string"},{"name":"filters","in":"query","description":"Use a 'filters' parameter to select rows based on a value by using basic operators like EQ, NE etc.., Eg: filters=statistictype:NE:SRS where 'statistictype' is a field, 'NE' is a operator and 'SRS' is a value","required":false,"type":"string"},{"name":"referenceId","in":"header","description":"uniqueId for security purpose","required":false,"type":"string"},{"name":"token","in":"header","description":"unique token","required":false,"type":"string"},{"name":"username","in":"header","description":"username","required":false,"type":"string"},{"name":"company","in":"header","description":"company name","required":false,"type":"string"},{"name":"command","in":"header","description":"API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set","required":false,"type":"string"},{"name":"registerId","in":"path","description":"internalId","required":true,"type":"string"}],"responses":{"200":{"description":"getRegisterByRegisterId Success Response","schema":{"$ref":"#/definitions/getRegisterByRegisterIdSuccessResponse"}},"400":{"description":"getRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/getRegisterByRegisterIdErrorResponse"}},"403":{"description":"getRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/getRegisterByRegisterIdErrorResponse"}},"404":{"description":"getRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/getRegisterByRegisterIdErrorResponse"}},"422":{"description":"getRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/getRegisterByRegisterIdErrorResponse"}},"500":{"description":"getRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/getRegisterByRegisterIdErrorResponse"}},"501":{"description":"getRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/getRegisterByRegisterIdErrorResponse"}}}}},"/party/registers/{internalId}":{"put":{"summary":"Updates specific investor account information record","description":"Updates specific investor account information record","operationId":"putRegisterByRegisterId","produces":["application/json"],"parameters":[{"name":"referenceId","in":"header","description":"uniqueId for security purpose","required":false,"type":"string"},{"name":"token","in":"header","description":"unique token","required":false,"type":"string"},{"name":"username","in":"header","description":"username","required":false,"type":"string"},{"name":"company","in":"header","description":"company name","required":false,"type":"string"},{"name":"command","in":"header","description":"API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set","required":false,"type":"string"},{"name":"internalId","in":"path","description":"internalId","required":true,"type":"string"},{"in":"body","name":"Payload","description":"putRegisterByRegisterId Payload","required":true,"schema":{"$ref":"#/definitions/sRegisterV1.0.0Payload"}}],"responses":{"201":{"description":"putRegisterByRegisterId Success Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdSuccessResponse"}},"403":{"description":"putRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdErrorResponse"}},"404":{"description":"putRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdErrorResponse"}},"405":{"description":"putRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdErrorResponse"}},"409":{"description":"putRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdErrorResponse"}},"422":{"description":"putRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdErrorResponse"}},"500":{"description":"putRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdErrorResponse"}},"501":{"description":"putRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/putRegisterByRegisterIdErrorResponse"}}}},"delete":{"summary":"Deletes a investor account information record","description":"Deletes a investor account information record","operationId":"deleteRegisterByRegisterId","produces":["application/json"],"parameters":[{"name":"referenceId","in":"header","description":"uniqueId for security purpose","required":false,"type":"string"},{"name":"token","in":"header","description":"unique token","required":false,"type":"string"},{"name":"username","in":"header","description":"username","required":false,"type":"string"},{"name":"company","in":"header","description":"company name","required":false,"type":"string"},{"name":"command","in":"header","description":"API operations like INVOKE, VALIDATE, PROCESS can be set or by default PROCESS is set","required":false,"type":"string"},{"name":"internalId","in":"path","description":"internalId","required":true,"type":"string"},{"in":"body","name":"Payload","description":"deleteRegisterByRegisterId Payload","required":false,"schema":{"$ref":"#/definitions/sRegisterV1.0.0Payload"}}],"responses":{"200":{"description":"deleteRegisterByRegisterId Success Response","schema":{"$ref":"#/definitions/deleteRegisterByRegisterIdSuccessResponse"}},"403":{"description":"deleteRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/deleteRegisterByRegisterIdErrorResponse"}},"404":{"description":"deleteRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/deleteRegisterByRegisterIdErrorResponse"}},"405":{"description":"deleteRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/deleteRegisterByRegisterIdErrorResponse"}},"422":{"description":"deleteRegisterByRegisterId Error Response","schema":{"$ref":"#/definitions/deleteRegisterByRegisterIdErrorResponse"}}}}}},"definitions":{"sRegisterV1.0.0Payload":{"properties":{"header":{"type":"object"},"body":{"$ref":"#/definitions/sRegisterV1.0.0"}}},"paginationSchema":{"properties":{"page":{"type":"string"},"size":{"type":"string"},"count":{"type":"string"},"total":{"type":"string"}}},"auditSchema":{"properties":{"startTime":{"type":"string"},"endTime":{"type":"string"},"processTime":{"type":"string"}}},"successHeaderstatusSchema":{"properties":{"result":{"type":"string"},"HTTP_MESSAGE":{"type":"string"},"description":{"type":"string"},"message":{"type":"string"},"HTTP_CODE":{"type":"string"},"requestId":{"type":"string"},"responseId":{"type":"string"},"eTag":{"type":"string"},"lastModified":{"type":"string"}}},"postRegisterSuccessheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/successHeaderstatusSchema"},"company":{"type":"string"},"username":{"type":"string"},"referenceId":{"type":"string"},"token":{"type":"string"}}},"postRegisterrecordsSchema":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}},"postRegisterSuccessbodyResponse":{"properties":{"records":{"$ref":"#/definitions/postRegisterrecordsSchema"}}},"postRegisterSuccessResponse":{"properties":{"header":{"$ref":"#/definitions/postRegisterSuccessheaderResponse"},"body":{"$ref":"#/definitions/postRegisterSuccessbodyResponse"}}},"errorHeaderstatusSchema":{"properties":{"result":{"type":"string"},"HTTP_MESSAGE":{"type":"string"},"description":{"type":"string"},"message":{"type":"string"},"HTTP_CODE":{"type":"string"},"requestId":{"type":"string"},"responseId":{"type":"string"},"eTag":{"type":"string"},"lastModified":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"postRegisterErrorheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/errorHeaderstatusSchema"},"referenceId":{"type":"string"},"token":{"type":"string"},"username":{"type":"string"}}},"postRegisterErrorbodyResponse":{"properties":{"items":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"postRegisterErrorResponse":{"properties":{"header":{"$ref":"#/definitions/postRegisterErrorheaderResponse"},"body":{"type":"object"}}},"sRegisterV1.0.0":{"properties":{"reference":{"type":"string","description":"Contains external and internal identifiers of the record"},"entityType":{"type":"string","description":"Identifies the entity. For e.g. 0001 for registers, 0002 for agents, 0007 for investors, etc."},"internalId":{"type":"string","description":"Internal identifier of the records.  Generated by the system during POST and can be used for other operations"},"extIdType":{"type":"string","description":"Provider of the external identification"},"externalId":{"type":"string","description":"External identifier of the record"},"promoterInternalId":{"type":"string","description":"Internal identifier of the Fund promoter linked to the entity"},"promoterExternalId":{"type":"string","description":"External identifier of the Fund promoter linked to the entity"},"parent":{"type":"string","description":"Contains external and internal identifiers of the parent record, if the current record belongs to sub entities"},"parentEntityType":{"type":"string","description":"Identifies the parent entity. For e.g. 0001 for registers, 0002 for agents, 0007 for investors, etc."},"parentInternalId":{"type":"string","description":"Internal identifier of the parent record"},"parentExternalId":{"type":"string","description":"External identifier of the parent record"},"parentPromoterInternalId":{"type":"string","description":"Internal identifier of the Fund promoter linked to the parent entity"},"parentPromoterExternalId":{"type":"string","description":"External identifier of the Fund promoter linked to the parent entity"},"register":{"type":"string","description":"Contains individual attributes of the Register entity"},"agentId":{"type":"number","description":"Agent Internal ID linked to the Register. The LoV is available in the CMESS table TA_OGROUP."},"agentExternalId":{"type":"string","description":"Agent External ID linked to the Register"},"personType":{"type":"string","description":"Person Type of the Client. For example: 0001(Retail), 0002(Corporate), 0003(Global) etc. The LoV is available in the CMESS table TA_TYPPERS."},"accountReference":{"type":"string","description":"The payment related/ or any special information."},"name":{"type":"string","description":"Name of the Register."},"firstName":{"type":"string","description":"Register first name"},"shortName":{"type":"string","description":"Register Short Name"},"birthDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Register's birth date."},"citizenship":{"type":"string","description":"Register's citizenship. The LoV is available in the CMESS table PAYS."},"residenceCountry":{"type":"string","description":"Register Residence country. The LoV is available in the CMESS table PAYS."},"languageCode":{"type":"string","description":"Language code. For example :1(French), 2(English), 3(Deutsch) etc."},"gender":{"type":"string","description":"Register gender. "},"telephoneNumber":{"type":"string","description":"Telephone Number"},"title":{"type":"string","description":"Title code. For example: 0000(Mr), 0001(Mrs),0002(Miss) etc. The LoV is available in the CMESS table TA_TITLE."},"freeText1":{"type":"string","description":"Free text to add any details for the Register. "},"accountType":{"type":"string","description":"The shareholder legal entity type code. Allowed values: 0001(Joint Account), 0002(Individual), 0006(Executor), 0001(Beneficiary). The LoV is available in the CMESS table TA_TYPREG."},"reportingCurrency":{"type":"string","description":"Reporting Currency (in 3 letter ISO code, Eg: EUR). The LoV is available in the CMESS table MONNAIES."},"collectingInstitutionId":{"type":"number","description":"Collecting Bank internal ID details"},"collectingInstitutionExternalId":{"type":"string","description":"Collecting Bank external ID details"},"bankAccountNumber":{"type":"string","description":"Bank Account Number linked to the Register"},"taxNumber":{"type":"string","description":"Tax number. Field is mandatory when country of residence has been defined as Tax No. mandatory for clients in the ZWIST calculation definition in MFGI."},"passportId":{"type":"string","description":"Register passport number"},"regonNumber":{"type":"string","description":"Regon number"},"peselNumber":{"type":"string","description":"Pesel number"},"noAgentCopiesFlag":{"type":"string","description":"Flag allows to block the generation of confirmation copy for the linked agent. Allowed values: Y(to block),N(to unblock)"},"quantityDecimals":{"type":"string","description":"Number of decimal places in the client share quantity calculation. Possible Values: 0 (Integer), 1(1 Decimal- places), 2 (2 Decimal places) etc. The LoV is available in the CMESS table CODE_ARR."},"gusNumber":{"type":"string","description":"Gus number"},"reportingGroupType":{"type":"string","description":"Reporting Group type code to group the investors by category for reporting purposes. For example: 0001(Default), 0002(Register), 0003(DG Lux/kunden) etc. The LoV is available in the CMESS table TA_TYPGRP."},"custodySettlement":{"type":"string","description":"Custody Settlement Type Code used in defining cash flow for the order. For example: 0001(NSCC), 0002(EURO CLEAR), ERSA(ERISA) etc. This field can be made madatory using CMESS table CLI_MAND and ELEM-0001: If the Short field is filled with M. The LoV is available in the CMESS table TA_CDELIV."},"registerType":{"type":"string","description":"Register Type code. For example: 0001(Register), 0002(Bearer). 0003 (Global pool) etc.  The LoV is available in the CMESS table TA_REGIS."},"settlementType":{"type":"string","description":"Settlement type code allowed for the investor. For example: 0001 (Certificate), 0002 (Standard shares), 0003(NSCC) etc. The LoV is available in the CMESS table TA_SETTLE."},"dealType":{"type":"string","description":"Deal type code for Cash handling. For example: 0001(Contractual), 0002(Semi-Contractual), 0003(Actual) etc. The LoV is available in the CMESS table TA_DEAL."},"certificate":{"type":"string","description":"Certificate"},"blockedDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Date from when the register is blocked."},"blockingReasonText":{"type":"string","description":"Free text to add the reason for the register blocking."},"paymentCurrency":{"type":"string","description":"The filed denotes the default currency which is used for transaction for the register. The LoV is available in the CMESS table MONNAIES."},"globalRegisterId":{"type":"number","description":"Global register internal ID linked to the register"},"globalRegisterExternalId":{"type":"string","description":"Global register external ID linked to the register"},"bedBreakfastFlag":{"type":"string","description":"Flag allows to enable all Aller Retour transactions of the shareholder to process with cash at the order entry level. Allowed values: Y(to enable) or N(to disable)."},"switchWithCashFlag":{"type":"string","description":"Flag to enable all switch transactions to be proccessed with cash in order entry level.  Allowed values: Y(for Yes),N(for No)"},"clientId":{"type":"number","description":"Client Internal ID linked to the Register."},"clientExternalId":{"type":"string","description":"Client External ID linked to the Register"},"productType":{"type":"number","description":"Product type code to group the registers for advice and reporting. For example: 1(Existing register), 2(Product 1)etc. The LoV is available in the CMESS table TA_PRODUCT."},"updateFromClientFlag":{"type":"string","description":"Flag to indicate that the register is created through the client. Allowed values: Y(for Yes),N(for No)"},"administrationFee":{"type":"number","description":"Shareholder administration fee type code. For example: 1(Percentage), 2(Scale Percentage), 3(Scale amount) etc. "},"administrationFeeDiscount":{"type":"number","description":"Shareholder's discount on administration fee. This is expressed in percentage."},"feeDiscount":{"type":"number","description":"Shareholder's discount on commission (type 0008) on all operation codes. The field is expressed in percentage for all the funds."},"blockingReason1":{"type":"string","description":"AML Blocking Reason 1. The LoV is available in the CMESS table TA_CLI_BLK."},"blockingReason2":{"type":"string","description":"AML Blocking Reason 2. The LoV is available in the CMESS table TA_CLI_BLK."},"blockingReason3":{"type":"string","description":"AML Blocking Reason 3. The LoV is available in the CMESS table TA_CLI_BLK."},"blockingReason4":{"type":"string","description":"AML Blocking Reason 4. The LoV is available in the CMESS table TA_CLI_BLK."},"allDebitsBlockedFlag":{"type":"string","description":"Flag allows blocking the debit transactions for the register. The debit transactions can be Redemption, Transfer and switch. Allowed values: Y(to block) or N(to unblock)."},"reportingFrequencyCode":{"type":"string","description":"Reporting frequency code for Standing Instruction transactions. For example: 0001 (Monthly), 0002(Quarterly), 0003 (Half yearly) etc. The LoV is available in the CMESS table TA_FRE_COD."},"salesmanId":{"type":"number","description":"Salesman internal ID linked to the Register"},"salesmanExternalId":{"type":"string","description":"Salesman external ID linked to the Register"},"dailyDividendPaymentType":{"type":"string","description":"To specify when the daily dividends can be paid at trade date of full redemptions or full switches. Allowed values: 0001(End of Month), 0002(Interim Dividend).  The LoV is available in the CMESS table TA_DIVPAY."},"dataProtectionFlag":{"type":"string","description":"Flag to authorizes the TA to use register's address for advertisement mailing. This check box is ticked by default.  Allowed values: Y(for Yes),N(for No). "},"faxIndemnityFlag":{"type":"string","description":"Flag allows shareholder to deal by fax. Allowed values: Y(for Yes),N(for No) "},"disclosureAccountNameFlag":{"type":"string","description":"Flag to allow the disclosure of register name on certain reports (Shareholder reports). Allowed values: Y(for Yes),N(for No)  or Null(=N). "},"marketCode":{"type":"string","description":"Market code linked to the register which is used to generate reports per market. For example: 0001(Not to print), 0002(To print), 0003(Returned mail)etc. The LoV is available in the CMESS table TA_MARKET."},"counterpartType":{"type":"string","description":"Counterpart account for credit and debit transactions. For example: 0101(DB Main outlet-CR Main outlet), 0102(DB Main outlet- CR lower outlet). 0103(DB Main outlet-CR Register) etc.  The field is linked to  the Cash and Security management functionality. The LoV is available in the CMESS table TA_CNTTYP."},"contractNotesModel":{"type":"string","description":"The model code of contract note sent by the TA. For example: 0001(No contact note), 0002(Cn Model1) etc. The field is linked to  the Cash and Security management functionality. The LoV is available in the CMESS table TA_MODEL."},"contractNotesMedia":{"type":"string","description":"The media code through which a contract note is sent to this register by the TA. For example: 0001(No contact note), 0002(Swift MT 515), 0003(File Interface) etc. The field is linked to  the Cash and Security management functionality. The LoV is available in the CMESS table TA_MEDIA."},"contractNotesRecipient":{"type":"string","description":"The recipient code who will receive a copy of the contract note. Allowed values: 0001(Contract Note to main outlet), 0002(Contract Note to lower outlet).0003 (Contract Note to register), 0004(Contract Note to collecting institution). The LoV is available in the CMESS table TA_RECIPT."},"custodianId":{"type":"number","description":"Custodian bank internal ID linked to the register"},"custodianExternalId":{"type":"string","description":"Custodian bank external ID linked to the register"},"euroPayCountry":{"type":"string","description":"It specifies the Country code (in 2 letter code, Eg: LU) in which the register has bank details within the Euro zone. The LoV is available in the CMESS table PAYS."},"payingAgentId":{"type":"number","description":"Paying Agent Internal ID"},"payingAgentExternalId":{"type":"string","description":"Paying Agent External ID"},"establishmentDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Date when the relationships with the register and the fiscal address are established. By default, this field is filled in with the application date. User can update if needed."},"birthPlace":{"type":"string","description":"Register's birth place."},"birthCountry":{"type":"string","description":"Birth country of the register. The LoV is available in the CMESS table PAYS."},"taxOption":{"type":"string","description":"Register's tax options. This field is mandatory for Retail and Residual Entity Registers. Allowed values: 00(ESD not applicable), 01(Withholding tax), 02(Exchange of Information) etc. The LoV is available in the CMESS table TA_TAXOPT."},"taxResidence":{"type":"string","description":"Tax residence of the register. It determines if the register is in scope for the taxation under EUSD. The LoV is available in the CMESS table PAYS."},"passportExpiryDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Register passport expiry date"},"taxOptionReceptionDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Date on which the tax option of the client has been received. This is an Optional field. "},"amlType":{"type":"string","description":"The AML type code of the Register. The LoV is available in the CMESS table TYP_AML."},"quantityRoundingType":{"type":"string","description":"Quantity Rounding type code at register level. This will override the parameters defined at fund level. Possible Values: 0001(Commercial rounding),0002(Round credits down, debits up), 0003 (Rounding down) etc. The LoV is available in the CMESS table TA_ARRONDI."},"tfcId":{"type":"number","description":"TFC internal ID linked to the register."},"tfcExternalId":{"type":"string","description":"TFC external ID linked to the register."},"amlAgentId":{"type":"number","description":"Agent Internal ID relevant for AML documents check.This field is only for informative purpose."},"amlAgentExternalId":{"type":"string","description":"Agent External ID relevant for AML documents check.This field is only for informative purpose."},"paymentByChequeFlag":{"type":"string","description":"The flag is used to enable  the payment by cheque functionality enabling the investor to pay or receive payment by cheque. The flag is unticked by default. If checked the bank account information will not be mandatory for the entity."},"irishTaxExemptFlag":{"type":"string","description":"Flag allows to disable IRIS tax. Allowed values: Y(to disable),N(to enable)"},"longName":{"type":"string","description":"Register Long name"},"accountType2":{"type":"string","description":"The type of the Register. For example:0001(Corporate Register), 0002(Institutional register), 0003(Private Register)etc. The LoV is available in the CMESS table RE_REGTYP."},"kyc":{"type":"string","description":"The know your client code. For example: C (Customer Due diligence), E (Client exempt from money laundering check), F (Client failed money laundering check) etc. The LoV is available in the CMESS table RE_MLACHKS."},"cashAccountManagementFlag":{"type":"string","description":"Flag allows to authorise the register for the cash account functionality. Allowed values: Y(for Yes) or N(for No)."},"noCancellationRightsFlag":{"type":"string","description":"Flag to disable the cancellation rights for the register. Allowed values: Y(to disable),N(to enable). "},"phoneDealingFlag":{"type":"string","description":"Flag to enable the phone dealing functionality. Allowed values: Y(to enable),N(to disable)."},"dividendPaymentType":{"type":"string","description":"Dividend payment type code. Allowed values: 02(Cheque),03(Transfer). "},"dividendBeneficiaryId":{"type":"number","description":"Register's internal ID to whom the dividend payment has to be done instead of the linked register."},"dividendBeneficiaryExternalId":{"type":"string","description":"Register's external ID to whom the dividend payment has to be done instead of the linked register."},"nationalIdType":{"type":"string","description":"National ID Type code. The LoV is available in the CMESS table RE_NAT_ID."},"nationalId":{"type":"string","description":"National Insurance Number (NINO) which is required for the UK market for ISAs and PEPs."},"swedishTaxFlag":{"type":"string","description":"It specifies if Swedish tax calculation is applicable for the register. Allowed values: 0001(Swedish tax calculation), 0002(Swedish tax calculation with DTT), 0003(Exempt from swedish tax). "},"taxStateCode":{"type":"string","description":"Tax state code is retrieved from the country code defined in the Tax residence field, corresponding to the State+Country code combination in the state definition setup."},"erisaFlag":{"type":"string","description":"Flag allows to do ERISA check for the register. Allowed values: Y(for Yes),N(for No) "},"fatcaReportingEntity":{"type":"string","description":"Entity code in charge of FATCA reporting and controls. For example: 0000(TBD), 0001(Reported by TA), 0002(Reported by agent) etc. The LoV is available in the CMESS table FAT_REPENT."},"kiidComplianceFlag":{"type":"string","description":"Flag allows to control the KIID(Key Investor Information Document) TA Compliance at order entry. Allowed values: Y(for Yes),N(for No)"},"kiidStandingInstructionFlag":{"type":"string","description":"Flag to indicate that KIID Standing instruction received. Allowed values: Y(for Yes),N(for No)"},"paymentAmountHandling":{"type":"string","description":"Payment amount handling method in contract level. For example: 0001(Use order amount for subs and reds). The LoV is available in the CMESS table PAY_HANDLE."},"singleInvestorId":{"type":"string","description":"Single Investro ID who trade in Indonesian securities via local brokers. This field is an informative field assigned by the Indonesian regulator."},"maritalStatus":{"type":"string","description":"Marital status of the Register. Allowed values: 1(Single), 2(Married), 3(Widower), XXX(GDPR). The LoV is available in the CMESS table MSTATUS."},"educationType":{"type":"string","description":"The education level code of the client. For example: 1(Elementary), 2(Junior high school), 3(Senior high school), 4(Diploma / Bachelor degree), 5(Post graduate), 6 (Master) etc. The LoV is available in the CMESS table TYPE_EDU."},"sourceOfFunds":{"type":"string","description":"Register's source of fund code. For example: 1(Salary), 2(Profit),3(Saving) etc. "},"incomeType":{"type":"string","description":"The income band code of the client. For example: 1(<10 Million/year), 2 (> 10-50 Million/year), 3 (>50-100 Million/year) etc. The LoV is available in the CMESS table RINCM."},"purposeOfInvestment":{"type":"string","description":"The purpose of investment for the client. For example: 1(Price appreciation), 2(Investment), 3(Speculation) etc. The LoV is available in the CMESS table TA_INVEST."},"profession":{"type":"string","description":"Register's  profession. For Example: 0002(Consultant), 0003(Transfer Agent) etc. The LoV is available in the CMESS table TA_PROF."},"erisaPercentage":{"type":"number","description":"It specifies the ERISA investment percentage. ERISA % can be greater than zero and less than or equal to 100."},"affiliatedFlag":{"type":"string","description":"Flag indicates that the investor is affiliated to the fund manager. Allowed values: Y(for Yes) or N(for No)."},"nonErisaBpFlag":{"type":"string","description":"Non Erisa bpflag"},"nonErisaBpPercentage":{"type":"number","description":"Non Erisa bp percentage"},"amlJurisdiction":{"type":"string","description":"It specifies the AML jurisdiction of the Register. The LoV is available in the CMESS table AML_JURIS."},"manualRiskRating":{"type":"string","description":"Manual Risk Rating code of the client. For example: 0001(Simplified Risk Group), 0002(Low Risk Group), 0003(Medium Risk Group), 0004(High Risk Group) etc. The LoV is available in the CMESS table TA_RISGPEN."},"freeText2":{"type":"string","description":"Free text to add any details for the Register. "},"newIssueStatus":{"type":"string","description":"New issue status"},"cdscRolloverRegisterId":{"type":"number","description":"CDSC roll over Register Internal ID."},"cdscRolloverRegisterExternalId":{"type":"string","description":"CDSC roll over Register External ID."},"jointAccountRequiredSignatures":{"type":"string","description":"The joint account signature details. Allowed values: 0001(All holders need to sign, 0002 (one holder can sign). The LoV is available in the CMESS table JT_AC_SIGN."},"aifmdRegisterType":{"type":"string","description":"AIFMD (Alternative Investment Fund Managers Directive) Register type code. For example: BANK(Bank), GENG(General Government), HHLD(Households) etc. The LoV is available in the CMESS table AIFMD_RTYP."},"autoMatchFlag":{"type":"string","description":"Flag to block the user from auto-matching. Allowed values: Y(to block) or N(to unblock)."},"dividendSettledShares":{"type":"string","description":"It specifies if the dividend reinvestment or payment on the settled shares shall be allowed. Allowed values: Y(Yes), N(No). "},"piiDisclosure":{"type":"string","description":"PII disclosure code to specify if the entity consents to share its PII information or not. Allowed values: 0001(Consent), 0002(Non-Consent). The LoV is available in the CMESS table PII_DISC."},"personStatus":{"type":"string","description":"Person status"},"globalOrderingFlag":{"type":"string","description":"Flag allows to enable the global ordering functionality.  Allowed values: Y(for Yes),N(for No)"},"globalOrderingSendingType":{"type":"string","description":"The field is used to store sending method and DN code for the Central TA."},"globalOrderingSwitchType":{"type":"string","description":"The field is used to store sending method and DN code for the Central TA for Switch transactions"},"globalOrderingtransferType":{"type":"string","description":"The field is used to store sending method and DN code for the Central TA for transfer transactions"},"screenReference":{"type":"string","description":"Screen reference"},"comment":{"type":"string","description":"Free text for any comments"},"distributionChannel":{"type":"string","description":"The distributer channel code of the client. Alloowed values: 0001(NSCC), 0002(Proserve), 0003(Paradign), 0004(Marbo). The LoV is available in the CMESS table DIST_MTD."},"monitoringType":{"type":"string","description":"The monitoring type used to monitor the investor profile before investment. Allowed values: 0001(PEP), 0002 (Potential PEP), 0003 (Diplomat), 0004(Criminal), 0005(Pledge Block). The LoV is available in the CMESS table MONT_TYPE."},"interfaceBlockedFlag":{"type":"string","description":"Flag to block the register from placing transactions through Interface. Allowed values: Y(to block),N(to unblock)"},"paymentProcess":{"type":"string","description":"The payment process to be followed for the deals. Allowed values: 01(STP), 02(Semi-STP). The LoV is available in the CMESS table TA_PAYPROC."},"documentHandling":{"type":"string","description":"Swift document handling details for theÂ Â Non Swift Trigger ID 0008-Generic static data change. Allowed values: 0001(Auto release) 0002(Hold), 0003(Suppress). The LoV is available in the CMESS table DOC_MGMT. "},"temporaryRegisterFlag":{"type":"string","description":"Flag to indicate as the register created is temporarily created for NSCC. Allowed values: Y(for Yes),N(for No) "},"fundPromoterId":{"type":"number","description":"Fund Promoter Internal ID linked to the Register."},"fundPromoterExternalId":{"type":"string","description":"Fund Promoter external ID linked to the Register."},"commissionGroup":{"type":"string","description":"Group commission code linked to the Register. The LoV is available in the CMESS table TA_GROUT."},"mirroringRegisterId":{"type":"number","description":"Mirroring Register external ID linked to the register."},"mirroringRegisterExternalId":{"type":"string","description":"Mirroring Register external ID linked to the register."},"blanketMinLimitWaiverFlag":{"type":"string","description":"Flag to enable blanket waiver for transactions that do not meet the minimum investment limits. Allowed values: Y (to enable),N (to disable), or Null(=N)."},"marketingCode":{"type":"string","description":"Marketing code linked to the Register. For example: 0001(Marketing Code1), 0002(Marketing code 2) etc. Retail fund related field. The LoV is available in the CMESS table MKT_CODE."},"unwrapped":{"type":"string","description":"Unwrapped"},"mifidStatus":{"type":"string","description":"Status of client as per MIFID directives. Allowed values: 0001(independent Advisor), 0002(Non-Independent Advisor), 0003 (Unknown).  The LoV is available in the CMESS table MIFID_STAT."},"advisoryType":{"type":"string","description":"The Advisory service type code of the Client. For example: D (for Discretionary) , E (for Execution only) , ND(for Non-Discretionary).The LoV is available in the CMESS table MIFID_ADV."},"useType":{"type":"string","description":"Use type of the Fund Promoter. Possible values: 1(Active), 2(Inactive), X(Pre-entity) etc. The LoV is available in the CMESS table TYPE_USE."},"apsTransferDeathDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"APS transfer death date"},"deathDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Date on which the register died."},"deathConfirmDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Date on which the management company receives confirmation of the register's death by receiving a death certificate or a Probate, both legal documents state the exact date of the register's death."},"deathNotificationDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Date on which the management company is notified of a register's death by telephone, letter, etc. Field will be automatically updated with the Application Date when the Type Use will be changed to Death notified. Field is not updateable. "},"probateGrantDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Probategrant date"},"nsccMatrixLevel":{"type":"string","description":"The field is used to group the register information which belongs to US region. (Unable to find the meaning in UG)"},"nonTaxableCertificateCode":{"type":"string","description":"It specifies if the Non-taxable Certificate is applicable. Allowed values: 0000(No), 0001(Yes)."},"nonTaxableCertificateStartDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Start date of the Non-taxable Certificate"},"nonTaxableCertificateExpiryDate":{"type":"string","format":"date","example":"dd-MM-yyyy","description":"Expiry date of the Non-taxable Certificate"}}},"getRegisterByRegisterIdSuccessheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/successHeaderstatusSchema"},"company":{"type":"string"},"username":{"type":"string"},"referenceId":{"type":"string"},"token":{"type":"string"}}},"getRegisterByRegisterIdrecordsSchema":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}},"getRegisterByRegisterIdSuccessbodyResponse":{"properties":{"records":{"$ref":"#/definitions/getRegisterByRegisterIdrecordsSchema"}}},"getRegisterByRegisterIdSuccessResponse":{"properties":{"header":{"$ref":"#/definitions/getRegisterByRegisterIdSuccessheaderResponse"},"body":{"$ref":"#/definitions/getRegisterByRegisterIdSuccessbodyResponse"}}},"getRegisterByRegisterIdErrorheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/errorHeaderstatusSchema"},"referenceId":{"type":"string"},"token":{"type":"string"},"username":{"type":"string"}}},"getRegisterByRegisterIdErrorbodyResponse":{"properties":{"items":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"getRegisterByRegisterIdErrorResponse":{"properties":{"header":{"$ref":"#/definitions/getRegisterByRegisterIdErrorheaderResponse"},"body":{"type":"object"}}},"getRegisterSuccessheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/successHeaderstatusSchema"},"company":{"type":"string"},"username":{"type":"string"},"referenceId":{"type":"string"},"token":{"type":"string"}}},"getRegisterrecordsSchema":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}},"getRegisterSuccessbodyResponse":{"properties":{"records":{"$ref":"#/definitions/getRegisterrecordsSchema"}}},"getRegisterSuccessResponse":{"properties":{"header":{"$ref":"#/definitions/getRegisterSuccessheaderResponse"},"body":{"$ref":"#/definitions/getRegisterSuccessbodyResponse"}}},"getRegisterErrorheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/errorHeaderstatusSchema"},"referenceId":{"type":"string"},"token":{"type":"string"},"username":{"type":"string"}}},"getRegisterErrorbodyResponse":{"properties":{"items":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"getRegisterErrorResponse":{"properties":{"header":{"$ref":"#/definitions/getRegisterErrorheaderResponse"},"body":{"type":"object"}}},"putRegisterByRegisterIdSuccessheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/successHeaderstatusSchema"},"company":{"type":"string"},"username":{"type":"string"},"referenceId":{"type":"string"},"token":{"type":"string"}}},"putRegisterByRegisterIdrecordsSchema":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}},"putRegisterByRegisterIdSuccessbodyResponse":{"properties":{"records":{"$ref":"#/definitions/putRegisterByRegisterIdrecordsSchema"}}},"putRegisterByRegisterIdSuccessResponse":{"properties":{"header":{"$ref":"#/definitions/putRegisterByRegisterIdSuccessheaderResponse"},"body":{"$ref":"#/definitions/putRegisterByRegisterIdSuccessbodyResponse"}}},"putRegisterByRegisterIdErrorheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/errorHeaderstatusSchema"},"referenceId":{"type":"string"},"token":{"type":"string"},"username":{"type":"string"}}},"putRegisterByRegisterIdErrorbodyResponse":{"properties":{"items":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"putRegisterByRegisterIdErrorResponse":{"properties":{"header":{"$ref":"#/definitions/putRegisterByRegisterIdErrorheaderResponse"},"body":{"type":"object"}}},"sRegisterV1.0.0BULKPayload":{"properties":{"header":{"type":"object"},"body":{"type":"object","properties":{"registers":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}}}}}},"putRegisterSuccessheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/successHeaderstatusSchema"},"company":{"type":"string"},"username":{"type":"string"},"referenceId":{"type":"string"},"token":{"type":"string"}}},"putRegisterrecordsSchema":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}},"putRegisterSuccessbodyResponse":{"properties":{"records":{"$ref":"#/definitions/putRegisterrecordsSchema"}}},"putRegisterSuccessResponse":{"properties":{"header":{"$ref":"#/definitions/putRegisterSuccessheaderResponse"},"body":{"$ref":"#/definitions/putRegisterSuccessbodyResponse"}}},"putRegisterErrorheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/errorHeaderstatusSchema"},"referenceId":{"type":"string"},"token":{"type":"string"},"username":{"type":"string"}}},"putRegisterErrorbodyResponse":{"properties":{"items":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"putRegisterErrorResponse":{"properties":{"header":{"$ref":"#/definitions/putRegisterErrorheaderResponse"},"body":{"type":"object"}}},"deleteRegisterSuccessheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/successHeaderstatusSchema"},"company":{"type":"string"},"username":{"type":"string"},"referenceId":{"type":"string"},"token":{"type":"string"}}},"deleteRegisterrecordsSchema":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}},"deleteRegisterSuccessbodyResponse":{"properties":{"records":{"$ref":"#/definitions/deleteRegisterrecordsSchema"}}},"deleteRegisterSuccessResponse":{"properties":{"header":{"$ref":"#/definitions/deleteRegisterSuccessheaderResponse"},"body":{"$ref":"#/definitions/deleteRegisterSuccessbodyResponse"}}},"deleteRegisterErrorheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/errorHeaderstatusSchema"},"referenceId":{"type":"string"},"token":{"type":"string"},"username":{"type":"string"}}},"deleteRegisterErrorbodyResponse":{"properties":{"items":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"deleteRegisterErrorResponse":{"properties":{"header":{"$ref":"#/definitions/deleteRegisterErrorheaderResponse"},"body":{"type":"object"}}},"deleteRegisterByRegisterIdSuccessheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/successHeaderstatusSchema"},"company":{"type":"string"},"username":{"type":"string"},"referenceId":{"type":"string"},"token":{"type":"string"}}},"deleteRegisterByRegisterIdrecordsSchema":{"type":"array","items":{"$ref":"#/definitions/sRegisterV1.0.0"}},"deleteRegisterByRegisterIdSuccessbodyResponse":{"properties":{"records":{"$ref":"#/definitions/deleteRegisterByRegisterIdrecordsSchema"}}},"deleteRegisterByRegisterIdSuccessResponse":{"properties":{"header":{"$ref":"#/definitions/deleteRegisterByRegisterIdSuccessheaderResponse"},"body":{"$ref":"#/definitions/deleteRegisterByRegisterIdSuccessbodyResponse"}}},"deleteRegisterByRegisterIdErrorheaderResponse":{"properties":{"pagination":{"$ref":"#/definitions/paginationSchema"},"audit":{"$ref":"#/definitions/auditSchema"},"status":{"$ref":"#/definitions/errorHeaderstatusSchema"},"referenceId":{"type":"string"},"token":{"type":"string"},"username":{"type":"string"}}},"deleteRegisterByRegisterIdErrorbodyResponse":{"properties":{"items":{"type":"array","items":{"type":"object","properties":{"code":{"type":"string"},"message":{"type":"string"},"type":{"type":"string"}}}}}},"deleteRegisterByRegisterIdErrorResponse":{"properties":{"header":{"$ref":"#/definitions/deleteRegisterByRegisterIdErrorheaderResponse"},"body":{"type":"object"}}}}}