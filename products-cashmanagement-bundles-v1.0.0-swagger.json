{
  "swagger" : "2.0",
  "info" : {
    "description" : "Create, amend and retrieve bundle arrangements",
    "version" : "v1.0.0",
    "title" : "Manage bundle arrangements"
  },
  "host" : "api.server.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "paths" : {
    "/product/cashManagement/bundles/accounts/summaryAccounts/debitInterestConditions" : {
      "post" : {
        "summary" : "Update Debit Interest condition for Summary Accounts",
        "description" : "Update Debit Interest condition for Summary Accounts",
        "operationId" : "updateSummaryAccountDebitInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateSummaryAccountDebitInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/currencySummaryAccounts/debitInterestConditions" : {
      "post" : {
        "summary" : "Update Debit Interest condition for Currency Accounts",
        "description" : "Update Debit Interest condition for Currency Accounts",
        "operationId" : "updateCurrencyAccountDebitInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateCurrencyAccountDebitInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/transactionAccounts/debitInterestConditions" : {
      "post" : {
        "summary" : "Update Debit Interest condition for Transaction Accounts",
        "description" : "Update Debit Interest condition for Transaction Accounts",
        "operationId" : "updateTransactionAccountDebitInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionAccountDebitInterestConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateTransactionAccountDebitInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/goLiveDates" : {
      "post" : {
        "summary" : "Set Go-Live date for SA / CS / TR / MTR Accounts",
        "description" : "Set Go-Live date for SA / CS / TR / MTR Accounts",
        "operationId" : "updateAccountOperationalDate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateAccountOperationalDateResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/liveAccountClosures" : {
      "post" : {
        "summary" : "Closure of CS / SA / TR accounts",
        "description" : "Closure of CS / SA / TR accounts",
        "operationId" : "createBundleLiveAccountClosure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBundleLiveAccountClosureResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/preliminaryAccountClosures" : {
      "post" : {
        "summary" : "Closure of TR / CS / SA Accounts in Prelim",
        "description" : "Closure of TR / CS / SA Accounts in Prelim",
        "operationId" : "createBundleAccountClosure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBundleAccountClosureResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/{bundleId}/interestConditions" : {
      "get" : {
        "summary" : "List Master Arrangement static information",
        "description" : "List Master Arrangement static information",
        "operationId" : "getMasterInterestCompensation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "x-example" : "AA190791Z7N2"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "MasterInterestCompensationResponse",
            "schema" : {
              "$ref" : "#/definitions/MasterInterestCompensationResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/drafts" : {
      "post" : {
        "summary" : "Creation of Master / Bundle Arrangement, SA / CS / TR / MTR",
        "description" : "Creation of Master / Bundle Arrangement, SA / CS / TR / MTR",
        "operationId" : "createBundleMasterArrangements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BundleMasterArrangements"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createBundleMasterArrangementsResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleMasterArrangementsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts" : {
      "post" : {
        "summary" : "Add New accounts SA / CS / TR / MTR+J16",
        "description" : "Add New accounts SA / CS / TR / MTR+J16",
        "operationId" : "updateBundleMasterArrangements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/BundleMasterArrangements1"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBundleMasterArrangementsResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleMasterArrangementsResponse1"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      },
      "put" : {
        "summary" : "Edit / Amend Draft / Prelim structure",
        "description" : "Edit / Amend Draft / Prelim structure",
        "operationId" : "updateBundleStructureAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBundleStructureAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/crossPoolMovements" : {
      "post" : {
        "summary" : "Initiate Cross Pool Movement",
        "description" : "Initiate Cross Pool Movement",
        "operationId" : "updateCrossPoolAccountMovement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateCrossPoolAccountMovementResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/crossPoolMovements/cancellations" : {
      "post" : {
        "summary" : "Edit / Cancel Cross Pool Movement",
        "description" : "Edit / Cancel Cross Pool Movement",
        "operationId" : "deleteCrossPoolAccountMovement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CrossPoolAccountMovement"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "deleteCrossPoolAccountMovementResponse",
            "schema" : {
              "$ref" : "#/definitions/CrossPoolAccountMovementResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/restructures" : {
      "post" : {
        "summary" : "Conversion of TR accounts to Standalone Accounts",
        "description" : "Conversion of TR accounts to Standalone Accounts",
        "operationId" : "deleteAccountFromBundle",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "deleteAccountFromBundleResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles" : {
      "post" : {
        "summary" : "Initiate Cashpool Restructure",
        "description" : "Initiate Cashpool Restructure",
        "operationId" : "updateBundleStructure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AccountOperationalDate"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateBundleStructureResponse",
            "schema" : {
              "$ref" : "#/definitions/AccountOperationalDateResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/summaryAccounts/creditInterestConditions" : {
      "post" : {
        "summary" : "Update Credit Interest condition for a Summary account",
        "description" : "Update Credit Interest condition for a Summary account",
        "operationId" : "updateSumaryAccountCreditInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateSumaryAccountCreditInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/currencySummaryAccounts/creditInterestConditions" : {
      "post" : {
        "summary" : "Update Credit Interest condition for a Summary account",
        "description" : "Update Credit Interest condition for a Summary account",
        "operationId" : "updateCurrencySummaryAccountCreditInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountDebitInterestConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateCurrencySummaryAccountCreditInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/transactionAccounts/creditInterestConditions" : {
      "post" : {
        "summary" : "Update Credit Interest condition for a Transaction account",
        "description" : "Update Credit Interest condition for a Transaction account",
        "operationId" : "updateTransactionAccountCreditInterestConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionAccountDebitInterestConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "updateTransactionAccountCreditInterestConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/summaryAccounts/limits" : {
      "post" : {
        "summary" : "To Set cover control for Summary accounts",
        "description" : "To Set cover control for Summary accounts",
        "operationId" : "createSummaryAccountLimitConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountLimitConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createSummaryAccountLimitConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountLimitConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/currencySummaryAccounts/limits" : {
      "post" : {
        "summary" : "To Set cover control for Currency Summary accounts",
        "description" : "To Set cover control for Currency Summary accounts",
        "operationId" : "createCurrencySummaryAccountLimitConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SummaryAccountLimitConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createCurrencySummaryAccountLimitConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/SummaryAccountLimitConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    },
    "/product/cashManagement/bundles/accounts/transactionAccounts/limits" : {
      "post" : {
        "summary" : "To Set cover control for Transaction accounts",
        "description" : "To Set cover control for Transaction accounts",
        "operationId" : "createTransactionAccountLimitConditions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TransactionAccountLimitConditions"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the company, following the format CCGGGLLLL, where: CC is the country code, GGG is Company Group Code and LLLL is the Local Code. Country Code must be a valid countryCode, Company Group Code must be 3 numeric characters in the range 001-999 and must be a valid companyGroup. The Local Code is 4 numeric characters in the range 0001-9999, e.g. GB0010001",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "createTransactionAccountLimitConditionsResponse",
            "schema" : {
              "$ref" : "#/definitions/TransactionAccountLimitConditionsResponse"
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessArrangementErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemArrangementErrorResponse"
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ArrangementErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override."
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "The actual override message."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "The code related to override message."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "SummaryAccountDebitInterestConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsBody"
        }
      },
      "description" : "SummaryAccountDebitInterestConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : "190098"
          } ],
          "activityId" : "ACCOUNTS-UPDATE-DRINTEREST",
          "drinterest" : {
            "interest" : [ {
              "upTo" : "",
              "orPercent" : "",
              "effectiveRate" : "",
              "negativeRate" : "",
              "fixed" : "7.5",
              "maxRate" : "",
              "minMaxRate" : "",
              "spread" : ""
            } ]
          },
          "arrangmentId" : "AA190797P0JT",
          "productId" : "SUMMARY.ACCOUNT",
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "SummaryAccountDebitInterestConditionsBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "drinterest" : {
          "type" : "object",
          "properties" : {
            "interest" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "fixed" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "spread" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 6
                  },
                  "minMaxRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "maxRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "effectiveRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "upTo" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "negativeRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 13
                  },
                  "orPercent" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 9
                  },
                  "margins" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "margin" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 6
                        },
                        "marginOperation" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 15
                        },
                        "marginRate" : {
                          "type" : "string",
                          "description" : "The margin rate used to adjust the specified rate of interest and to appropriately reflect any rate profit realized. The result is the nominal rate of interest.  ",
                          "minLength" : 0,
                          "maxLength" : 10
                        }
                      }
                    }
                  }
                }
              }
            },
            "attributes" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "value" : {
                    "type" : "string",
                    "description" : "The value of the field on which the Alert criteria is based",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "linkedArrangement" : {
                    "type" : "string",
                    "description" : "The Arrangement to be linked for calculating the Interest Rate",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "tiers" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 5
            },
            "linkedProperty" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 15
            }
          }
        }
      }
    },
    "ArrangementHeader" : {
      "properties" : {
        "transactionStatus" : {
          "type" : "string",
          "description" : "The status of the transaction"
        },
        "aaaId" : {
          "type" : "string",
          "description" : "The Identifier of the aa record created"
        },
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "uniqueIdentifier" : {
          "type" : "string",
          "description" : "The unique identifier/Message Reference of the record created."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "SummaryAccountDebitInterestConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsResponseBody"
        }
      },
      "description" : "SummaryAccountDebitInterestConditionsResponse"
    },
    "SummaryAccountDebitInterestConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "crinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "drinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixed" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "spread" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "minMaxRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "maxRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "upTo" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "orPercent" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "margins" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "margin" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 6
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "The margin rate used to adjust the specified rate of interest and to appropriately reflect any rate profit realized. The result is the nominal rate of interest.  ",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "The value of the field on which the Alert criteria is based",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "linkedArrangement" : {
                            "type" : "string",
                            "description" : "The Arrangement to be linked for calculating the Interest Rate",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "tiers" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "penalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundleinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhpenalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override."
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message."
              },
              "code" : {
                "type" : "string",
                "description" : "The code related to override message."
              },
              "options" : {
                "type" : "array",
                "description" : "The usable options for the override.",
                "items" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "description" : "The type of the override."
              }
            }
          }
        }
      }
    },
    "ArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ArrangementErrorResponse"
    },
    "ArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "message" : {
                "type" : "string"
              },
              "property" : {
                "type" : "string"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "BusinessArrangementErrorResponse"
    },
    "BusinessArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "message" : {
                "type" : "string",
                "description" : "for bad requests"
              },
              "property" : {
                "type" : "string"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemArrangementErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemArrangementErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "SystemArrangementErrorResponse"
    },
    "SystemArrangementErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "message" : {
                "type" : "string",
                "description" : "caused by server"
              },
              "property" : {
                "type" : "string"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "TransactionAccountDebitInterestConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsBody"
        }
      },
      "description" : "TransactionAccountDebitInterestConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : "190098"
          } ],
          "activityId" : "ACCOUNTS-UPDATE-DRINTEREST",
          "drinterest" : {
            "interest" : [ {
              "upTo" : "",
              "orPercent" : "",
              "effectiveRate" : "",
              "negativeRate" : "",
              "fixed" : "9.5",
              "maxRate" : "",
              "minMaxRate" : "",
              "spread" : ""
            } ]
          },
          "arrangmentId" : "AA19079044VJ",
          "productId" : "TR.ACCOUNT",
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "TransactionAccountDebitInterestConditionsBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "drinterest" : {
          "type" : "object",
          "properties" : {
            "interest" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "fixed" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "spread" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 6
                  },
                  "minMaxRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "maxRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "effectiveRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "upTo" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "negativeRate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 13
                  },
                  "orPercent" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 9
                  },
                  "margins" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "margin" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 6
                        },
                        "marginOperation" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 15
                        },
                        "marginRate" : {
                          "type" : "string",
                          "description" : "The margin rate used to adjust the specified rate of interest and to appropriately reflect any rate profit realized. The result is the nominal rate of interest.  ",
                          "minLength" : 0,
                          "maxLength" : 10
                        }
                      }
                    }
                  }
                }
              }
            },
            "attributes" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "attributes" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 10
                  },
                  "value" : {
                    "type" : "string",
                    "description" : "The value of the field on which the Alert criteria is based",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "linkedArrangement" : {
                    "type" : "string",
                    "description" : "The Arrangement to be linked for calculating the Interest Rate",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "tiers" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 5
            },
            "linkedProperty" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 15
            }
          }
        }
      }
    },
    "TransactionAccountDebitInterestConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsResponseBody"
        }
      },
      "description" : "TransactionAccountDebitInterestConditionsResponse"
    },
    "TransactionAccountDebitInterestConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "crinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "drinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "interest" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "fixed" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "spread" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 6
                          },
                          "minMaxRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "maxRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "effectiveRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "upTo" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "negativeRate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 13
                          },
                          "orPercent" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 9
                          },
                          "margins" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "margin" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 6
                                },
                                "marginOperation" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 15
                                },
                                "marginRate" : {
                                  "type" : "string",
                                  "description" : "The margin rate used to adjust the specified rate of interest and to appropriately reflect any rate profit realized. The result is the nominal rate of interest.  ",
                                  "minLength" : 0,
                                  "maxLength" : 10
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "attributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "attributes" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 10
                          },
                          "value" : {
                            "type" : "string",
                            "description" : "The value of the field on which the Alert criteria is based",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "linkedArrangement" : {
                            "type" : "string",
                            "description" : "The Arrangement to be linked for calculating the Interest Rate",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "tiers" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 5
                    },
                    "linkedProperty" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 15
                    }
                  }
                }
              }
            },
            "penalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundleinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "infdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhcrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhdrinterest" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "inhpenalint" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "utllimitfees" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "ovdlimitfees" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundlecrinterst" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            },
            "bundledrinterst" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AccountOperationalDate" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AccountOperationalDateBody"
        }
      },
      "description" : "AccountOperationalDate",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "BUNDLE-RESTRUCTURE-BUNDLEHIERARCHY",
          "arrangmentId" : "AA190857YS4D",
          "productId" : "MASTER.ACCOUNT",
          "bundlehierarchy" : {
            "aliases" : [ {
              "alias" : ""
            } ],
            "linkTypes" : [ {
              "linkType" : "SET.LIVE.DATE"
            } ],
            "accounts" : [ {
              "account" : "84816"
            } ],
            "goLiveDates" : [ {
              "goLiveDate" : "20190520"
            } ]
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "AccountOperationalDateBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "bundlehierarchy" : {
          "type" : "object",
          "properties" : {
            "aliases" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "alias" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  }
                }
              }
            },
            "accounts" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "account" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  }
                }
              }
            },
            "customers" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "companies" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "company" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  }
                }
              }
            },
            "currencies" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "currency" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "products" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "product" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  }
                }
              }
            },
            "names" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 4
                  }
                }
              }
            },
            "alternateReferences" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "alternateReference" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "parents" : {
              "type" : "array",
              "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
              "items" : {
                "type" : "object",
                "properties" : {
                  "parent" : {
                    "type" : "string",
                    "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
                    "minLength" : 0,
                    "maxLength" : 6
                  }
                }
              }
            },
            "levels" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "level" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  }
                }
              }
            },
            "goLiveDates" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "goLiveDate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "linkTypes" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "linkType" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "keepBalances" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "keepBalance" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 11
                  }
                }
              }
            },
            "newMasters" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "newMaster" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 9
                  }
                }
              }
            },
            "cancelRestructures" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "cancelRestructure" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "integrityCheckDay" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 20,
              "enum" : [ "integrityCheckDay" ]
            }
          }
        }
      }
    },
    "AccountOperationalDateResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AccountOperationalDateResponseBody"
        }
      },
      "description" : "AccountOperationalDateResponse"
    },
    "AccountOperationalDateResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "bundlehierarchy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "aliases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alias" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "accounts" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "account" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "customers" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "companies" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "company" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "currencies" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "currency" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "product" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "names" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 4
                          }
                        }
                      }
                    },
                    "alternateReferences" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateReference" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "parents" : {
                      "type" : "array",
                      "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "parent" : {
                            "type" : "string",
                            "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
                            "minLength" : 0,
                            "maxLength" : 6
                          }
                        }
                      }
                    },
                    "levels" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "level" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "goLiveDates" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "goLiveDate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "linkTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "linkType" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "keepBalances" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "keepBalance" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "newMasters" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "newMaster" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "cancelRestructures" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "cancelRestructure" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 17
                          }
                        }
                      }
                    },
                    "integrityCheckDay" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 20,
                      "enum" : [ "integrityCheckDay" ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "MasterInterestCompensationResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/MasterInterestCompensationResponseBody"
        }
      },
      "description" : "MasterInterestCompensationResponse"
    },
    "MasterInterestCompensationResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "recipientProduct" : {
            "type" : "string",
            "maxLength" : 30
          },
          "recipientProperty" : {
            "type" : "string",
            "maxLength" : 30
          },
          "donorProduct" : {
            "type" : "string",
            "maxLength" : 30
          },
          "donorProperty" : {
            "type" : "string",
            "maxLength" : 30
          },
          "donorAccrual" : {
            "type" : "string",
            "maxLength" : 20
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "BundleMasterArrangements" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleMasterArrangementsBody"
        }
      },
      "description" : "BundleMasterArrangements",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "Account has negative balance while linking the pool.",
              "id" : "AA-NEGATIVE.BALANCE.IN.POOL.ACCOUNT",
              "type" : "Override"
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "BUNDLE-RESTRUCTURE-BUNDLEHIERARCHY",
          "arrangmentId" : "AA19085TDX8B",
          "productId" : "MASTER.ACCOUNT",
          "bundlehierarchy" : {
            "integrityCheckDays" : "",
            "parentAccount1" : "",
            "accountAlias1" : "",
            "accLocation1" : "",
            "accProduct1" : "SUMMARY.ACCOUNT",
            "liveDate1" : "20190419",
            "linkType1" : "LINK",
            "cancelRestructure1" : "",
            "accountRef1" : "78859",
            "accCurrency1" : "USD",
            "shortName1" : "",
            "accCompany1" : "GB0010001",
            "altReference1" : "",
            "newBundleRef1" : "",
            "customer1" : "100182",
            "keepBalance1" : ""
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "BundleMasterArrangementsBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productBundle" : {
          "type" : "object",
          "properties" : {
            "product" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "group" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  },
                  "product" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "minimum" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "maximum" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  },
                  "arrangment" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "arrangmentId" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 12
                        },
                        "currency" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 8
                        }
                      }
                    }
                  },
                  "masterArrangement" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "arrangmentId" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 12
                        },
                        "propertyType" : {
                          "type" : "string",
                          "description" : "The property type of the arrangement e.g. Forward.dated, product.only, credit etc.",
                          "minLength" : 0,
                          "maxLength" : 12
                        }
                      }
                    }
                  }
                }
              }
            },
            "referenceCurrency" : {
              "type" : "string",
              "description" : "The reference currency",
              "minLength" : 0,
              "maxLength" : 18
            },
            "limitType" : {
              "type" : "string",
              "description" : "Defines the limit type for the trade",
              "minLength" : 0,
              "maxLength" : 10
            },
            "masterAccountName" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        },
        "bundlehierarchy" : {
          "type" : "object",
          "properties" : {
            "aliases" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "alias" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  }
                }
              }
            },
            "accounts" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "account" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  }
                }
              }
            },
            "customers" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "customer" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "companies" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "company" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  }
                }
              }
            },
            "currencies" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "currency" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "products" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "product" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 7
                  }
                }
              }
            },
            "names" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 4
                  }
                }
              }
            },
            "alternateReferences" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "alternateReference" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 18
                  }
                }
              }
            },
            "parents" : {
              "type" : "array",
              "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
              "items" : {
                "type" : "object",
                "properties" : {
                  "parent" : {
                    "type" : "string",
                    "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
                    "minLength" : 0,
                    "maxLength" : 6
                  }
                }
              }
            },
            "levels" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "level" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 5
                  }
                }
              }
            },
            "goLiveDates" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "goLiveDate" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 10
                  }
                }
              }
            },
            "linkTypes" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "linkType" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 8
                  }
                }
              }
            },
            "keepBalances" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "keepBalance" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 11
                  }
                }
              }
            },
            "newMasters" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "newMaster" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 9
                  }
                }
              }
            },
            "cancelRestructures" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "cancelRestructure" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 17
                  }
                }
              }
            },
            "integrityCheckDay" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 20,
              "enum" : [ "integrityCheckDay" ]
            }
          }
        }
      }
    },
    "BundleMasterArrangementsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleMasterArrangementsResponseBody"
        }
      },
      "description" : "BundleMasterArrangementsResponse"
    },
    "BundleMasterArrangementsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "productBundle" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "product" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "group" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          },
                          "product" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "minimum" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "maximum" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          },
                          "arrangment" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "arrangmentId" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "currency" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 8
                                }
                              }
                            }
                          },
                          "masterArrangement" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "arrangmentId" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                },
                                "propertyType" : {
                                  "type" : "string",
                                  "description" : "The property type of the arrangement e.g. Forward.dated, product.only, credit etc.",
                                  "minLength" : 0,
                                  "maxLength" : 12
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "referenceCurrency" : {
                      "type" : "string",
                      "description" : "The reference currency",
                      "minLength" : 0,
                      "maxLength" : 18
                    },
                    "limitType" : {
                      "type" : "string",
                      "description" : "Defines the limit type for the trade",
                      "minLength" : 0,
                      "maxLength" : 10
                    },
                    "masterAccountName" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              }
            },
            "bundlehierarchy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "aliases" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alias" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "accounts" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "account" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "customers" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "customer" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "companies" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "company" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "currencies" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "currency" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "products" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "product" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 7
                          }
                        }
                      }
                    },
                    "names" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 4
                          }
                        }
                      }
                    },
                    "alternateReferences" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "alternateReference" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 18
                          }
                        }
                      }
                    },
                    "parents" : {
                      "type" : "array",
                      "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "parent" : {
                            "type" : "string",
                            "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
                            "minLength" : 0,
                            "maxLength" : 6
                          }
                        }
                      }
                    },
                    "levels" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "level" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 5
                          }
                        }
                      }
                    },
                    "goLiveDates" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "goLiveDate" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 10
                          }
                        }
                      }
                    },
                    "linkTypes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "linkType" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 8
                          }
                        }
                      }
                    },
                    "keepBalances" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "keepBalance" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 11
                          }
                        }
                      }
                    },
                    "newMasters" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "newMaster" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 9
                          }
                        }
                      }
                    },
                    "cancelRestructures" : {
                      "type" : "array",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "cancelRestructure" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 17
                          }
                        }
                      }
                    },
                    "integrityCheckDay" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 20,
                      "enum" : [ "integrityCheckDay" ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "BundleMasterArrangements1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleMasterArrangements1Body"
        }
      },
      "description" : "BundleMasterArrangements1"
    },
    "BundleMasterArrangements1Body" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "bundlehierarchy" : {
          "type" : "object",
          "properties" : {
            "accountAlias1" : {
              "type" : "string",
              "minLength" : 0
            },
            "accountRef1" : {
              "type" : "string",
              "minLength" : 0
            },
            "customer1" : {
              "type" : "string",
              "minLength" : 0
            },
            "accCompany1" : {
              "type" : "string",
              "minLength" : 0
            },
            "accCurrency1" : {
              "type" : "string",
              "minLength" : 0
            },
            "accProduct1" : {
              "type" : "string",
              "minLength" : 0
            },
            "shortName1" : {
              "type" : "string",
              "minLength" : 0
            },
            "altReference1" : {
              "type" : "string",
              "minLength" : 0
            },
            "parentAccount1" : {
              "type" : "string",
              "minLength" : 0
            },
            "accLocation1" : {
              "type" : "string",
              "minLength" : 0
            },
            "liveDate1" : {
              "type" : "string",
              "minLength" : 0
            },
            "linkType1" : {
              "type" : "string",
              "minLength" : 0
            },
            "keepBalance1" : {
              "type" : "string",
              "minLength" : 0
            },
            "newBundleRef1" : {
              "type" : "string",
              "minLength" : 0
            },
            "cancelRestructure1" : {
              "type" : "string",
              "minLength" : 0
            },
            "integrityCheckDays" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 20,
              "enum" : [ "Integrity Check Days" ]
            }
          }
        }
      }
    },
    "BundleMasterArrangementsResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleMasterArrangementsResponse1Body"
        }
      },
      "description" : "BundleMasterArrangementsResponse1"
    },
    "BundleMasterArrangementsResponse1Body" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "bundlehierarchy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "accountAlias1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "accountRef1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "customer1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "accCompany1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "accCurrency1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "accProduct1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "shortName1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "altReference1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "parentAccount1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "accLocation1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "liveDate1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "linkType1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "keepBalance1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "newBundleRef1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "cancelRestructure1" : {
                      "type" : "string",
                      "minLength" : 0
                    },
                    "integrityCheckDays" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 20,
                      "enum" : [ "Integrity Check Days" ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CrossPoolAccountMovement" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CrossPoolAccountMovementBody"
        }
      },
      "description" : "CrossPoolAccountMovement",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "string",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "BUNDLE-RESTRUCTURE-BUNDLEHIERARCHY",
          "arrangmentId" : "AA1907995MX2",
          "productId" : "MASTER.ACCOUNT",
          "bundlehierarchy" : {
            "rules" : [ {
              "allowedProductGroup" : "",
              "allowedProduct" : "",
              "parents" : [ {
                "allowedParent" : ""
              } ]
            } ]
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "CrossPoolAccountMovementBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "bundlehierarchy" : {
          "type" : "object",
          "properties" : {
            "rules" : {
              "type" : "array",
              "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
              "items" : {
                "type" : "object",
                "properties" : {
                  "allowedProductGroup" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 19
                  },
                  "allowedProduct" : {
                    "type" : "string",
                    "description" : "List of relevant allowed product identifiers",
                    "minLength" : 0,
                    "maxLength" : 14
                  },
                  "parents" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "allowedParent" : {
                          "type" : "string",
                          "minLength" : 0,
                          "maxLength" : 13
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CrossPoolAccountMovementResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CrossPoolAccountMovementResponseBody"
        }
      },
      "description" : "CrossPoolAccountMovementResponse"
    },
    "CrossPoolAccountMovementResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "bundlehierarchy" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "rules" : {
                      "type" : "array",
                      "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "allowedProductGroup" : {
                            "type" : "string",
                            "minLength" : 0,
                            "maxLength" : 19
                          },
                          "allowedProduct" : {
                            "type" : "string",
                            "description" : "List of relevant allowed product identifiers",
                            "minLength" : 0,
                            "maxLength" : 14
                          },
                          "parents" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "allowedParent" : {
                                  "type" : "string",
                                  "minLength" : 0,
                                  "maxLength" : 13
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "SummaryAccountLimitConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountLimitConditionsBody"
        }
      },
      "description" : "SummaryAccountLimitConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "options" : [ "RECEIVED", "NOT RECEIVED" ],
              "description" : "Have you received Overdraft Agreement/AAA*213 from 190098}RECEIVED_NOT RECEIVED",
              "id" : "DM.CONFIRM.DOC",
              "type" : "Warning",
              "responseCode" : "RECEIVED"
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "ACCOUNTS-UPDATE-LIMIT",
          "arrangmentId" : "AA19079BDWGX",
          "productId" : "SUMMARY.ACCOUNT",
          "limit" : {
            "transactionType" : "",
            "creditCheck" : "",
            "internalLimit" : ""
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "SummaryAccountLimitConditionsBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "limit" : {
          "type" : "object",
          "properties" : {
            "creditCheck" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 19
            },
            "transactionType" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 19
            },
            "internalLimit" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        }
      }
    },
    "SummaryAccountLimitConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountLimitConditionsResponseBody"
        }
      },
      "description" : "SummaryAccountLimitConditionsResponse"
    },
    "SummaryAccountLimitConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "creditCheck" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "transactionType" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "internalLimit" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "TransactionAccountLimitConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountLimitConditionsBody"
        }
      },
      "description" : "TransactionAccountLimitConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "options" : [ "RECEIVED", "NOT RECEIVED" ],
              "description" : "Have you received Overdraft Agreement/AAA*213 from 190098}RECEIVED_NOT RECEIVED",
              "id" : "DM.CONFIRM.DOC",
              "type" : "Warning",
              "responseCode" : "RECEIVED"
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "ACCOUNTS-UPDATE-LIMIT",
          "arrangmentId" : "AA190799RT24",
          "productId" : "TR.ACCOUNT",
          "limit" : {
            "transactionType" : "",
            "creditCheck" : "",
            "internalLimit" : ""
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "TransactionAccountLimitConditionsBody" : {
      "type" : "object",
      "properties" : {
        "partyIds" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "partyId" : {
                "type" : "string",
                "minLength" : 0,
                "maxLength" : 45
              }
            }
          }
        },
        "arrangmentId" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "arrangementEffectiveDate" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 45
        },
        "productId" : {
          "type" : "string",
          "description" : "The identifier of the product",
          "minLength" : 0,
          "maxLength" : 45
        },
        "activityId" : {
          "type" : "string",
          "description" : "The identifier of the activity",
          "minLength" : 0,
          "maxLength" : 45
        },
        "limit" : {
          "type" : "object",
          "properties" : {
            "creditCheck" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 19
            },
            "transactionType" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 19
            },
            "internalLimit" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 19
            }
          }
        }
      }
    },
    "TransactionAccountLimitConditionsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ArrangementHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountLimitConditionsResponseBody"
        }
      },
      "description" : "TransactionAccountLimitConditionsResponse"
    },
    "TransactionAccountLimitConditionsResponseBody" : {
      "type" : "object",
      "properties" : {
        "arrangementActivity" : {
          "type" : "object",
          "properties" : {
            "partyIds" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "partyId" : {
                    "type" : "string",
                    "minLength" : 0,
                    "maxLength" : 45
                  }
                }
              }
            },
            "arrangmentId" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "arrangementEffectiveDate" : {
              "type" : "string",
              "minLength" : 0,
              "maxLength" : 45
            },
            "productId" : {
              "type" : "string",
              "description" : "The identifier of the product",
              "minLength" : 0,
              "maxLength" : 45
            },
            "activityId" : {
              "type" : "string",
              "description" : "The identifier of the activity",
              "minLength" : 0,
              "maxLength" : 45
            }
          }
        },
        "activities" : {
          "type" : "object",
          "properties" : {
            "{activityName}" : {
              "type" : "object",
              "properties" : {
                "activity" : {
                  "type" : "string"
                },
                "transactionStatus" : {
                  "type" : "string",
                  "description" : "The status of the transaction"
                },
                "id" : {
                  "type" : "string",
                  "description" : "The Identifier of the record created"
                }
              }
            }
          }
        },
        "properties" : {
          "type" : "object",
          "properties" : {
            "limit" : {
              "type" : "object",
              "properties" : {
                "header" : {
                  "type" : "object",
                  "properties" : {
                    "transactionStatus" : {
                      "type" : "string",
                      "description" : "The status of the transaction"
                    },
                    "audit" : {
                      "type" : "object"
                    },
                    "id" : {
                      "type" : "string",
                      "description" : "The Identifier of the record created"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "The status of the record"
                    }
                  }
                },
                "body" : {
                  "type" : "object",
                  "properties" : {
                    "creditCheck" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "transactionType" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 19
                    },
                    "internalLimit" : {
                      "type" : "string",
                      "minLength" : 0,
                      "maxLength" : 19
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "updateCrossPoolAccountMovement" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CrossPoolAccountMovementBody"
        }
      },
      "description" : "CrossPoolAccountMovement",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "string",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "BUNDLE-RESTRUCTURE-BUNDLEHIERARCHY",
          "arrangmentId" : "AA1907995MX2",
          "productId" : "MASTER.ACCOUNT",
          "bundlehierarchy" : {
            "rules" : [ {
              "allowedProductGroup" : "",
              "allowedProduct" : "",
              "parents" : [ {
                "allowedParent" : ""
              } ]
            } ]
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "updateBundleMasterArrangements" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleMasterArrangementsBody"
        }
      },
      "description" : "BundleMasterArrangements",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "Account has negative balance while linking the pool.",
              "id" : "AA-NEGATIVE.BALANCE.IN.POOL.ACCOUNT",
              "type" : "Override"
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "BUNDLE-RESTRUCTURE-BUNDLEHIERARCHY",
          "arrangmentId" : "AA19085TDX8B",
          "productId" : "MASTER.ACCOUNT",
          "bundlehierarchy" : {
            "integrityCheckDays" : "",
            "parentAccount1" : "",
            "accountAlias1" : "",
            "accLocation1" : "",
            "accProduct1" : "SUMMARY.ACCOUNT",
            "liveDate1" : "20190419",
            "linkType1" : "LINK",
            "cancelRestructure1" : "",
            "accountRef1" : "78859",
            "accCurrency1" : "USD",
            "shortName1" : "",
            "accCompany1" : "GB0010001",
            "altReference1" : "",
            "newBundleRef1" : "",
            "customer1" : "100182",
            "keepBalance1" : ""
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "updateAccountOperationalDate" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AccountOperationalDateBody"
        }
      },
      "description" : "AccountOperationalDate",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "BUNDLE-RESTRUCTURE-BUNDLEHIERARCHY",
          "arrangmentId" : "AA190857YS4D",
          "productId" : "MASTER.ACCOUNT",
          "bundlehierarchy" : {
            "aliases" : [ {
              "alias" : ""
            } ],
            "linkTypes" : [ {
              "linkType" : "SET.LIVE.DATE"
            } ],
            "accounts" : [ {
              "account" : "84816"
            } ],
            "goLiveDates" : [ {
              "goLiveDate" : "20190520"
            } ]
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "createSummaryAccountLimitConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountLimitConditionsBody"
        }
      },
      "description" : "SummaryAccountLimitConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "options" : [ "RECEIVED", "NOT RECEIVED" ],
              "description" : "Have you received Overdraft Agreement/AAA*213 from 190098}RECEIVED_NOT RECEIVED",
              "id" : "DM.CONFIRM.DOC",
              "type" : "Warning",
              "responseCode" : "RECEIVED"
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "ACCOUNTS-UPDATE-LIMIT",
          "arrangmentId" : "AA19079BDWGX",
          "productId" : "SUMMARY.ACCOUNT",
          "limit" : {
            "transactionType" : "",
            "creditCheck" : "",
            "internalLimit" : ""
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "createTransactionAccountLimitConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountLimitConditionsBody"
        }
      },
      "description" : "TransactionAccountLimitConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "options" : [ "RECEIVED", "NOT RECEIVED" ],
              "description" : "Have you received Overdraft Agreement/AAA*213 from 190098}RECEIVED_NOT RECEIVED",
              "id" : "DM.CONFIRM.DOC",
              "type" : "Warning",
              "responseCode" : "RECEIVED"
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "ACCOUNTS-UPDATE-LIMIT",
          "arrangmentId" : "AA190799RT24",
          "productId" : "TR.ACCOUNT",
          "limit" : {
            "transactionType" : "",
            "creditCheck" : "",
            "internalLimit" : ""
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "deleteCrossPoolAccountMovement" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CrossPoolAccountMovementBody"
        }
      },
      "description" : "CrossPoolAccountMovement",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "string",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : ""
          } ],
          "activityId" : "BUNDLE-RESTRUCTURE-BUNDLEHIERARCHY",
          "arrangmentId" : "AA1907995MX2",
          "productId" : "MASTER.ACCOUNT",
          "bundlehierarchy" : {
            "rules" : [ {
              "allowedProductGroup" : "",
              "allowedProduct" : "",
              "parents" : [ {
                "allowedParent" : ""
              } ]
            } ]
          },
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "updateTransactionAccountDebitInterestConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/TransactionAccountDebitInterestConditionsBody"
        }
      },
      "description" : "TransactionAccountDebitInterestConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : "190098"
          } ],
          "activityId" : "ACCOUNTS-UPDATE-DRINTEREST",
          "drinterest" : {
            "interest" : [ {
              "upTo" : "",
              "orPercent" : "",
              "effectiveRate" : "",
              "negativeRate" : "",
              "fixed" : "9.5",
              "maxRate" : "",
              "minMaxRate" : "",
              "spread" : ""
            } ]
          },
          "arrangmentId" : "AA19079044VJ",
          "productId" : "TR.ACCOUNT",
          "arrangementEffectiveDate" : ""
        }
      }
    },
    "updateSummaryAccountDebitInterestConditions" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SummaryAccountDebitInterestConditionsBody"
        }
      },
      "description" : "SummaryAccountDebitInterestConditions",
      "example" : {
        "header" : {
          "audit" : {
            "versionNumber" : ""
          },
          "override" : {
            "overrideDetails" : [ {
              "description" : "",
              "id" : "",
              "responseCode" : ""
            } ]
          }
        },
        "body" : {
          "partyIds" : [ {
            "partyId" : "190098"
          } ],
          "activityId" : "ACCOUNTS-UPDATE-DRINTEREST",
          "drinterest" : {
            "interest" : [ {
              "upTo" : "",
              "orPercent" : "",
              "effectiveRate" : "",
              "negativeRate" : "",
              "fixed" : "7.5",
              "maxRate" : "",
              "minMaxRate" : "",
              "spread" : ""
            } ]
          },
          "arrangmentId" : "AA190797P0JT",
          "productId" : "SUMMARY.ACCOUNT",
          "arrangementEffectiveDate" : ""
        }
      }
    }
  }
}