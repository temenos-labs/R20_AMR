{
  "swagger": "2.0",
  "info": {
    "description": "API to create, update and manage the external user details for purposes of user administration",
    "version": "v1.0.1",
    "title": "External User Administration"
  },
  "host": "api.server.com",
  "basePath": "/api/v1.0.1/",
  "schemes": [
    "http",
    "https"
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/party/customers/externalUser": {
      "post": {
        "summary": "Create External User For Customer",
        "description": "Create an External User for  customer",
        "operationId": "createExternalUserCustomer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalUserCustomer"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserCustomerResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserCustomerResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/externalUsers/{externalUserId}": {
      "get": {
        "summary": "Retrieve External User",
        "description": "Retrieves an External User",
        "operationId": "getExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_start",
            "in": "query",
            "description": "The record from which the response should be displayed",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Unique id expected to get as part of response from t24 on every enquiry request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse1"
            }
          },
          "400": {
            "description": "BusinessQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500": {
            "description": "SystemQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default": {
            "description": "QueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/QueryErrorResponse"
            }
          }
        }
      },
      "post": {
        "summary": "Create External User",
        "description": "Create an External User",
        "operationId": "createExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalUser"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Update External User",
        "description": "Update an External User",
        "operationId": "updateExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalUser"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete External User",
        "description": "Delete an External User",
        "operationId": "deleteExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExternalUserDelete"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/externalUserApprovals": {
      "post": {
        "summary": "Initiate External User",
        "description": "Initiate an External User",
        "operationId": "initiateExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalUser"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/externalUserApprovals/amendments/{externalUserId}": {
      "put": {
        "summary": "Amend External User",
        "description": "Amend an External User",
        "operationId": "amendExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalUser"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/externalUserApprovals/{externalUserId}": {
      "put": {
        "summary": "Approve External User",
        "description": "Approve an External User",
        "operationId": "approveExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Reject External User",
        "description": "Rejects an NAU External User record",
        "operationId": "rejectExternalUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExternalUserDelete"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/externalUserRequests/{externalUserId}": {
      "delete": {
        "summary": "Initiate External User Delete",
        "description": "Initiates External User delete by moving it to NAU status",
        "operationId": "initiateExternalUserDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "path",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "body Payload",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExternalUserDeleteDelete"
            }
          },
          {
            "name": "validate_only",
            "in": "query",
            "description": "The identifier to indicate if it is set to only validate or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserDeleteResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserResponse"
            }
          },
          "400": {
            "description": "BusinessScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessScreenErrorResponse"
            }
          },
          "500": {
            "description": "SystemScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemScreenErrorResponse"
            }
          },
          "default": {
            "description": "ScreenErrorResponse",
            "schema": {
              "$ref": "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/externalUsers/externalUserApprovals": {
      "get": {
        "summary": "Retrieve Unauthorised External User",
        "description": "Retrieves NAU External User records",
        "operationId": "getExternalUserApprovals",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "query",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalUserName",
            "in": "query",
            "description": "External or Digital Channel User Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Identifier of the customer",
            "required": false,
            "type": "string"
          },
          {
            "name": "arrangementId",
            "in": "query",
            "description": "Indicates an unique identifier of an account",
            "required": false,
            "type": "string"
          },
          {
            "name": "subArrangementId",
            "in": "query",
            "description": "The subset of Master arrangement.",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "Id of the (digital) channel",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalUserStatus",
            "in": "query",
            "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_start",
            "in": "query",
            "description": "The record from which the response should be displayed",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Unique id expected to get as part of response from t24 on every enquiry request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUserApprovalsResponse",
            "schema": {
              "$ref": "#/definitions/ExternalUserApprovalsResponse"
            }
          },
          "400": {
            "description": "BusinessQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500": {
            "description": "SystemQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default": {
            "description": "QueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/externalUsers": {
      "get": {
        "summary": "Retrieve Customer External Users",
        "description": "Retrieves External Users for an customer",
        "operationId": "getCustomerExternalUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Identifier of the customer",
            "required": true,
            "type": "string",
            "x-example": "190087"
          },
          {
            "name": "externalUserId",
            "in": "query",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalUserName",
            "in": "query",
            "description": "External or Digital Channel User Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "arrangementId",
            "in": "query",
            "description": "Indicates an unique identifier of an account",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "Id of the (digital) channel",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalUserStatus",
            "in": "query",
            "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_start",
            "in": "query",
            "description": "The record from which the response should be displayed",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Unique id expected to get as part of response from t24 on every enquiry request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "CustomerExternalUsersResponse",
            "schema": {
              "$ref": "#/definitions/CustomerExternalUsersResponse"
            }
          },
          "400": {
            "description": "BusinessQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500": {
            "description": "SystemQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default": {
            "description": "QueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/externalUsers": {
      "get": {
        "summary": "Retrieve External Users",
        "description": "Retrieves the External Users",
        "operationId": "getExternalUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalUserId",
            "in": "query",
            "description": "Contains the external user identifier for which the consent is created.",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalUserName",
            "in": "query",
            "description": "External or Digital Channel User Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "arrangementId",
            "in": "query",
            "description": "Indicates an unique identifier of an account",
            "required": false,
            "type": "string"
          },
          {
            "name": "subArrangementId",
            "in": "query",
            "description": "The subset of Master arrangement.",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "Id of the (digital) channel",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalUserStatus",
            "in": "query",
            "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Identifier of the customer",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_start",
            "in": "query",
            "description": "The record from which the response should be displayed",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Unique id expected to get as part of response from t24 on every enquiry request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ExternalUsersResponse",
            "schema": {
              "$ref": "#/definitions/CustomerExternalUsersResponse"
            }
          },
          "400": {
            "description": "BusinessQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500": {
            "description": "SystemQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default": {
            "description": "QueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/relationships": {
      "get": {
        "summary": "Retrieve Customer Relations",
        "description": "Retrieves the relations for a customer",
        "operationId": "getCustomerRelations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Identifier of the customer",
            "required": true,
            "type": "string",
            "x-example": "190217"
          },
          {
            "name": "relationType",
            "in": "query",
            "description": "The type of relation that is used between customers",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeCustomerType",
            "in": "query",
            "description": "The type of the customer to be excluded from the related customers list",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_start",
            "in": "query",
            "description": "The record from which the response should be displayed",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Unique id expected to get as part of response from t24 on every enquiry request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "CustomerRelationsResponse",
            "schema": {
              "$ref": "#/definitions/CustomerRelationsResponse"
            }
          },
          "400": {
            "description": "BusinessQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500": {
            "description": "SystemQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default": {
            "description": "QueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/users/userProfiles/": {
      "get": {
        "summary": "Retrieves User Profile",
        "description": "Retrieves User Profile",
        "operationId": "getUserProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Specifies the identifier of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "userSignOnName",
            "in": "query",
            "description": "This is the name entered by the User to sign on to the System. It is used by the System as an alternative key to access User details",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_start",
            "in": "query",
            "description": "The record from which the response should be displayed",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Unique id expected to get as part of response from t24 on every enquiry request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyId",
            "in": "header",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "UserProfileResponse",
            "schema": {
              "$ref": "#/definitions/UserProfileResponse"
            }
          },
          "400": {
            "description": "BusinessQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500": {
            "description": "SystemQueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default": {
            "description": "QueryErrorResponse",
            "schema": {
              "$ref": "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "definitions": {
    "PayloadHeader": {
      "properties": {
        "override": {
          "type": "object",
          "properties": {
            "overrideDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The identifier of the override."
                  },
                  "description": {
                    "type": "string",
                    "description": "The actual override message."
                  },
                  "code": {
                    "type": "string",
                    "description": "The code related to override message."
                  },
                  "responseCode": {
                    "type": "string",
                    "description": "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit": {
          "type": "object",
          "properties": {
            "versionNumber": {
              "type": "string",
              "description": "The CURR.NO. of the record"
            }
          }
        }
      }
    },
    "ExternalUserCustomer": {
      "properties": {
        "header": {
          "$ref": "#/definitions/PayloadHeader"
        },
        "body": {
          "$ref": "#/definitions/ExternalUserCustomerBody"
        }
      },
      "description": "ExternalUserCustomer",
      "example": {
        "header": {
          "override": {
            "overrideDetails": [
              {
                "options": [
                  "RECEIVED",
                  "NOT RECEIVED"
                ],
                "description": "Have you received Business License or Incorportn Cert/CUS*200 from 190258}RECEIVED_NOT RECEIVED",
                "id": "DM.CONFIRM.DOC",
                "type": "Warning",
                "responseCode": "RECEIVED"
              },
              {
                "options": [
                  "RECEIVED",
                  "NOT RECEIVED"
                ],
                "description": "Have you received Memorandum and Articles of Asscn/CUS*200 from 190258}RECEIVED_NOT RECEIVED",
                "id": "DM.CONFIRM.DOC",
                "type": "Warning",
                "responseCode": "RECEIVED"
              }
            ]
          }
        },
        "body": {
          "lastName": "ME",
          "sectorId": "2001",
          "gender": "",
          "givenName": "TEST",
          "nationalityId": "US",
          "languageId": "1",
          "dateOfBirth": "1994-11-05",
          "title": "Mr",
          "residenceId": "US",
          "relation": [
            {
              "relationCode": "1",
              "relatedCustomerId": "100100"
            }
          ],
          "companyId": "",
          "street": [
            {
              "street": "NY STREET"
            }
          ],
          "legalDoc": [
            {
              "expiryDate": "2020-02-26",
              "holderName": "",
              "documentId": "TEST NAME",
              "documentName": "CUIL",
              "issueDate": "1994-11-05"
            }
          ]
        }
      }
    },
    "ExternalUserCustomerBody": {
      "type": "object",
      "required": [
        "givenName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "array",
          "description": "Email Identifier of the Customer",
          "items": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email Identifier of the Customer",
                "minLength": 0,
                "maxLength": 50
              }
            }
          }
        },
        "sms": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "smsNumber": {
                "type": "string",
                "description": "The mobile SMS number of the customer",
                "minLength": 0,
                "maxLength": 12
              }
            }
          }
        },
        "legalDoc": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "documentName": {
                "type": "string",
                "description": "Specifies the name of the document.",
                "minLength": 1,
                "maxLength": 35
              },
              "documentId": {
                "type": "string",
                "description": "Based on documentCode, the field defaults the required document codes",
                "minLength": 1,
                "maxLength": 35
              },
              "holderName": {
                "type": "string",
                "description": "Identifies the Name of the  joint, substantial or beneficial owner",
                "minLength": 0,
                "maxLength": 35
              },
              "issueDate": {
                "type": "string",
                "format": "date",
                "description": "The date the item was issued."
              },
              "expiryDate": {
                "type": "string",
                "format": "date",
                "description": "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
              }
            },
            "required": [
              "documentId",
              "documentName"
            ]
          }
        },
        "street": {
          "type": "array",
          "description": "Contains the first line of customer's base address, example building number, street number etc.",
          "items": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "description": "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "postCode": {
          "type": "array",
          "description": "Identifies the address postal code for the customer.",
          "items": {
            "type": "object",
            "properties": {
              "postCode": {
                "type": "string",
                "description": "Identifies the address postal code for the customer.",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "townCountry": {
          "type": "array",
          "description": "The town and country associated with the address",
          "items": {
            "type": "object",
            "properties": {
              "townCountry": {
                "type": "string",
                "description": "The town and country associated with the address",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "country": {
          "type": "array",
          "description": "Identifies the country of the customer.",
          "items": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "description": "Identifies the country of the customer.",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "relation": {
          "type": "array",
          "description": "Identifies the inter-relationship between customer with other customers",
          "items": {
            "type": "object",
            "properties": {
              "relationCode": {
                "type": "string",
                "description": "Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position",
                "minLength": 1,
                "maxLength": 13
              },
              "relatedCustomerId": {
                "type": "string",
                "description": "Identifies the Customer id details of the Related Customer",
                "minLength": 0,
                "maxLength": 17
              }
            },
            "required": [
              "relationCode"
            ]
          }
        },
        "override": {
          "type": "array",
          "description": "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items": {
            "type": "object",
            "properties": {
              "override": {
                "type": "string",
                "description": "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength": 0,
                "maxLength": 8
              }
            }
          }
        },
        "title": {
          "type": "string",
          "description": "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength": 0,
          "maxLength": 5
        },
        "givenName": {
          "type": "string",
          "description": "Customer's given name",
          "minLength": 1,
          "maxLength": 50
        },
        "lastName": {
          "type": "string",
          "description": "The last name of an individual customer",
          "minLength": 1,
          "maxLength": 50
        },
        "gender": {
          "type": "string",
          "description": "Gender of the Individual Customer",
          "minLength": 0,
          "maxLength": 10
        },
        "languageId": {
          "type": "string",
          "description": "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 10
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "description": "The date of birth of an individual customer"
        },
        "nationalityId": {
          "type": "string",
          "description": "The identifier of the nationality of a customer",
          "minLength": 0,
          "maxLength": 13
        },
        "residenceId": {
          "type": "string",
          "description": "The identifier of the country of residence of a customer",
          "minLength": 0,
          "maxLength": 11
        },
        "sectorId": {
          "type": "string",
          "description": "An institution-defined identifier of the type of customer",
          "minLength": 0,
          "maxLength": 8
        },
        "companyId": {
          "type": "string",
          "description": "The identifier of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 12
        }
      }
    },
    "ScreenHeader": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The Identifier of the record created"
        },
        "status": {
          "type": "string",
          "description": "The status of the record"
        },
        "transactionStatus": {
          "type": "string",
          "description": "The status of the transaction"
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique identifier/Message Reference of the record created."
        },
        "audit": {
          "type": "object",
          "properties": {
            "T24_time": {
              "type": "integer",
              "format": "int32",
              "description": "Time taken to response by T24"
            },
            "versionNumber": {
              "type": "string",
              "description": "The CURR.NO. of the record"
            },
            "requestParse_time": {
              "type": "number",
              "description": "Time taken to parse the request by IRIS"
            },
            "responseParse_time": {
              "type": "number",
              "description": "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "ExternalUserCustomerResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ScreenHeader"
        },
        "body": {
          "$ref": "#/definitions/ExternalUserCustomerResponseBody"
        }
      },
      "description": "ExternalUserCustomerResponse"
    },
    "ExternalUserCustomerResponseBody": {
      "type": "object",
      "properties": {
        "email": {
          "type": "array",
          "description": "Email Identifier of the Customer",
          "items": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email Identifier of the Customer",
                "minLength": 0,
                "maxLength": 50
              }
            }
          }
        },
        "sms": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "smsNumber": {
                "type": "string",
                "description": "The mobile SMS number of the customer",
                "minLength": 0,
                "maxLength": 12
              }
            }
          }
        },
        "legalDoc": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "documentName": {
                "type": "string",
                "description": "Specifies the name of the document.",
                "minLength": 1,
                "maxLength": 35
              },
              "documentId": {
                "type": "string",
                "description": "Based on documentCode, the field defaults the required document codes",
                "minLength": 1,
                "maxLength": 35
              },
              "holderName": {
                "type": "string",
                "description": "Identifies the Name of the  joint, substantial or beneficial owner",
                "minLength": 0,
                "maxLength": 35
              },
              "issueDate": {
                "type": "string",
                "format": "date",
                "description": "The date the item was issued."
              },
              "expiryDate": {
                "type": "string",
                "format": "date",
                "description": "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
              }
            }
          }
        },
        "street": {
          "type": "array",
          "description": "Contains the first line of customer's base address, example building number, street number etc.",
          "items": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "description": "Contains the first line of customer's base address, example building number, street number etc.",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "postCode": {
          "type": "array",
          "description": "Identifies the address postal code for the customer.",
          "items": {
            "type": "object",
            "properties": {
              "postCode": {
                "type": "string",
                "description": "Identifies the address postal code for the customer.",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "townCountry": {
          "type": "array",
          "description": "The town and country associated with the address",
          "items": {
            "type": "object",
            "properties": {
              "townCountry": {
                "type": "string",
                "description": "The town and country associated with the address",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "country": {
          "type": "array",
          "description": "Identifies the country of the customer.",
          "items": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "description": "Identifies the country of the customer.",
                "minLength": 0,
                "maxLength": 35
              }
            }
          }
        },
        "shortName": {
          "type": "array",
          "description": "Contains the name of the account, basically the short title of the account.",
          "items": {
            "type": "object",
            "properties": {
              "customerShortName": {
                "type": "string",
                "description": "Indicates the short name of Customer",
                "minLength": 0,
                "maxLength": 17
              }
            }
          }
        },
        "name": {
          "type": "array",
          "description": "Short title for the Account to be created",
          "items": {
            "type": "object",
            "properties": {
              "customerName": {
                "type": "string",
                "description": "Name of the customer",
                "minLength": 0,
                "maxLength": 13
              }
            }
          }
        },
        "relation": {
          "type": "array",
          "description": "Identifies the inter-relationship between customer with other customers",
          "items": {
            "type": "object",
            "properties": {
              "relationCode": {
                "type": "string",
                "description": "Identifies the inter-relationship between Customer records and enables a link to be formed for the purpose of evaluating the overall Customer position",
                "minLength": 1,
                "maxLength": 13
              },
              "relatedCustomerId": {
                "type": "string",
                "description": "Identifies the Customer id details of the Related Customer",
                "minLength": 0,
                "maxLength": 17
              }
            }
          }
        },
        "override": {
          "type": "array",
          "description": "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items": {
            "type": "object",
            "properties": {
              "override": {
                "type": "string",
                "description": "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
                "minLength": 0,
                "maxLength": 8
              }
            }
          }
        },
        "title": {
          "type": "string",
          "description": "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages.",
          "minLength": 0,
          "maxLength": 5
        },
        "givenName": {
          "type": "string",
          "description": "Customer's given name",
          "minLength": 1,
          "maxLength": 50
        },
        "lastName": {
          "type": "string",
          "description": "The last name of an individual customer",
          "minLength": 1,
          "maxLength": 50
        },
        "gender": {
          "type": "string",
          "description": "Gender of the Individual Customer",
          "minLength": 0,
          "maxLength": 10
        },
        "languageId": {
          "type": "string",
          "description": "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 10
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "description": "The date of birth of an individual customer"
        },
        "nationalityId": {
          "type": "string",
          "description": "The identifier of the nationality of a customer",
          "minLength": 0,
          "maxLength": 13
        },
        "residenceId": {
          "type": "string",
          "description": "The identifier of the country of residence of a customer",
          "minLength": 0,
          "maxLength": 11
        },
        "customerMnemonic": {
          "type": "string",
          "description": "Specifies an alternative easy means of referencing the Customer",
          "minLength": 0,
          "maxLength": 16
        },
        "internetBankingService": {
          "type": "string",
          "description": "Internet banking service enabled for customer or not",
          "minLength": 0,
          "maxLength": 24
        },
        "customerType": {
          "type": "string",
          "description": "Illustrates the capacity in which a client is acting.Possible Values : Customer, Broker, Depository, Client, Counterparty, External Account Manager",
          "minLength": 0,
          "maxLength": 35
        },
        "sectorId": {
          "type": "string",
          "description": "An institution-defined identifier of the type of customer",
          "minLength": 0,
          "maxLength": 8
        },
        "companyId": {
          "type": "string",
          "description": "The identifier of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 12
        }
      }
    },
    "ErrorHeader": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The Identifier of the record created"
        },
        "status": {
          "type": "string",
          "description": "The status of the record"
        },
        "transactionStatus": {
          "type": "string",
          "description": "The status of the transaction"
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique identifier/Message Reference of the record created."
        },
        "audit": {
          "type": "object",
          "properties": {
            "T24_time": {
              "type": "integer",
              "format": "int32",
              "description": "Time taken to response by T24"
            },
            "versionNumber": {
              "type": "string",
              "description": "The CURR.NO. of the record"
            },
            "requestParse_time": {
              "type": "number",
              "description": "Time taken to parse the request by IRIS"
            },
            "responseParse_time": {
              "type": "number",
              "description": "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "overrideBody": {
      "properties": {
        "overrideDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the override."
              },
              "description": {
                "type": "string",
                "description": "The actual override message."
              },
              "code": {
                "type": "string",
                "description": "The code related to override message."
              },
              "options": {
                "type": "array",
                "description": "The usable options for the override.",
                "items": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string",
                "description": "The type of the override."
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ErrorHeader"
        },
        "error": {
          "$ref": "#/definitions/ScreenErrorResponseBody"
        },
        "override": {
          "$ref": "#/definitions/overrideBody"
        }
      },
      "description": "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody": {
      "type": "object",
      "properties": {
        "errorDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fieldName": {
                "type": "string",
                "description": "The name of the field"
              },
              "message": {
                "type": "string",
                "description": "Specifies the record ID of parent message. "
              }
            }
          }
        },
        "type": {
          "type": "string",
          "description": "The identifier of error type: "
        }
      }
    },
    "BusinessScreenErrorResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ErrorHeader"
        },
        "error": {
          "$ref": "#/definitions/BusinessScreenErrorResponseBody"
        },
        "override": {
          "$ref": "#/definitions/overrideBody"
        }
      },
      "description": "BusinessScreenErrorResponse"
    },
    "BusinessScreenErrorResponseBody": {
      "type": "object",
      "properties": {
        "errorDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fieldName": {
                "type": "string",
                "description": "The name of the field"
              },
              "message": {
                "type": "string",
                "description": "Specifies the record ID of parent message. for bad requests"
              }
            }
          }
        },
        "type": {
          "type": "string",
          "description": "The identifier of error type: Business"
        }
      }
    },
    "SystemScreenErrorResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ErrorHeader"
        },
        "error": {
          "$ref": "#/definitions/SystemScreenErrorResponseBody"
        },
        "override": {
          "$ref": "#/definitions/overrideBody"
        }
      },
      "description": "SystemScreenErrorResponse"
    },
    "SystemScreenErrorResponseBody": {
      "type": "object",
      "properties": {
        "errorDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fieldName": {
                "type": "string",
                "description": "The name of the field"
              },
              "message": {
                "type": "string",
                "description": "Specifies the record ID of parent message. caused by server"
              }
            }
          }
        },
        "type": {
          "type": "string",
          "description": "The identifier of error type: System"
        }
      }
    },
    "ExternalUser": {
      "properties": {
        "header": {
          "$ref": "#/definitions/PayloadHeader"
        },
        "body": {
          "$ref": "#/definitions/ExternalUserBody"
        }
      },
      "description": "ExternalUser"
    },
    "ExternalUserBody": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "description": "The ID of the Channel",
          "items": {
            "type": "object",
            "properties": {
              "channelId": {
                "type": "string",
                "description": "Id of the (digital) channel",
                "minLength": 0,
                "maxLength": 20
              },
              "externalUserStatus": {
                "type": "string",
                "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
                "minLength": 0,
                "maxLength": 20
              },
              "statusChangeReason": {
                "type": "string",
                "description": "Customer status update with respective reasons",
                "minLength": 0,
                "maxLength": 20
              },
              "productLineId": {
                "type": "string",
                "description": "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
                "minLength": 1,
                "maxLength": 20
              },
              "arrangementId": {
                "type": "string",
                "description": "Indicates an unique identifier of an account",
                "minLength": 1,
                "maxLength": 20
              },
              "subArrangementId": {
                "type": "string",
                "description": "The subset of Master arrangement.",
                "minLength": 0,
                "maxLength": 20
              },
              "termsAccepted": {
                "type": "boolean",
                "description": "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
              },
              "userType": {
                "type": "string",
                "description": "The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL",
                "minLength": 0,
                "maxLength": 20
              },
              "loginMethod": {
                "type": "string",
                "description": "The type of login method e.g. password, PIN, OTP",
                "minLength": 0,
                "maxLength": 20
              },
              "startDateTime": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Contains the date on which the transaction or payment gets initiated."
                    },
                    "startTime": {
                      "type": "string",
                      "description": "The time job was started",
                      "minLength": 0,
                      "maxLength": 20
                    }
                  }
                }
              },
              "endDateTime": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
                    },
                    "endTime": {
                      "type": "string",
                      "description": "The time the job was ended.  ",
                      "minLength": 0,
                      "maxLength": 20
                    }
                  }
                }
              }
            },
            "required": [
              "arrangementId",
              "productLineId"
            ]
          }
        },
        "externalUserName": {
          "type": "string",
          "description": "External or Digital Channel User Name",
          "minLength": 0,
          "maxLength": 20
        },
        "customerId": {
          "type": "string",
          "description": "Identifier of the customer",
          "minLength": 0,
          "maxLength": 20
        },
        "companyId": {
          "type": "string",
          "description": "The identifier of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 20
        },
        "authenticationServerUpdate": {
          "type": "boolean",
          "description": "Authenticate on customer login update"
        },
        "externalUserSignMethod": {
          "type": "string",
          "description": "External user sign in channels details",
          "minLength": 0,
          "maxLength": 22
        },
        "languageId": {
          "type": "string",
          "description": "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 20
        },
        "dateFormat": {
          "type": "string",
          "description": "Used for deciding in which format the dates are to be displayed for a user / for a language",
          "minLength": 0,
          "maxLength": 20
        },
        "override": {
          "type": "string",
          "description": "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "ExternalUserResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ScreenHeader"
        },
        "body": {
          "$ref": "#/definitions/ExternalUserResponseBody"
        }
      },
      "description": "ExternalUserResponse"
    },
    "ExternalUserResponseBody": {
      "type": "object",
      "properties": {
        "channels": {
          "type": "array",
          "description": "The ID of the Channel",
          "items": {
            "type": "object",
            "properties": {
              "channelId": {
                "type": "string",
                "description": "Id of the (digital) channel",
                "minLength": 0,
                "maxLength": 20
              },
              "externalUserStatus": {
                "type": "string",
                "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
                "minLength": 0,
                "maxLength": 20
              },
              "statusChangeReason": {
                "type": "string",
                "description": "Customer status update with respective reasons",
                "minLength": 0,
                "maxLength": 20
              },
              "productLineId": {
                "type": "string",
                "description": "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
                "minLength": 1,
                "maxLength": 20
              },
              "arrangementId": {
                "type": "string",
                "description": "Indicates an unique identifier of an account",
                "minLength": 1,
                "maxLength": 20
              },
              "subArrangementId": {
                "type": "string",
                "description": "The subset of Master arrangement.",
                "minLength": 0,
                "maxLength": 20
              },
              "termsAccepted": {
                "type": "boolean",
                "description": "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
              },
              "userType": {
                "type": "string",
                "description": "The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL",
                "minLength": 0,
                "maxLength": 20
              },
              "loginMethod": {
                "type": "string",
                "description": "The type of login method e.g. password, PIN, OTP",
                "minLength": 0,
                "maxLength": 20
              },
              "startDateTime": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Contains the date on which the transaction or payment gets initiated."
                    },
                    "startTime": {
                      "type": "string",
                      "description": "The time job was started",
                      "minLength": 0,
                      "maxLength": 20
                    }
                  }
                }
              },
              "endDateTime": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "endDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
                    },
                    "endTime": {
                      "type": "string",
                      "description": "The time the job was ended.  ",
                      "minLength": 0,
                      "maxLength": 20
                    }
                  }
                }
              }
            }
          }
        },
        "externalUserName": {
          "type": "string",
          "description": "External or Digital Channel User Name",
          "minLength": 0,
          "maxLength": 20
        },
        "customerId": {
          "type": "string",
          "description": "Identifier of the customer",
          "minLength": 0,
          "maxLength": 20
        },
        "companyId": {
          "type": "string",
          "description": "The identifier of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 20
        },
        "authenticationServerUpdate": {
          "type": "boolean",
          "description": "Authenticate on customer login update"
        },
        "externalUserSignMethod": {
          "type": "string",
          "description": "External user sign in channels details",
          "minLength": 0,
          "maxLength": 22
        },
        "languageId": {
          "type": "string",
          "description": "Represents the language code of the underlying Entity/Company/Branch.",
          "minLength": 0,
          "maxLength": 20
        },
        "dateFormat": {
          "type": "string",
          "description": "Used for deciding in which format the dates are to be displayed for a user / for a language",
          "minLength": 0,
          "maxLength": 20
        },
        "override": {
          "type": "string",
          "description": "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "ExternalUserDelete": {
      "properties": {
        "header": {
          "$ref": "#/definitions/PayloadHeader"
        }
      },
      "description": "ExternalUserDelete"
    },
    "ExternalUserDeleteDelete": {
      "properties": {
        "header": {
          "$ref": "#/definitions/PayloadHeader"
        }
      },
      "description": "ExternalUserDeleteDelete"
    },
    "QueryHeader": {
      "properties": {
        "audit": {
          "type": "object",
          "properties": {
            "T24_time": {
              "type": "integer",
              "format": "int32",
              "description": "Time taken to response by T24"
            },
            "versionNumber": {
              "type": "string",
              "description": "The CURR.NO. of the record"
            },
            "requestParse_time": {
              "type": "number",
              "description": "Time taken to parse the request by IRIS"
            },
            "responseParse_time": {
              "type": "number",
              "description": "Time taken to parse the response by IRIS"
            }
          }
        },
        "page_size": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of records per page"
        },
        "page_start": {
          "type": "integer",
          "format": "int32",
          "description": "The record from which the response should be displayed"
        },
        "total_size": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of records present"
        },
        "page_token": {
          "type": "string",
          "description": "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "ExternalUserResponse1": {
      "properties": {
        "header": {
          "$ref": "#/definitions/QueryHeader"
        },
        "body": {
          "$ref": "#/definitions/ExternalUserResponse1Body"
        }
      },
      "description": "ExternalUserResponse1"
    },
    "ExternalUserResponse1Body": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "The ID of the Channel",
            "items": {
              "type": "object",
              "properties": {
                "channelId": {
                  "type": "string",
                  "description": "Id of the (digital) channel",
                  "maxLength": 20
                },
                "externalUserStatus": {
                  "type": "string",
                  "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
                  "maxLength": 35
                },
                "statusChangeReason": {
                  "type": "string",
                  "description": "Customer status update with respective reasons",
                  "maxLength": 100
                },
                "productLineId": {
                  "type": "string",
                  "description": "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products.",
                  "maxLength": 35
                },
                "arrangementId": {
                  "type": "string",
                  "description": "Indicates an unique identifier of an account",
                  "maxLength": 35
                },
                "subArrangementId": {
                  "type": "string",
                  "description": "The subset of Master arrangement.",
                  "maxLength": 35
                },
                "termsAccepted": {
                  "type": "boolean",
                  "description": "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
                },
                "userType": {
                  "type": "string",
                  "description": "The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL",
                  "maxLength": 12
                },
                "loginMethod": {
                  "type": "string",
                  "description": "The type of login method e.g. password, PIN, OTP",
                  "maxLength": 20
                },
                "startDateTime": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Contains the date on which the transaction or payment gets initiated."
                      },
                      "startTime": {
                        "type": "string",
                        "description": "The time job was started",
                        "pattern": "^([0-1]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                      }
                    }
                  }
                },
                "endDateTime": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "endDate": {
                        "type": "string",
                        "format": "date",
                        "description": "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
                      },
                      "endTime": {
                        "type": "string",
                        "description": "The time the job was ended.  ",
                        "pattern": "^([0-1]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "audit": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "versionNumber": {
                  "type": "string",
                  "description": "Current number of the record",
                  "maxLength": 4
                },
                "recordStatus": {
                  "type": "string",
                  "description": "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
                  "maxLength": 4
                },
                "inputterId": {
                  "type": "string",
                  "description": "The user identifier Id who input the transaction",
                  "maxLength": 100
                },
                "inputterName": {
                  "type": "string",
                  "description": "The user identifier name who input the transaction"
                },
                "externalInputterName": {
                  "type": "string",
                  "description": "Name of the external user"
                }
              }
            }
          },
          "externalUserId": {
            "type": "string",
            "description": "Contains the external user identifier for which the consent is created.",
            "maxLength": 70
          },
          "externalUserName": {
            "type": "string",
            "description": "External or Digital Channel User Name",
            "maxLength": 70
          },
          "customerId": {
            "type": "string",
            "description": "Identifier of the customer",
            "maxLength": 10
          },
          "companyId": {
            "type": "string",
            "description": "The identifier of the underlying Entity/Company/Branch.",
            "maxLength": 11
          },
          "authenticationServerUpdate": {
            "type": "boolean",
            "description": "Authenticate on customer login update"
          },
          "externalUserSignMethod": {
            "type": "string",
            "description": "External user sign in channels details",
            "maxLength": 35
          },
          "languageId": {
            "type": "string",
            "description": "Represents the language code of the underlying Entity/Company/Branch.",
            "maxLength": 2
          },
          "dateFormat": {
            "type": "string",
            "description": "Used for deciding in which format the dates are to be displayed for a user / for a language",
            "maxLength": 1
          },
          "override": {
            "type": "string",
            "description": "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "maxLength": 35
          }
        }
      }
    },
    "QueryErrorResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ErrorHeader"
        },
        "error": {
          "$ref": "#/definitions/QueryErrorResponseBody"
        }
      },
      "description": "QueryErrorResponse"
    },
    "QueryErrorResponseBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Specifies the record ID of parent message. "
        },
        "type": {
          "type": "string",
          "description": "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ErrorHeader"
        },
        "error": {
          "$ref": "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description": "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Specifies the record ID of parent message. for bad requests"
        },
        "type": {
          "type": "string",
          "description": "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/ErrorHeader"
        },
        "error": {
          "$ref": "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description": "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Specifies the record ID of parent message. caused by server"
        },
        "type": {
          "type": "string",
          "description": "The identifier of error type: System"
        }
      }
    },
    "ExternalUserApprovalsResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/QueryHeader"
        },
        "body": {
          "$ref": "#/definitions/ExternalUserApprovalsResponseBody"
        }
      },
      "description": "ExternalUserApprovalsResponse"
    },
    "ExternalUserApprovalsResponseBody": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "The ID of the Channel",
            "items": {
              "type": "object",
              "properties": {
                "arrangementId": {
                  "type": "string",
                  "description": "Indicates an unique identifier of an account",
                  "maxLength": 35
                },
                "subArrangementId": {
                  "type": "string",
                  "description": "The subset of Master arrangement.",
                  "maxLength": 35
                },
                "subArrangementName": {
                  "type": "string",
                  "description": "The name of the sub arrangement that is displayed.",
                  "maxLength": 35
                },
                "productId": {
                  "type": "string",
                  "description": "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
                  "maxLength": 35
                },
                "productName": {
                  "type": "string",
                  "description": "Product name of the bank for this account, proprietary definition."
                },
                "channelId": {
                  "type": "string",
                  "description": "Id of the (digital) channel",
                  "maxLength": 20
                },
                "externalUserStatus": {
                  "type": "string",
                  "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
                  "maxLength": 35
                }
              }
            }
          },
          "audit": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "recordStatus": {
                  "type": "string",
                  "description": "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
                  "maxLength": 4
                },
                "currentNumber": {
                  "type": "string",
                  "description": "To get the version record details",
                  "maxLength": 4
                },
                "inputterId": {
                  "type": "string",
                  "description": "The user identifier Id who input the transaction",
                  "maxLength": 100
                },
                "inputterName": {
                  "type": "string",
                  "description": "The user identifier name who input the transaction"
                },
                "externalInputterName": {
                  "type": "string",
                  "description": "Name of the external user"
                }
              }
            }
          },
          "externalUserId": {
            "type": "string",
            "description": "Contains the external user identifier for which the consent is created.",
            "maxLength": 70
          },
          "externalUserName": {
            "type": "string",
            "description": "External or Digital Channel User Name",
            "maxLength": 70
          },
          "customerId": {
            "type": "string",
            "description": "Identifier of the customer",
            "maxLength": 10
          },
          "customerName": {
            "type": "string",
            "description": "Name of the customer"
          },
          "authenticationType": {
            "type": "string",
            "description": "The type of authentication for this external user. It should be either External or User Maintained.",
            "maxLength": 35
          }
        }
      }
    },
    "CustomerExternalUsersResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/QueryHeader"
        },
        "body": {
          "$ref": "#/definitions/CustomerExternalUsersResponseBody"
        }
      },
      "description": "CustomerExternalUsersResponse"
    },
    "CustomerExternalUsersResponseBody": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "description": "The ID of the Channel",
            "items": {
              "type": "object",
              "properties": {
                "arrangementId": {
                  "type": "string",
                  "description": "Indicates an unique identifier of an account",
                  "maxLength": 35
                },
                "subArrangementId": {
                  "type": "string",
                  "description": "The subset of Master arrangement.",
                  "maxLength": 35
                },
                "subArrangementName": {
                  "type": "string",
                  "description": "The name of the sub arrangement that is displayed."
                },
                "productId": {
                  "type": "string",
                  "description": "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
                },
                "productName": {
                  "type": "string",
                  "description": "Product name of the bank for this account, proprietary definition."
                },
                "channelId": {
                  "type": "string",
                  "description": "Id of the (digital) channel",
                  "maxLength": 20
                },
                "externalUserStatus": {
                  "type": "string",
                  "description": "External User Access status. Can be Active,  Inactive, Barred, Initiated",
                  "maxLength": 35
                },
                "userType": {
                  "type": "string",
                  "description": "The type of the user. Can be CORPORATE, INTERMEDIARY,PERSONAL",
                  "maxLength": 12
                },
                "loginMethod": {
                  "type": "string",
                  "description": "The type of login method e.g. password, PIN, OTP",
                  "maxLength": 20
                },
                "termsAccepted": {
                  "type": "boolean",
                  "description": "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
                },
                "dateTimeLastUsed": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateLastUsed": {
                        "type": "string",
                        "format": "date",
                        "description": "The last Date and time when the Customer logged in to the Digital Channel"
                      },
                      "timeLastUsed": {
                        "type": "string",
                        "description": "Indicates the time stamp at which the transaction history for the account is retreived.",
                        "pattern": "^([0-1]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "emails": {
            "type": "array",
            "description": "Email Identifier of the Customer",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email Identifier of the Customer"
                }
              }
            }
          },
          "audit": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "recordStatus": {
                  "type": "string",
                  "description": "General status of the record. Possible values: - null - authorised - IHLD - input, on hold - INAU - input, not authorised - INA2 - input, authorised, pending second authorisation - INAO - input, not authorised with blocking overrides - RNAU - reversed, not authorised - RNAO - reversed, not authorised with blocking overrides",
                  "maxLength": 4
                },
                "currentNumber": {
                  "type": "string",
                  "description": "To get the version record details",
                  "maxLength": 4
                },
                "inputterId": {
                  "type": "string",
                  "description": "The user identifier Id who input the transaction",
                  "maxLength": 100
                },
                "inputterName": {
                  "type": "string",
                  "description": "The user identifier name who input the transaction"
                },
                "externalInputterName": {
                  "type": "string",
                  "description": "Name of the external user"
                }
              }
            }
          },
          "externalUserId": {
            "type": "string",
            "description": "Contains the external user identifier for which the consent is created.",
            "maxLength": 70
          },
          "externalUserName": {
            "type": "string",
            "description": "External or Digital Channel User Name",
            "maxLength": 70
          },
          "customerId": {
            "type": "string",
            "description": "Identifier of the customer",
            "maxLength": 10
          },
          "customerName": {
            "type": "string",
            "description": "Name of the customer"
          },
          "txnSign": {
            "type": "string",
            "description": "Flag to authenticate the transactions",
            "maxLength": 35
          },
          "languageId": {
            "type": "string",
            "description": "Represents the language code of the underlying Entity/Company/Branch.",
            "maxLength": 2
          },
          "gender": {
            "type": "string",
            "description": "Gender of the Individual Customer"
          }
        }
      }
    },
    "CustomerRelationsResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/QueryHeader"
        },
        "body": {
          "$ref": "#/definitions/CustomerRelationsResponseBody"
        }
      },
      "description": "CustomerRelationsResponse"
    },
    "CustomerRelationsResponseBody": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "relatedCustomerId": {
            "type": "string",
            "description": "Identifies the Customer id details of the Related Customer"
          },
          "title": {
            "type": "string",
            "description": "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages."
          },
          "relatedCustomerName": {
            "type": "string",
            "description": "Level of permission applicable for the associated Products; Possible values: Exclude, See, Transact"
          },
          "street": {
            "type": "string",
            "description": "Contains the first line of customer's base address, example building number, street number etc."
          },
          "townCountry": {
            "type": "string",
            "description": "The town and country associated with the address"
          },
          "country": {
            "type": "string",
            "description": "Identifies the country of the customer."
          },
          "postCode": {
            "type": "string",
            "description": "Identifies the address postal code for the customer."
          },
          "relationCodeId": {
            "type": "string",
            "description": "Identifies the inter-relationship id details of customer relationship with other customers"
          },
          "relationCodeName": {
            "type": "string",
            "description": "Identifies the inter-relationship name details of customer relationship with other customers"
          },
          "reverseRelationCodeId": {
            "type": "string",
            "description": "Identifies the Relationship code id details for the Related Customer"
          },
          "reverseRelationCodeName": {
            "type": "string",
            "description": "Identifies the Relationship code name details for the Related Customer"
          },
          "relationType": {
            "type": "string",
            "description": "The type of relation that is used between customers",
            "maxLength": 35
          },
          "excludeCustomerType": {
            "type": "string",
            "description": "The type of the customer to be excluded from the related customers list",
            "maxLength": 35
          }
        }
      }
    },
    "UserProfileResponse": {
      "properties": {
        "header": {
          "$ref": "#/definitions/QueryHeader"
        },
        "body": {
          "$ref": "#/definitions/UserProfileResponseBody"
        }
      },
      "description": "UserProfileResponse"
    },
    "UserProfileResponseBody": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Specifies the identifier of the user.",
            "maxLength": 16
          },
          "userName": {
            "type": "string",
            "description": "Specifies the name by which the User is known and can be used for reporting purposes",
            "maxLength": 35
          },
          "userSignOnName": {
            "type": "string",
            "description": "This is the name entered by the User to sign on to the System. It is used by the System as an alternative key to access User details",
            "maxLength": 16
          },
          "dateLastUsed": {
            "type": "string",
            "format": "date",
            "description": "The last Date and time when the Customer logged in to the Digital Channel"
          },
          "timeLastUsed": {
            "type": "string",
            "description": "Indicates the time stamp at which the transaction history for the account is retreived.",
            "maxLength": 8
          },
          "dateFormat": {
            "type": "string",
            "description": "Used for deciding in which format the dates are to be displayed for a user / for a language",
            "maxLength": 1
          },
          "languageId": {
            "type": "string",
            "description": "Represents the language code of the underlying Entity/Company/Branch.",
            "maxLength": 2
          },
          "currentWorkingDate": {
            "type": "string",
            "format": "date",
            "description": "Date of the current business day for all online activities in the selected Company. This field is updated automatically with the date from 'nextWorkingDay' during the Close of Business processing."
          },
          "departmentId": {
            "type": "string",
            "description": "Department identifier.",
            "maxLength": 5
          },
          "function": {
            "type": "string",
            "description": "Specifies the function the user can perform on the application.",
            "maxLength": 29
          },
          "amountFormat": {
            "type": "string",
            "description": "Specifies the format of the amount to be used for the user.",
            "maxLength": 2
          },
          "dealerDesk": {
            "type": "string",
            "description": "The dealer/desk responsible for monitoring and managing the currency positions.",
            "maxLength": 2
          }
        }
      }
    },
    "createExternalUserCustomer": {
      "properties": {
        "header": {
          "$ref": "#/definitions/PayloadHeader"
        },
        "body": {
          "$ref": "#/definitions/ExternalUserCustomerBody"
        }
      },
      "description": "ExternalUserCustomer",
      "example": {
        "header": {
          "override": {
            "overrideDetails": [
              {
                "options": [
                  "RECEIVED",
                  "NOT RECEIVED"
                ],
                "description": "Have you received Business License or Incorportn Cert/CUS*200 from 190258}RECEIVED_NOT RECEIVED",
                "id": "DM.CONFIRM.DOC",
                "type": "Warning",
                "responseCode": "RECEIVED"
              },
              {
                "options": [
                  "RECEIVED",
                  "NOT RECEIVED"
                ],
                "description": "Have you received Memorandum and Articles of Asscn/CUS*200 from 190258}RECEIVED_NOT RECEIVED",
                "id": "DM.CONFIRM.DOC",
                "type": "Warning",
                "responseCode": "RECEIVED"
              }
            ]
          }
        },
        "body": {
          "lastName": "ME",
          "sectorId": "2001",
          "gender": "",
          "givenName": "TEST",
          "nationalityId": "US",
          "languageId": "1",
          "dateOfBirth": "1994-11-05",
          "title": "Mr",
          "residenceId": "US",
          "relation": [
            {
              "relationCode": "1",
              "relatedCustomerId": "100100"
            }
          ],
          "companyId": "",
          "street": [
            {
              "street": "NY STREET"
            }
          ],
          "legalDoc": [
            {
              "expiryDate": "2020-02-26",
              "holderName": "",
              "documentId": "TEST NAME",
              "documentName": "CUIL",
              "issueDate": "1994-11-05"
            }
          ]
        }
      }
    }
  }
}