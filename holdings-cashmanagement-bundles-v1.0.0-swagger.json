{
  "swagger" : "2.0",
  "info" : {
    "description" : "Manage Cashmanagement/Bundle arrangement details",
    "version" : "v1.0.0",
    "title" : "Manage Bundle arrangements"
  },
  "host" : "api.server.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "paths" : {
    "/holdings/accounts/{arrangementId}/bundleDetails" : {
      "get" : {
        "summary" : "Retrieves the Link Arrangement Details of an account",
        "description" : "Retrieves the Link Arrangement Details of an account",
        "operationId" : "getLinktArrDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "arrangementId",
          "in" : "path",
          "description" : "Indicates an unique identifier of an account",
          "required" : true,
          "type" : "string",
          "x-example" : "AA19079H0HH6"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "LinktArrDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/LinktArrDetailsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/bundles/{bundleId}/exceptions" : {
      "get" : {
        "summary" : "List of account Exceptional in Bundle Hierarchy",
        "description" : "List of account Exceptional in Bundle Hierarchy",
        "operationId" : "getCashPoolExceptionLog",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "x-example" : "AA190797F3N4"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CashPoolExceptionLogResponse",
            "schema" : {
              "$ref" : "#/definitions/CashPoolExceptionLogResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/bundles/{bundleId}/accounts" : {
      "get" : {
        "summary" : "Retrieves the account details of a Bundle arrangement",
        "description" : "Retrieves the account details of a Bundle arrangement",
        "operationId" : "getBundleAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "x-example" : "AA190791Z7N2"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BundleAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/bundles/{bundleId}/status" : {
      "get" : {
        "summary" : "Retrieves the History of Bundle hierarchy",
        "description" : "Retrieves the History of Bundle hierarchy",
        "operationId" : "getBundleHistoryDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "x-example" : "AA190791Z7N2"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BundleHistoryDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleHistoryDetailsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/customers/{customerId}/bundles" : {
      "get" : {
        "summary" : "To list the bundle arrangement details and status, events, Go-live dates, etc",
        "description" : "To list the bundle arrangement details and status, events, Go-live dates, etc",
        "operationId" : "getBundleArrangements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "190098"
        }, {
          "name" : "arrangementId",
          "in" : "query",
          "description" : "Indicates an unique identifier of an account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BundleArrangementsResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleArrangementsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/bundles/{bundleId}/balances" : {
      "get" : {
        "summary" : "Retrieves the balances of Master/Bundle Arrangement",
        "description" : "Retrieves the balances of Master/Bundle Arrangement",
        "operationId" : "getBundleBalances",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "x-example" : "AA190791Z7N2"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BundleBalancesResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleBalancesResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/customers/{customerId}/accounts" : {
      "get" : {
        "summary" : "Retrieves the List of Bundle arrangements of a customer",
        "description" : "Retrieves the List of Bundle arrangements of a customer",
        "operationId" : "getCustomerBundleAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "190098"
        }, {
          "name" : "companyCode",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerBundleAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerBundleAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/{customerId}/bundles/drafts" : {
      "get" : {
        "summary" : "Retrieves the List of Draft Bundles available for a Customer",
        "description" : "Retrieves the List of Draft Bundles available for a Customer",
        "operationId" : "getDraftArrangements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "190098"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DraftArrangementsResponse",
            "schema" : {
              "$ref" : "#/definitions/DraftArrangementsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/{bundleId}/bundles/draftDetails" : {
      "get" : {
        "summary" : "Retrieves the details of the Draft Bundle Account",
        "description" : "Retrieves the details of the Draft Bundle Account",
        "operationId" : "getDraftBundleList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "x-example" : "AA190794VKJP"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DraftBundleListResponse",
            "schema" : {
              "$ref" : "#/definitions/DraftBundleListResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/bundles/{bundleId}/currentAccounts" : {
      "get" : {
        "summary" : "To list all the standalone account in relation with the Bundle arrangement customer.List of Non-BN Account list",
        "description" : "To list all the standalone account in relation with the Bundle arrangement customer.List of Non-BN Account list",
        "operationId" : "getNonBalanceNettingAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bundleId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "x-example" : "AA190791Z7N2"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "NonBalanceNettingAccountsResponse",
            "schema" : {
              "$ref" : "#/definitions/NonBalanceNettingAccountsResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/holdings/cashManagement/accounts/{accountId}/balances" : {
      "get" : {
        "summary" : "Retrieves the balances of a TR Account",
        "description" : "Retrieves the balances of a TR Account",
        "operationId" : "getBundleAccountBalances",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "BundleAccountBalancesResponse",
            "schema" : {
              "$ref" : "#/definitions/BundleAccountBalancesResponse"
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/BusinessQueryErrorResponse"
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/SystemQueryErrorResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "LinktArrDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/LinktArrDetailsResponseBody"
        }
      },
      "description" : "LinktArrDetailsResponse"
    },
    "LinktArrDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "linkArrangement" : {
            "type" : "string",
            "description" : "Indicates whether the arrangement provides any bundle linkage. Eg : if B1 linked to A1 and A2. B1 arrangement id will be linked to M1 and A1."
          },
          "linkArrangementsProduct" : {
            "type" : "string",
            "description" : "Indicates the product of the link arrangement."
          },
          "linkArrangementType" : {
            "type" : "string",
            "description" : "Indicates the type of arrangement linked to the arrangement. Eg : if B1(BUNDLE) linked to M1(MORTGAGE) and A1(Savings account). B1 type defined as BUNDLE in M1 and A1"
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "requestParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the request by IRIS"
            },
            "responseParse_time" : {
              "type" : "number",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the API(success/failed)"
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: "
        }
      }
    },
    "BusinessQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/BusinessQueryErrorResponseBody"
        }
      },
      "description" : "BusinessQueryErrorResponse"
    },
    "BusinessQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "for bad requests"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: Business"
        }
      }
    },
    "SystemQueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/SystemQueryErrorResponseBody"
        }
      },
      "description" : "SystemQueryErrorResponse"
    },
    "SystemQueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "caused by server"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type: System"
        }
      }
    },
    "CashPoolExceptionLogResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CashPoolExceptionLogResponseBody"
        }
      },
      "description" : "CashPoolExceptionLogResponse"
    },
    "CashPoolExceptionLogResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "bundleArrangement" : {
            "type" : "string",
            "description" : " Bundle arrangement is to link all the participant accounts to create a Balance Netting services.",
            "maxLength" : 35
          },
          "accountAlias" : {
            "type" : "string",
            "description" : "This field forms part of an associated multi-value set to specify the details of an Account during one of Restructure events",
            "maxLength" : 35
          },
          "accountReference" : {
            "type" : "string",
            "description" : "Account Reference of the error account",
            "maxLength" : 35
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 35
          },
          "accountCompany" : {
            "type" : "string",
            "description" : "Company of the account to be created",
            "maxLength" : 11
          },
          "accountCountry" : {
            "type" : "string",
            "description" : "Country of the account to be created",
            "maxLength" : 35
          },
          "accountCurrency" : {
            "type" : "string",
            "description" : "Currency of the account. For example: USD, GBP.",
            "maxLength" : 3
          },
          "accountLevel" : {
            "type" : "string",
            "description" : "Captured for information purpose to render the placeholders in GUI",
            "maxLength" : 15
          },
          "accountProduct" : {
            "type" : "string",
            "description" : "Product of the Account to be created or in the case of an existing standalone Account being added to the Hierarchy, then this is the Product to which that Account will be changed into.",
            "maxLength" : 30
          },
          "accountSequence" : {
            "type" : "string",
            "description" : "The sequence in which this account record is created",
            "maxLength" : 3
          },
          "activityReference" : {
            "type" : "string",
            "description" : "Activity reference of the account",
            "maxLength" : 40
          },
          "alternateReference" : {
            "type" : "string",
            "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24).",
            "maxLength" : 30
          },
          "cancel" : {
            "type" : "string",
            "maxLength" : 3
          },
          "customer" : {
            "type" : "string",
            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
            "maxLength" : 10
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Contains the description of the error.",
            "maxLength" : 100
          },
          "errorSource" : {
            "type" : "string",
            "description" : "Error source of the Bundle account",
            "maxLength" : 35
          },
          "errorType" : {
            "type" : "string",
            "description" : "Error types of the Bundle account",
            "maxLength" : 35
          },
          "keepBalance" : {
            "type" : "string",
            "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account.",
            "maxLength" : 3
          },
          "linkType" : {
            "type" : "string",
            "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row.",
            "maxLength" : 20
          },
          "liveDate" : {
            "type" : "string",
            "description" : "Denotes the date on which the Account is expected to go live in cash pool structure.",
            "maxLength" : 11
          },
          "newBundle" : {
            "type" : "string",
            "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool.",
            "maxLength" : 17
          },
          "parentAccount" : {
            "type" : "string",
            "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
            "maxLength" : 35
          },
          "shortName" : {
            "type" : "string",
            "description" : "Contains the name of the account, basically the short title of the account.",
            "maxLength" : 35
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
            "maxLength" : 5
          },
          "overallStatus" : {
            "type" : "string",
            "description" : "Contains the overall status",
            "maxLength" : 35
          }
        }
      }
    },
    "BundleAccountsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleAccountsResponseBody"
        }
      },
      "description" : "BundleAccountsResponse"
    },
    "BundleAccountsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "The date on which the principal movement is effected"
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes"
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer"
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer"
          },
          "currency" : {
            "type" : "string",
            "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates",
            "maxLength" : 3
          },
          "parentAccount" : {
            "type" : "string",
            "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
            "maxLength" : 19
          },
          "workingBalance" : {
            "type" : "number",
            "description" : "Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries."
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 11
          },
          "companyCode" : {
            "type" : "string",
            "description" : "The identifier of the underlying Entity/Company/Branch.",
            "maxLength" : 11
          },
          "limitReference" : {
            "type" : "string",
            "description" : "Identifies the credit limit reference for the underlying account."
          },
          "limitSerialNumber" : {
            "type" : "number",
            "description" : "Sequence number of the Limits."
          },
          "internalCreditFacility" : {
            "type" : "string",
            "description" : "To define Secondary Limit Amount to be used for the purpose of Secondary Limit Check.The Secondary Limit Amount defined in this field will be represented in respective account currency",
            "maxLength" : 19
          },
          "creditCheckTransactionType" : {
            "type" : "string",
            "description" : "To define credit checking conditions in conjunction with the field CREDIT.CHK.CONDITION.",
            "maxLength" : 8
          },
          "isCreditCheckCondition" : {
            "type" : "boolean",
            "description" : "To decide if credit check processing to be performed for the account based on the conditions defined in the field CREDIT.CHK.TXN.TYPE."
          },
          "ledgerBalance" : {
            "type" : "number",
            "description" : "Contains the ledger balance of the account which is the total of all entries posted against the account excluding any entries with the processing date in the future."
          },
          "clearedBalance" : {
            "type" : "number",
            "description" : "Balance taking into consideration all cleared funds booked against the account, including credit and reversed debit entries with a future exposure date."
          },
          "lockedAmount" : {
            "type" : "number",
            "description" : "Shows reserved amount for the underlying account for a given balance reservation event."
          },
          "availableBalance" : {
            "type" : "number",
            "description" : "Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account."
          },
          "alias" : {
            "type" : "string",
            "description" : "This field forms part of an associated multi-value set to specify the details of an Account during one of Restructure events."
          },
          "alternateReference" : {
            "type" : "string",
            "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24)."
          },
          "level" : {
            "type" : "string",
            "description" : "Captured for information purpose to render the placeholders in GUI"
          },
          "goLiveDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated."
          },
          "linkType" : {
            "type" : "string",
            "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row."
          },
          "keepBalance" : {
            "type" : "number",
            "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account."
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
          },
          "newMaster" : {
            "type" : "string",
            "description" : "The new bundle reference is specified in this field when a account moves from the current pool to another pool. Accepts bundle arrangement reference.Bundle reference must be given with mnemonic in case of other company. Example AA24DGRYHY/CO3. This field is allowed to be input only for link type Change Pool.."
          },
          "poolEvent" : {
            "type" : "string",
            "description" : "Denotes the restructure event for the account linked to the Balance Netting pool."
          },
          "poolEventDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Denotes the restructure date if the account is linked to the balance netting pool."
          },
          "isMultiCurrency" : {
            "type" : "boolean",
            "description" : "Indicates if the account supports multi-currency functionality."
          },
          "isExternalPosting" : {
            "type" : "boolean",
            "description" : "To indicates if the account allows entries posted from outside the network of Summary accounts. This should only be set for Summary accounts and Funds Diversion accounts inside a Summary account network."
          },
          "parentBackValueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Holds the date of the latest internal restructuring of the network of Parent accounts above this account. i.e. the latest date when the network of Parent accounts above this account was changed."
          },
          "allowedBackValueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Holds the latest restructuring date of the network of Parent accounts above this account. It will be set to the date when an account was added to the network of Parent accounts as either a direct or indirect parent of this account."
          },
          "postingRestrictId" : {
            "type" : "number",
            "description" : "Identifies any restrictions for posting entries that are imposed on a Customer"
          },
          "postingRestrictDisplayName" : {
            "type" : "string",
            "description" : "Display name of Posting Restriction, if any, applicable for the customer"
          },
          "blockCode" : {
            "type" : "string",
            "description" : "Unique code used to block the accounts"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
          },
          "title" : {
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages."
          },
          "bookedBalance" : {
            "type" : "number",
            "description" : "Balances of the account as per the Booking dated."
          },
          "valueDatedBalance" : {
            "type" : "number",
            "description" : "Balances of the account as per the value dated. Contains the value dated Balance of the Account."
          },
          "creditFacility" : {
            "type" : "string",
            "description" : "Limit facilities."
          }
        }
      }
    },
    "BundleHistoryDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleHistoryDetailsResponseBody"
        }
      },
      "description" : "BundleHistoryDetailsResponse"
    },
    "BundleHistoryDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "account" : {
            "type" : "string",
            "description" : "Identifies the unique account Id of the payment entered."
          },
          "product" : {
            "type" : "string",
            "description" : "Indicates an id or name of a product"
          },
          "customer" : {
            "type" : "string",
            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
            "maxLength" : 17
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 35
          },
          "parentAccount" : {
            "type" : "string",
            "description" : "Parent account of the account to be added to the Bundle Hierarchy.",
            "maxLength" : 19
          },
          "country" : {
            "type" : "string",
            "description" : "Identifies the country of the customer.",
            "maxLength" : 40
          },
          "name" : {
            "type" : "string",
            "description" : "Short title for the Account to be created",
            "maxLength" : 35
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
          },
          "date" : {
            "type" : "string",
            "description" : "Indicates the date on which activity was performed"
          },
          "currency" : {
            "type" : "string",
            "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates",
            "maxLength" : 3
          },
          "bookingBalance" : {
            "type" : "string",
            "description" : "Contains the current Booked Balance of the Account."
          },
          "valueDatedBalance" : {
            "type" : "string",
            "description" : "Balances of the account as per the value dated. Contains the value dated Balance of the Account."
          },
          "balance" : {
            "type" : "string",
            "description" : "The monetary value of each balance type for an account is itemised."
          }
        }
      }
    },
    "BundleArrangementsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleArrangementsResponseBody"
        }
      },
      "description" : "BundleArrangementsResponse"
    },
    "BundleArrangementsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 17
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer"
          },
          "balance" : {
            "type" : "string",
            "description" : "The monetary value of each balance type for an account is itemised."
          }
        }
      }
    },
    "BundleBalancesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleBalancesResponseBody"
        }
      },
      "description" : "BundleBalancesResponse"
    },
    "BundleBalancesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "ledgerBalance" : {
            "type" : "string",
            "description" : "Contains the ledger balance of the account which is the total of all entries posted against the account excluding any entries with the processing date in the future."
          },
          "clearedBalance" : {
            "type" : "string",
            "description" : "Balance taking into consideration all cleared funds booked against the account, including credit and reversed debit entries with a future exposure date."
          },
          "workingBalance" : {
            "type" : "string",
            "description" : "Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries."
          },
          "availableBalance" : {
            "type" : "string",
            "description" : "Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account."
          }
        }
      }
    },
    "CustomerBundleAccountsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerBundleAccountsResponseBody"
        }
      },
      "description" : "CustomerBundleAccountsResponse"
    },
    "CustomerBundleAccountsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which the principal movement is effected"
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer"
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition.",
            "maxLength" : 30
          },
          "companyName" : {
            "type" : "string",
            "description" : "The company in which payment is processed",
            "maxLength" : 11
          },
          "countryId" : {
            "type" : "number",
            "description" : "ISO country code of the financial institution. ",
            "maximum" : 11
          },
          "companyCode" : {
            "type" : "string",
            "description" : "The identifier of the underlying Entity/Company/Branch.",
            "maxLength" : 11
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
            "maxLength" : 15
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Date on which the Bundle has been modified."
          },
          "structureName" : {
            "type" : "string",
            "description" : "Unique Name of the Balance Netting structure."
          },
          "recipientCurrency" : {
            "type" : "string",
            "description" : "The account used for payment received. Currencies of the recipient."
          },
          "blockId" : {
            "type" : "string",
            "description" : "Balance Netting unique ID"
          },
          "isBlocked" : {
            "type" : "boolean",
            "description" : "Balance Netting is blocked or Not"
          },
          "blockAuthoriser" : {
            "type" : "string",
            "description" : "Blocked by "
          },
          "blockedDateTime" : {
            "type" : "string",
            "description" : "Date on which the account has been blocked."
          },
          "blockCode" : {
            "type" : "string",
            "description" : "Unique code used to block the accounts"
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes"
          },
          "blockStartDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Start date of the Blocked account"
          },
          "blockEndDate" : {
            "type" : "string",
            "description" : "End date of the Blocked account"
          },
          "title" : {
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages."
          },
          "poolEventDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Denotes the restructure date if the account is linked to the balance netting pool."
          },
          "poolEvent" : {
            "type" : "string",
            "description" : "Denotes the restructure event for the account linked to the Balance Netting pool.",
            "maxLength" : 35
          },
          "goLiveDate" : {
            "type" : "string",
            "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated."
          }
        }
      }
    },
    "DraftArrangementsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DraftArrangementsResponseBody"
        }
      },
      "description" : "DraftArrangementsResponse"
    },
    "DraftArrangementsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account",
            "maxLength" : 20
          },
          "activityId" : {
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
            "maxLength" : 30
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition."
          },
          "customerId" : {
            "type" : "number",
            "description" : "Identifier of the customer",
            "maximum" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer"
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 11
          },
          "companyCode" : {
            "type" : "string",
            "description" : "The identifier of the underlying Entity/Company/Branch.",
            "maxLength" : 11
          },
          "referenceCurrency" : {
            "type" : "string",
            "description" : "The reference currency"
          },
          "structureName" : {
            "type" : "string",
            "description" : "Unique Name of the Balance Netting structure."
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
          },
          "title" : {
            "type" : "string",
            "description" : "Main menu title or header which the user wants to display on the screen when requesting the display of this main menu. This field can be expanded to allow the user to enter the description of the main menu in various languages."
          }
        }
      }
    },
    "DraftBundleListResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DraftBundleListResponseBody"
        }
      },
      "description" : "DraftBundleListResponse"
    },
    "DraftBundleListResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "aliases" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "alias" : {
                  "type" : "string",
                  "description" : "This field forms part of an associated multi-value set to specify the details of an Account during one of Restructure events."
                }
              }
            }
          },
          "accounts" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "account" : {
                  "type" : "string",
                  "description" : "Identifies the unique account Id of the payment entered."
                }
              }
            }
          },
          "customers" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "customer" : {
                  "type" : "string",
                  "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed."
                }
              }
            }
          },
          "companies" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "company" : {
                  "type" : "string",
                  "description" : "The company code"
                }
              }
            }
          },
          "countries" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "country" : {
                  "type" : "string",
                  "description" : "Identifies the country of the customer."
                }
              }
            }
          },
          "currencies" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "currency" : {
                  "type" : "string",
                  "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates"
                }
              }
            }
          },
          "products" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "product" : {
                  "type" : "string",
                  "description" : "Indicates an id or name of a product"
                }
              }
            }
          },
          "productDescriptions" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "productDescription" : {
                  "type" : "string",
                  "description" : "Indicates the description of the Product"
                }
              }
            }
          },
          "names" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Short title for the Account to be created"
                }
              }
            }
          },
          "alternateReferences" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "alternateReference" : {
                  "type" : "string",
                  "description" : "If the new Account to be created is a shadow of another Account already exisitng in another system, then the Account reference of that system can be specified here. The value given in this field will be mapped to ALTERNATE.ID field in arrangement activity and ensure that this Account doesn't already exist in T24 with another reference (because ALTERNATE.ID would be configured to be unique across T24)."
                }
              }
            }
          },
          "parents" : {
            "type" : "array",
            "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES",
            "items" : {
              "type" : "object",
              "properties" : {
                "parent" : {
                  "type" : "string",
                  "description" : "This Field is to determine whether the order is a parent order, Allowed value is YES"
                }
              }
            }
          },
          "goLiveDates" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "goLiveDate" : {
                  "type" : "string",
                  "description" : "Denotes the date on which the Account is expected to go live in cash pool structure. Input is prohibited when bundle is in Draft status Input is allowed for NEW.OFFER accounts only for setting live date for link type SET.LIVE.DATE Input is mandatory for any restructure activity on Live accounts. Restructure activity on preliminary accounts will be effective current dated."
                }
              }
            }
          },
          "linkTypes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "linkType" : {
                  "type" : "string",
                  "description" : "Denotes associated multi value set to specify Accounts involved in the Pool Restructuring and dictates what should happen to the Account in the corresponding row."
                }
              }
            }
          },
          "keepBalances" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "keepBalance" : {
                  "type" : "string",
                  "description" : "When an Account is removed from a Hierarchy, it is possible to dictate if it should be removed with or without Balance. Allows YES and Null  Yes - The account will move out of pool with balance while delinking account or during change pool. Null - The account will move out of pool with ZERO balance while delinking/change pool. Amount will be settled to its settlement account."
                }
              }
            }
          },
          "accountTitles" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "accountTitle" : {
                  "type" : "string",
                  "description" : "Short title on an account"
                }
              }
            }
          },
          "level" : {
            "type" : "string",
            "description" : "Captured for information purpose to render the placeholders in GUI"
          },
          "bundleArrangement" : {
            "type" : "string",
            "description" : " Bundle arrangement is to link all the participant accounts to create a Balance Netting services.",
            "maxLength" : 20
          }
        }
      }
    },
    "NonBalanceNettingAccountsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/NonBalanceNettingAccountsResponseBody"
        }
      },
      "description" : "NonBalanceNettingAccountsResponse"
    },
    "NonBalanceNettingAccountsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "productName" : {
            "type" : "string",
            "description" : "Product name of the bank for this account, proprietary definition."
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 11
          },
          "companyCode" : {
            "type" : "string",
            "description" : "The identifier of the underlying Entity/Company/Branch.",
            "maxLength" : 11
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 10
          },
          "status" : {
            "type" : "string",
            "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
          },
          "startDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "currency" : {
            "type" : "string",
            "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates",
            "maxLength" : 3
          },
          "balance" : {
            "type" : "number",
            "description" : "The monetary value of each balance type for an account is itemised."
          }
        }
      }
    },
    "BundleAccountBalancesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/BundleAccountBalancesResponseBody"
        }
      },
      "description" : "BundleAccountBalancesResponse"
    },
    "BundleAccountBalancesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "ledgerBalance" : {
            "type" : "string",
            "description" : "Contains the ledger balance of the account which is the total of all entries posted against the account excluding any entries with the processing date in the future.",
            "maxLength" : 40
          },
          "clearedBalance" : {
            "type" : "string",
            "description" : "Balance taking into consideration all cleared funds booked against the account, including credit and reversed debit entries with a future exposure date.",
            "maxLength" : 40
          },
          "workingBalance" : {
            "type" : "string",
            "description" : "Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries.",
            "maxLength" : 40
          },
          "lockedAmount" : {
            "type" : "string",
            "description" : "Shows reserved amount for the underlying account for a given balance reservation event.",
            "maxLength" : 40
          },
          "availableLimit" : {
            "type" : "string",
            "description" : "The portion of an allocated credit limit that is available for the nominated customer",
            "maxLength" : 40
          }
        }
      }
    }
  }
}