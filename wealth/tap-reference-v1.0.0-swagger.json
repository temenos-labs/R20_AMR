{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1.0.0",
    "title" : "Reference Enterprise API"
  },
  "basePath" : "/triplea/api/v1.0.0/reference",
  "security" : [ {
    "tapBasicAuth" : [ ],
    "X-Channel" : [ ]
  } ],
  "paths" : {
    "/balancePosTypes/{code}" : {
      "get" : {
        "tags" : [ "BalancePosTypes" ],
        "summary" : "Get Balance Positions Type",
        "operationId" : "getBalancePosType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier of an occurrence that is seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getBalancePosTypeSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/balancePositionTypes" : {
      "post" : {
        "tags" : [ "BalancePositionTypes" ],
        "summary" : "Create balance position type",
        "operationId" : "createBalancePosType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createBalancePosTypeInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createBalancePosTypeSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createBalancePosTypeSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/balancePositionTypes/{code}" : {
      "put" : {
        "tags" : [ "BalancePositionTypes" ],
        "summary" : "Modify Balance Position Type",
        "operationId" : "modifyBalancePosType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier of an occurrence that is seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyBalancePosTypeInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyBalancePosTypeSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BalancePositionTypes" ],
        "summary" : "Delete Balance Position Type",
        "operationId" : "deleteBalancePosType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier of an occurrence that is seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/businessEntities" : {
      "post" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Create Business Entities",
        "operationId" : "createBusinessEntities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createBusinessEntitiesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createBusinessEntitiesSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createBusinessEntitiesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/businessEntities/fourEyes" : {
      "get" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Get four eyes business entity assigned to the current user",
        "operationId" : "getFourEyesBusinessEntity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesBusinessEntitySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/businessEntities/{busEntityCode}/addresses" : {
      "get" : {
        "tags" : [ "BusinessEntities", "Search" ],
        "summary" : "Search business entity addresses",
        "operationId" : "searchBusinessEntityAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "Indicates to which business entity the address belongs.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchBusinessEntityAddressSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/businessEntities/{busEntityCode}/addresses/{typeCode}" : {
      "get" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Get business entity address",
        "operationId" : "getBusinessEntityAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "Indicates to which business entity the address belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "typeCode",
          "in" : "path",
          "description" : "Indicates the type of the address. \r\nExamples: Fiscal address, Legal address, Correspondence address.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getBusinessEntityAddressSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Modify Business Entitiy Address",
        "operationId" : "modifyBusinessEntityAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "Indicates to which business entity the address belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "typeCode",
          "in" : "path",
          "description" : "Indicates the type of the address. \r\nExamples: Fiscal address, Legal address, Correspondence address.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyBusinessEntityAddressInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyBusinessEntityAddressSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Delete Business Entity Address",
        "operationId" : "deleteBusinessEntityAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "Indicates to which business entity the address belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "typeCode",
          "in" : "path",
          "description" : "Indicates the type of the address. \r\nExamples: Fiscal address, Legal address, Correspondence address.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/businessEntities/{busEntityCode}/userCompos" : {
      "get" : {
        "tags" : [ "BusinessEntities", "Search" ],
        "summary" : "Get Business Entity User composition",
        "operationId" : "searchBusinessEntityUserCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "References the business entity.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchBusinessEntityUserComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Create Business Entity User Compo element",
        "operationId" : "createBusinessEntityUserCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "References the business entity.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createBusinessEntityUserComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createBusinessEntityUserComposSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createBusinessEntityUserComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/businessEntities/{busEntityCode}/userCompos/{id}" : {
      "get" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Get Business Entity User compo element",
        "operationId" : "getBusinessEntityUserCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "References the business entity.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getBusinessEntityUserComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Modify Business Entity User Compo element",
        "operationId" : "modifyBusinessEntityUserCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "References the business entity.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyBusinessEntityUserComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyBusinessEntityUserComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Delete Business Entity User Compo element",
        "operationId" : "deleteBusinessEntityUserCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "busEntityCode",
          "in" : "path",
          "description" : "References the business entity.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/businessEntities/{code}" : {
      "get" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Get business entities",
        "operationId" : "getBusinessEntities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique business identifier of the business entity that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getBusinessEntitiesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Modify Business Entities",
        "operationId" : "modifyBusinessEntities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique business identifier of the business entity that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyBusinessEntitiesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyBusinessEntitiesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "BusinessEntities" ],
        "summary" : "Delete Business Entities",
        "operationId" : "deleteBusinessEntities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique business identifier of the business entity that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/categories" : {
      "post" : {
        "tags" : [ "Categories" ],
        "summary" : "Create Catgeories",
        "operationId" : "createCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createCategoriesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createCategoriesSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createCategoriesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/categories/{code}" : {
      "get" : {
        "tags" : [ "Categories" ],
        "summary" : "Get Categories",
        "operationId" : "getCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique code of a category. It is the primary key.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getCategoriesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Categories" ],
        "operationId" : "updateCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique code of a category. It is the primary key.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateCategoriesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateCategoriesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Categories" ],
        "summary" : "Delete Categories",
        "operationId" : "deleteCategories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique code of a category. It is the primary key.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/currencies" : {
      "post" : {
        "tags" : [ "Currencies" ],
        "summary" : "Create Currency",
        "operationId" : "createCurrency",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createCurrencyInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createCurrencySuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createCurrencySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/currencies/summary" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "Get Currency Summary",
        "operationId" : "getCurrencySummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getCurrencySummarySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/currencies/{code}" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "Get Currency",
        "operationId" : "getCurrencies",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code identifying an occurrence for the end user.\r\nThis code is unique but can be changed, if necessary.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getCurrenciesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Currencies" ],
        "summary" : "Modify Currency",
        "operationId" : "modifyCurrency",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Code identifying an occurrence for the end user.\r\nThis code is unique but can be changed, if necessary.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyCurrencyInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyCurrencySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Currencies" ],
        "summary" : "Delete Currency",
        "operationId" : "deleteCurrency",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Code identifying an occurrence for the end user.\r\nThis code is unique but can be changed, if necessary.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/currencies/{currencyCode}/displayChrono" : {
      "get" : {
        "tags" : [ "Currencies" ],
        "summary" : "Get Currency Chrono",
        "operationId" : "getDisplayChrono",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "currencyCode",
          "in" : "path",
          "description" : "Currency Code",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getDisplayChronoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/geographies" : {
      "post" : {
        "tags" : [ "Geographies" ],
        "summary" : "create a  Geographic",
        "operationId" : "createGeographic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createGeographicInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createGeographicSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createGeographicSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/geographies/{code}" : {
      "get" : {
        "tags" : [ "Geographies" ],
        "summary" : "Get a Geographic",
        "operationId" : "getGeographic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Most common business code.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getGeographicSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Geographies" ],
        "summary" : "update a Geographic",
        "operationId" : "updateGeographic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Most common business code.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateGeographicInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateGeographicSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Geographies" ],
        "summary" : "Delete a Geographic",
        "operationId" : "deleteGeographic",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Most common business code.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/grids" : {
      "post" : {
        "tags" : [ "Grids" ],
        "summary" : "Create Grid",
        "operationId" : "createGrid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createGridInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createGridSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createGridSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/grids/{code}" : {
      "get" : {
        "tags" : [ "Grids" ],
        "summary" : "Get Grid",
        "operationId" : "getGrid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getGridSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Grids" ],
        "summary" : "Update Grids",
        "operationId" : "updateGrid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateGridInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateGridSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Grids" ],
        "summary" : "Delete Grid",
        "operationId" : "deleteGrid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/indices" : {
      "get" : {
        "tags" : [ "Indices" ],
        "summary" : "Get Indices",
        "operationId" : "getIndices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getIndicesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentLists" : {
      "get" : {
        "tags" : [ "InstrumentLists", "Search" ],
        "summary" : "Search Instrument List",
        "operationId" : "searchInstrumentList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchPattern",
          "in" : "query",
          "description" : "Search on multiple fields, use the vertical search tables.No case sensitive",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Unique identifier, as seen by the user.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "natureE",
          "in" : "query",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        }, {
          "name" : "userCode",
          "in" : "query",
          "description" : "User owner of the list",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchInstrumentListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "InstrumentLists" ],
        "summary" : "create an Instrument List",
        "operationId" : "createInstrumentList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createInstrumentListInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInstrumentListSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInstrumentListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentLists/{code}" : {
      "get" : {
        "tags" : [ "InstrumentLists" ],
        "summary" : "Get an Instrument List",
        "operationId" : "getInstrumentList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInstrumentListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "InstrumentLists" ],
        "summary" : "update an Instrument List",
        "operationId" : "updateinstrumentList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateinstrumentListInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateinstrumentListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "InstrumentLists" ],
        "summary" : "Delete an Instrument List",
        "operationId" : "deleteInstrumentList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentLists/{listCode}/compoElement" : {
      "post" : {
        "tags" : [ "InstrumentLists" ],
        "summary" : "Create an Instrument List compo element",
        "operationId" : "createInstrumentListCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "listCode",
          "in" : "path",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createInstrumentListCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInstrumentListCompoSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInstrumentListCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentLists/{listCode}/compoElement/{instrumentCode}" : {
      "delete" : {
        "tags" : [ "InstrumentLists" ],
        "summary" : "Delete an Instrument List compo element",
        "operationId" : "deleteInstrumentListCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "listCode",
          "in" : "path",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instrumentCode",
          "in" : "path",
          "description" : "Reference to 'code' of instrument",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentLists/{listCode}/composition" : {
      "get" : {
        "tags" : [ "InstrumentLists", "Search" ],
        "summary" : "Get Instrument List composition",
        "operationId" : "searchInstrumentListCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "listCode",
          "in" : "path",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchInstrumentListCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentLists/{listCode}/summary" : {
      "get" : {
        "tags" : [ "InstrumentLists" ],
        "summary" : "Instrument Watch List",
        "operationId" : "getInstrumentListSummary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "listCode",
          "in" : "path",
          "description" : "code of instrument list",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInstrumentListSummarySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentSubNats" : {
      "post" : {
        "tags" : [ "InstrumentSubNats" ],
        "summary" : "create a  Interest SubNats",
        "operationId" : "createInterestCond",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createInterestCondInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInterestCondSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInterestCondSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instrumentSubNats/{code}" : {
      "get" : {
        "tags" : [ "InstrumentSubNats" ],
        "summary" : "Get a Interest SubNats",
        "operationId" : "getInterestCond",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInterestCondSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "InstrumentSubNats" ],
        "summary" : "update a Interest SubNats",
        "operationId" : "updateInstrumentSubNats",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateInstrumentSubNatsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateInstrumentSubNatsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "InstrumentSubNats" ],
        "summary" : "Delete a Interest SubNats",
        "operationId" : "deleteInterestCond",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instruments" : {
      "get" : {
        "tags" : [ "Instruments", "Search" ],
        "summary" : "Search instruments",
        "operationId" : "getSearchInstruments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "instrumentCodeContains",
          "in" : "query",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchPattern",
          "in" : "query",
          "description" : "Search on multiple fields, use the vertical search tables.No case sensitive",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "natureEEq",
          "in" : "query",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        }, {
          "name" : "natureEIn",
          "in" : "query",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
          },
          "collectionFormat" : "csv",
          "minItems" : 1
        }, {
          "name" : "marketThirdCodeEq",
          "in" : "query",
          "description" : "Specifies the main market in which the instrument is quoted.\r\nThis market is used in the default process for retrieving prices.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "issuerThirdCodeEq",
          "in" : "query",
          "description" : "Specifies the third party that issued the instrument.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "refCurrCodeEq",
          "in" : "query",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "typeCodeEq",
          "in" : "query",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endDeq",
          "in" : "query",
          "description" : "The date at which the Instrument ceases to exist. In theory, there must be no positions in this Instrument after the end date. In practice, however, due to possible administrative or financial delays, this may not always be the case. This field is not mandatory but if completed it must be greater than or equal to the Begin Date.",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "underlyInstrCodeEq",
          "in" : "query",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "optionClassEEq",
          "in" : "query",
          "description" : "Specifies if the holder of an Option has the right to buy or sell the underlying.",
          "required" : false,
          "type" : "string",
          "enum" : [ "<None>", "Call", "Put" ]
        }, {
          "name" : "extIsinSynCContains",
          "in" : "query",
          "description" : "ISIN\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIN code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_ISIN_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getSearchInstrumentsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Instruments" ],
        "summary" : "Create Instruments",
        "operationId" : "createInstruments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createInstrumentsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInstrumentsSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInstrumentsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instruments/{code}" : {
      "get" : {
        "tags" : [ "Instruments" ],
        "summary" : "Get Instruments",
        "operationId" : "getInstruments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInstrumentsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Instruments" ],
        "summary" : "Update Instruments",
        "operationId" : "updateInstruments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateInstrumentsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateInstrumentsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Instruments" ],
        "summary" : "Delete Instruments",
        "operationId" : "deleteInstruments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instruments/{instrumentCode}/displayChrono" : {
      "get" : {
        "tags" : [ "Instruments" ],
        "summary" : "Instrument Display Chrono",
        "operationId" : "getInstrDisplayChrono",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "instrumentCode",
          "in" : "path",
          "description" : "code of instrument",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInstrDisplayChronoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/instruments/{instrumentId}/ratingAttributions" : {
      "get" : {
        "tags" : [ "Instruments", "Search" ],
        "summary" : "Get the Rating Attribution of instrument in input",
        "operationId" : "getRatingAttrib",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ratingCode",
          "in" : "query",
          "description" : "Reference to the rating which is associated to an occurrence through a rating attribution.\r\nPlease note that this reference is not directly present as a foreign key in the Instrument/Third Party tables means that it is possible to associate several ratings to the same occurrence, provided that they are characterised by a different 'rating' codification (e.g. Moodys, S&P,...), and also to historise these rating attributions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beginD",
          "in" : "query",
          "description" : "Indicates from which date on this specific rating is applicable. This date is part of the unique key in this table and allows to historise the ratings attributed to an occurrence.",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "codificationId",
          "in" : "query",
          "description" : "Reference to the codification which necessarily characterises an occurrence of 'rating attribution'.\r\nThis codification must be a 'sector' codification.\r\nThere can be only on rating attribution attached to an occurrence per codification.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "instrumentId",
          "in" : "path",
          "description" : "Indicates to which third party or instrument the occurrence relates.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getRatingAttribSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/issuers" : {
      "post" : {
        "tags" : [ "Issuers" ],
        "summary" : "create a  Issuer",
        "operationId" : "createIssuer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createIssuerInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createIssuerSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createIssuerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/issuers/{code}" : {
      "get" : {
        "tags" : [ "Issuers" ],
        "summary" : "Get a Issuer",
        "operationId" : "getIssuer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getIssuerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Issuers" ],
        "summary" : "update a Issuer",
        "operationId" : "updateIssuer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateIssuerInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateIssuerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Issuers" ],
        "summary" : "Delete a Issuer",
        "operationId" : "deleteIssuer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/languages/{code}" : {
      "get" : {
        "tags" : [ "Languages" ],
        "summary" : "Get a Language",
        "operationId" : "getLanguage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier of an occurrence, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getLanguageSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/managers" : {
      "post" : {
        "tags" : [ "Managers" ],
        "summary" : "Create Manager",
        "operationId" : "createManager",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createManagerInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createManagerSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createManagerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/managers/fourEyesFields" : {
      "get" : {
        "tags" : [ "Managers" ],
        "summary" : "Get Four Eyes Manager Fields",
        "operationId" : "getFourEyesManagerFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesManagerFieldsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/managers/{code}" : {
      "get" : {
        "tags" : [ "Managers" ],
        "summary" : "Get Managers",
        "operationId" : "getManagers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getManagersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Managers" ],
        "summary" : "Modify Manager",
        "operationId" : "modifyManagers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyManagersInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyManagersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Managers" ],
        "summary" : "Delete Manager",
        "operationId" : "deleteManager",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notepads" : {
      "get" : {
        "tags" : [ "Notepads", "Search" ],
        "summary" : "Search Notepad(s) ",
        "operationId" : "getNotepad",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userCode",
          "in" : "query",
          "description" : "Reference to the user who is the issuer of a notepad.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "typeCode",
          "in" : "query",
          "description" : "Reference to the type of a notepad.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "noteD",
          "in" : "query",
          "description" : "The date and time when the note was entered.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "object",
          "in" : "query",
          "description" : "Reference to the occurrence to which a notepad is associated. This object belongs to the table referenced by its 'entity_dict_id'.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getNotepadSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Notepads" ],
        "summary" : "Create Notepad",
        "operationId" : "createNotepad",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createNotepadInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotepadSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotepadSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Notepads" ],
        "summary" : "Modify Notepad",
        "operationId" : "modifyNotepad",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyNotepadInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyNotepadSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Notepads" ],
        "summary" : "Delete User Code",
        "operationId" : "deleteUserCode",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/portfolioLists" : {
      "get" : {
        "tags" : [ "PortfolioLists", "Search" ],
        "summary" : "Search Portfolio List",
        "operationId" : "searchPortfolioList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchPattern",
          "in" : "query",
          "description" : "Search on multiple fields, use the vertical search tables.No case sensitive",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Unique identifier, as seen by the user.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "Reference to a currency.\r\nThis reference is useful for portfolio list where it can be used to determine the default currency used to perform a financial function (e.g. a valuation).",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "natureE",
          "in" : "query",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        }, {
          "name" : "userCode",
          "in" : "query",
          "description" : "User owner of the list",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchPortfolioListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PortfolioLists" ],
        "summary" : "Create Portfolio List",
        "operationId" : "createPortfolioList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createPortfolioListInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfolioListSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfolioListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/portfolioLists/{code}" : {
      "get" : {
        "tags" : [ "PortfolioLists" ],
        "summary" : "Get Portfolio List",
        "operationId" : "getPortfolioList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getPortfolioListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PortfolioLists" ],
        "summary" : "Modify Portfolio List",
        "operationId" : "modifyPortfolioLists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyPortfolioListsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyPortfolioListsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "PortfolioLists" ],
        "summary" : "Delete Portfolio List",
        "operationId" : "deletePortfolioList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/portfolioLists/{listCode}/compoElement" : {
      "post" : {
        "tags" : [ "PortfolioLists" ],
        "summary" : "Create an Portfolio List compo element",
        "operationId" : "createPortfoliotListCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "listCode",
          "in" : "path",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createPortfoliotListCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfoliotListCompoSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfoliotListCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/portfolioLists/{listCode}/compoElement/{portfolioCode}" : {
      "delete" : {
        "tags" : [ "PortfolioLists" ],
        "summary" : "Delete an Portfolio List compo element",
        "operationId" : "deletePortfolioListCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "listCode",
          "in" : "path",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "Reference to 'code' of portfolio",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/portfolioLists/{listCode}/composition" : {
      "get" : {
        "tags" : [ "PortfolioLists", "Search" ],
        "summary" : "Get Portfolio List composition",
        "operationId" : "searchPortfolioListCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "listCode",
          "in" : "path",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchPortfolioListCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/portfolios" : {
      "get" : {
        "tags" : [ "Portfolios", "Search" ],
        "summary" : "Search Portfolios",
        "operationId" : "getSearchPortfolios",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchPattern",
          "in" : "query",
          "description" : "Search on multiple fields, use the vertical search tables.No case sensitive",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "codeEq",
          "in" : "query",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "thirdCodeEq",
          "in" : "query",
          "description" : "Reference to a third party customer who is the owner of the portfolio.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "commMgrCodeEq",
          "in" : "query",
          "description" : "Reference to the commercial manager of the portfolio.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "serviceTypeEEq",
          "in" : "query",
          "description" : "This field is used to specify the portfolio service type, meaning the manner a portfolio is managed by the bank (which services are provided).\r\n\r\nThis data is used in front-ends including in each input control applied in a context of a Suitability and Appropriateness tests.",
          "required" : false,
          "type" : "string",
          "enum" : [ "<None>", "Discretionary", "Advisory", "Execution only", "Others", "Robo-advisor", "Goal-based" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getSearchPortfoliosSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Portfolios" ],
        "summary" : "create a portfolio",
        "operationId" : "createPortfolio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createPortfolioInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfolioSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfolioSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/portfolios/{code}" : {
      "get" : {
        "tags" : [ "Portfolios" ],
        "summary" : "Get a portfolio",
        "operationId" : "getPortfolio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getPortfolioSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Portfolios" ],
        "summary" : "update a portfolio ",
        "operationId" : "updatePortfolio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updatePortfolioInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updatePortfolioSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Portfolios" ],
        "summary" : "Delete a Portfolio",
        "operationId" : "deletePortfolio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/ratings/{code}" : {
      "get" : {
        "tags" : [ "Ratings" ],
        "summary" : "Get a Rating",
        "operationId" : "getRating",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Business identitfier of the occurrence in association with the codification.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "codificationId",
          "in" : "query",
          "description" : "codification id used for this rating (e.g. S&P, Moody's,...)",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getRatingSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies" : {
      "get" : {
        "tags" : [ "Strategies", "Search" ],
        "summary" : "Search Strategies",
        "operationId" : "getSearchStrategies",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "natureEEq",
          "in" : "query",
          "description" : "Indicates the 'nature' of the 'strategy'. \r\nFor more information please see the Orders and Productivity Guide, and the Performance Analysis Reference Guide.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }, {
          "name" : "codeStartsWith",
          "in" : "query",
          "description" : "Unique identifier of an occurrence as seen by the user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getSearchStrategiesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "create a Strategy",
        "operationId" : "createStrategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createStrategyInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategySuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/allocationConstraint/{portfolioCode}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get AllocationConstraint",
        "operationId" : "getAllocationConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getAllocationConstraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/constraintParameters" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "Create Constraint Parameters",
        "operationId" : "createConstraintParameters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createConstraintParametersInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createConstraintParametersSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createConstraintParametersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/constraintParameters/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Constraint Parameters",
        "operationId" : "getContraintParameters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getContraintParametersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "Modify Constraint Parameters",
        "operationId" : "modifyConstraintParameters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyConstraintParametersInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyConstraintParametersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete Constraint Parameters",
        "operationId" : "deleteConstraingParamters",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/constraintTemplates" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "Create Constraint Template",
        "operationId" : "createConstraintTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createConstraintTemplateInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createConstraintTemplateSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createConstraintTemplateSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/constraintTemplates/{code}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Constraint Templates",
        "operationId" : "getConstraintTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "This code is the Constraint Template entity business key.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getConstraintTemplatesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "Modify Constraint Templates",
        "operationId" : "modifyConstraintTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "This code is the Constraint Template entity business key.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyConstraintTemplatesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyConstraintTemplatesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete Constrint Template",
        "operationId" : "deleteConstraintTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "This code is the Constraint Template entity business key.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/fourEyesModelConstraints" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Four Eyes Model Constraint",
        "operationId" : "getFourEyesModelContraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesModelContraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/fourEyesStrategies" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "get Four Eyes Startegy",
        "operationId" : "getFourEyesStrategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesStrategySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/fourEyesStrategyHistory" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Four Eyes Strategy History",
        "operationId" : "getFourEyesStrategyHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesStrategyHistorySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/fourEyesTradingConstraints" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Four Eyes Trading Constraint",
        "operationId" : "getFourEyesTradingConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesTradingConstraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/gridMarketStructure/{portfolioCode}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get GridMarketStructure",
        "operationId" : "getGridMarketStructure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getGridMarketStructureSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/investmentProfile/{portfolioCode}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get InvestmentProfile",
        "operationId" : "getInvestmentProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInvestmentProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/investmentProfileStrategyDetail/{portfolioCode}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get InvestmentProfileStrategyDetail",
        "operationId" : "getInvestmentProfileStrategyDetail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInvestmentProfileStrategyDetailSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/marketSegments" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "Create Market Segment",
        "operationId" : "createMarketSegment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createMarketSegmentInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createMarketSegmentSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createMarketSegmentSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/marketSegments/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Market Segment",
        "operationId" : "getMarketSegment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getMarketSegmentSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "Update Market Segment",
        "operationId" : "updateMarketSegment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateMarketSegmentInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateMarketSegmentSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete Market Segment",
        "operationId" : "deleteMarketSegment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/modelConstraintElements" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "Create model constraint element",
        "operationId" : "createModelConstraintElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createModelConstraintElementInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createModelConstraintElementSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createModelConstraintElementSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/modelConstraintElements/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Model Constraint Element",
        "operationId" : "getModelContraintElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getModelContraintElementSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "Update model constraint element",
        "operationId" : "updateModelContraintElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateModelContraintElementInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateModelContraintElementSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete Model Constraint Element",
        "operationId" : "deleteModelConstraintElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/modelConstraints" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "Create Model Constraint",
        "operationId" : "createModelConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createModelConstraintInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createModelConstraintSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createModelConstraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/modelConstraints/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get Model Constraint",
        "operationId" : "getModelContraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getModelContraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "Update Model Constraint",
        "operationId" : "updateModelContraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateModelContraintInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateModelContraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete Model Constraint",
        "operationId" : "deleteModelConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/portfolioStrategyLinks" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "create a Portfolio Strategy Link",
        "operationId" : "createPortfolioStrategyLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createPortfolioStrategyLinkInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfolioStrategyLinkSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createPortfolioStrategyLinkSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/portfolioStrategyLinks/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get a Portfolio Strategy Link",
        "operationId" : "getPortfolioStrategyLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getPortfolioStrategyLinkSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "update a Portfolio Strategy Link",
        "operationId" : "updatePortfolioStrategyLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updatePortfolioStrategyLinkInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updatePortfolioStrategyLinkSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete a Portfolio Strategy Link",
        "operationId" : "deletePortfolioStrategyLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/portfolios/{portfolioCode}/riskStrategy" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "get all the Risk Strategy by portfolio code",
        "operationId" : "getAllRiskStrategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getAllRiskStrategySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/portfolios/{portfolioCode}/strategyRisks" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "get all the Startegy Risk by portfolio code",
        "operationId" : "getAllStrategyRisk",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getAllStrategyRiskSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/riskStrategy/{portfolioCode}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get RiskStrategy",
        "operationId" : "getRiskStrategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getRiskStrategySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategies/{strategyCode}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get a Strategy",
        "operationId" : "getStrategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "strategyCode",
          "in" : "path",
          "description" : "Unique identifier of an occurrence as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getStrategySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "update a Strategy ",
        "operationId" : "updateStrategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "strategyCode",
          "in" : "path",
          "description" : "Unique identifier of an occurrence as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateStrategyInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateStrategySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete a Strategy",
        "operationId" : "deleteStrategy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "strategyCode",
          "in" : "path",
          "description" : "Unique identifier of an occurrence as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategyCompos" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "create a  StrategyCompo",
        "operationId" : "createStrategyCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createStrategyCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategyCompoSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategyCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategyCompos/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get a StrategyCompo",
        "operationId" : "getStrategyCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getStrategyCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "update a StrategyCompo",
        "operationId" : "updateStrategyCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateStrategyCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateStrategyCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete a StrategyCompo",
        "operationId" : "deleteStrategyCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategyElements" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "create a  StrategyElement",
        "operationId" : "createStrategyElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createStrategyElementInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategyElementSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategyElementSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategyElements/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get a StrategyElement",
        "operationId" : "getStrategyElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getStrategyElementSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "update a StrategyElement",
        "operationId" : "updateStrategyElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateStrategyElementInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateStrategyElementSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete a StrategyElement",
        "operationId" : "deleteStrategyElement",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategyHistorys" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "Create StrategyHistories",
        "operationId" : "createStrategyHistories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createStrategyHistoriesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategyHistoriesSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createStrategyHistoriesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategyHistorys/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get StrategyHistories",
        "operationId" : "getStrategyHistories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getStrategyHistoriesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "Update StrategyHistories",
        "operationId" : "updateStrategyHistories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateStrategyHistoriesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateStrategyHistoriesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete StrategyHistories",
        "operationId" : "deleteStrategyHistories",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/strategyRisk/{portfolioCode}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get StrategyRisk",
        "operationId" : "getStrategyRisk",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioCode",
          "in" : "path",
          "description" : "code of portfolio",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getStrategyRiskSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/tradingConstraints" : {
      "post" : {
        "tags" : [ "Strategies" ],
        "summary" : "create a  TradingConstraint",
        "operationId" : "createTradingConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createTradingConstraintInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createTradingConstraintSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createTradingConstraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/tradingConstraints/{id}" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get a TradingConstraint",
        "operationId" : "getTradingConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getTradingConstraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Strategies" ],
        "summary" : "update a TradingConstraint",
        "operationId" : "updateTradingConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateTradingConstraintInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateTradingConstraintSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Strategies" ],
        "summary" : "Delete a TradingConstraint",
        "operationId" : "deleteTradingConstraint",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/{strategyCode}/marketStructure" : {
      "get" : {
        "tags" : [ "Strategies" ],
        "summary" : "Get MarketStructure",
        "operationId" : "getMarketStructure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "strategyCode",
          "in" : "path",
          "description" : "This attribute is used only for the Web Packaging.\r\n\r\nStrategy set in the domain context when the strategy dimension is a single strategy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getMarketStructureSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/strategies/{strategyCode}/strategyLinks" : {
      "get" : {
        "tags" : [ "Strategies", "Search" ],
        "summary" : "Get the StrategyLinks of strategy in input",
        "operationId" : "getSearchStrategyLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "strategyCode",
          "in" : "path",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getSearchStrategyLinkSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/termEvents/{instrId}" : {
      "put" : {
        "tags" : [ "TermEvents" ],
        "summary" : "update a TermEvent",
        "operationId" : "updateTermEvent",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "instrId",
          "in" : "path",
          "description" : "Specifies the instrument to which the income event applies.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateTermEventInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateTermEventSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdCategories" : {
      "post" : {
        "tags" : [ "ThirdCategories" ],
        "summary" : "create a  ThirdCategory",
        "operationId" : "createThirdCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createThirdCategoryInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createThirdCategorySuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createThirdCategorySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdCategories/{id}" : {
      "get" : {
        "tags" : [ "ThirdCategories" ],
        "summary" : "Get a ThirdCategory",
        "operationId" : "getThirdCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Primary Key.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getThirdCategorySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ThirdCategories" ],
        "summary" : "update a ThirdCategory",
        "operationId" : "updateThirdCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Primary Key.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateThirdCategoryInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateThirdCategorySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ThirdCategories" ],
        "summary" : "Delete a ThirdCategory",
        "operationId" : "deleteThirdCategory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Primary Key.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdParties" : {
      "post" : {
        "tags" : [ "ThirdParties" ],
        "summary" : "create a  ThirdParty",
        "operationId" : "createThirdParty",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createThirdPartyInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createThirdPartySuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createThirdPartySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdParties/{code}" : {
      "get" : {
        "tags" : [ "ThirdParties" ],
        "summary" : "Get a ThirdParty",
        "operationId" : "getThirdParty",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getThirdPartySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ThirdParties" ],
        "summary" : "update a ThirdParty",
        "operationId" : "updateThirdParty",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateThirdPartyInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateThirdPartySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ThirdParties" ],
        "summary" : "Delete a ThirdParty",
        "operationId" : "deleteThirdParty",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdPartyAddresses" : {
      "post" : {
        "tags" : [ "ThirdPartyAddresses" ],
        "summary" : "create a  Address",
        "operationId" : "createAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createAddressInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createAddressSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createAddressSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdPartyAddresses/{thirdPartyCode}" : {
      "get" : {
        "tags" : [ "ThirdPartyAddresses" ],
        "summary" : "Get a Address",
        "operationId" : "getAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "thirdPartyCode",
          "in" : "path",
          "description" : "Indicates to which third-party the address belongs.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getAddressSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ThirdPartyAddresses" ],
        "summary" : "update a Address",
        "operationId" : "updateAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "thirdPartyCode",
          "in" : "path",
          "description" : "Indicates to which third-party the address belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateAddressInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateAddressSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ThirdPartyAddresses" ],
        "summary" : "Delete a Address",
        "operationId" : "deleteAddress",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "thirdPartyCode",
          "in" : "path",
          "description" : "Indicates to which third-party the address belongs.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdPartyLists" : {
      "get" : {
        "tags" : [ "ThirdPartyLists", "Search" ],
        "summary" : "Search ThirdParty List",
        "operationId" : "searchThirdPartyList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchPattern",
          "in" : "query",
          "description" : "Search on multiple fields, use the vertical search tables.No case sensitive",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Unique identifier, as seen by the user.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "natureE",
          "in" : "query",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        }, {
          "name" : "userCode",
          "in" : "query",
          "description" : "User owner of the list",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchThirdPartyListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ThirdPartyLists" ],
        "summary" : "create a ThirdParty List",
        "operationId" : "createThirdPartyList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createThirdPartyListInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createThirdPartyListSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createThirdPartyListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/thirdPartyLists/{code}" : {
      "get" : {
        "tags" : [ "ThirdPartyLists" ],
        "summary" : "Get a ThirdParty List",
        "operationId" : "getThirdPartyList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getThirdPartyListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ThirdPartyLists" ],
        "summary" : "update a ThirdParty List",
        "operationId" : "updateThirdPartyList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateThirdPartyListInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateThirdPartyListSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ThirdPartyLists" ],
        "summary" : "Delete a ThirdParty List",
        "operationId" : "deleteThirdPartyList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/types" : {
      "post" : {
        "tags" : [ "Types" ],
        "summary" : "create a  Type",
        "operationId" : "createType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createTypeInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createTypeSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createTypeSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/types/{code}" : {
      "get" : {
        "tags" : [ "Types" ],
        "summary" : "Get a Type",
        "operationId" : "getType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "'Business' identifier of an occurrence. The combination of the 'code' and the 'attribute_dict_id' constitutes a unique key.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getTypeSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Types" ],
        "summary" : "update a Type",
        "operationId" : "updateType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "'Business' identifier of an occurrence. The combination of the 'code' and the 'attribute_dict_id' constitutes a unique key.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateTypeInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateTypeSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Types" ],
        "summary" : "Delete a Type",
        "operationId" : "deleteType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "'Business' identifier of an occurrence. The combination of the 'code' and the 'attribute_dict_id' constitutes a unique key.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "tapBasicAuth" : {
      "description" : "Tap Basic Authentication",
      "type" : "basic"
    },
    "X-Channel" : {
      "description" : "name of Channel",
      "type" : "apiKey",
      "name" : "X-Channel",
      "in" : "header"
    }
  },
  "definitions" : {
    "Address" : {
      "type" : "object",
      "required" : [ "addressC", "thirdPartyCode", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e., carriage returns are authorised)."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. Its field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\n\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Indicates to which third-party the address belongs."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type of address (e.g., fiscal address, legal address, correspondence address, etc.)"
        }
      }
    },
    "AddressWithPermValues" : {
      "type" : "object",
      "required" : [ "addressC", "thirdPartyCode", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e., carriage returns are authorised)."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. Its field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\n\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Indicates to which third-party the address belongs."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type of address (e.g., fiscal address, legal address, correspondence address, etc.)"
        }
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string",
          "enum" : [ "WARNING", "ERROR", "INFO" ]
        }
      },
      "title" : "ApiResponse"
    },
    "Audit" : {
      "type" : "object",
      "properties" : {
        "startTime" : {
          "type" : "string"
        },
        "endTime" : {
          "type" : "string"
        },
        "totalTime" : {
          "type" : "string"
        },
        "processTime" : {
          "type" : "string"
        },
        "scriptTime" : {
          "type" : "string"
        },
        "otherTime" : {
          "type" : "string"
        }
      },
      "title" : "Audit"
    },
    "BalancePosType" : {
      "type" : "object",
      "required" : [ "code", "name", "natureE", "rankN" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence that is seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, used mainly for reporting purposes. This long name is used as a default when there is no occurrence in the 'denomination' table for a required language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination. This is the denomination of the balance position type. Denomination is displayed in the user's language but if it is not available, then the default translation is used instead. If no denominations are available, then the name is used.\r\n\r\nIt is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too. \r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German. This is the denomination of the balance position type in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English. This is the denomination of the balance position type in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French. This is the denomination of the balance position type in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a Balance Position Type which characterises a 'Balance Position'. The list of permitted values is set by Odyssey and cannot be modified. These natures are important because they are used intensively in the Fusion process and, subsequently, in functions such as 'Performance Measurement' and 'Performance Attribution'.",
          "enum" : [ "Un-accounted", "Capital Profit", "Capital Loss", "Position Fee", "Position Tax", "Tax Credit", "Portfolio Fee", "Portfolio Tax", "Received Income", "Investment", "Withdrawal", "Currency Profit", "Currency Loss", "Paid Income", "Received Accrued Interest", "Paid Accrued Interest", "Currency Forward Premium", "Currency Forward Discount", "Fund Share Coupon/Income", "Fund Share Coupon/P&L", "Net Value", "Accrued Value", "Book Capital Profit", "Book Capital Loss", "Book Currency Profit", "Book Currency Loss", "Book Profit", "Book Loss", "Unrealised Capital Profit", "Unrealised Capital Loss", "Unrealised Currency Profit", "Unrealised Currency Loss", "Unrealised Book Profit", "Unrealised Book Loss", "Unrealised Book Capital Profit", "Unrealised Book Capital Loss", "Unrealised Book Curr. Profit", "Unrealised Book Curr. Loss" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Associates a 'Position' and 'Balance Position' to a Balance Position Type.\r\nA Balance Position with a rank less than or equal to 10 must have a nature of 'Position Fee' or 'Position Tax'. Note that there can only be one BP Type with such a rank.\r\nThe amounts corresponding to these BP Types are stored in one of the corresponding 'BP Amount' in the position/balance position tables, and shows the difference between the position gross and net amounts."
        }
      }
    },
    "BalancePosTypeWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "name", "natureE", "rankN" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence that is seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, used mainly for reporting purposes. This long name is used as a default when there is no occurrence in the 'denomination' table for a required language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination. This is the denomination of the balance position type. Denomination is displayed in the user's language but if it is not available, then the default translation is used instead. If no denominations are available, then the name is used.\r\n\r\nIt is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too. \r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German. This is the denomination of the balance position type in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English. This is the denomination of the balance position type in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French. This is the denomination of the balance position type in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a Balance Position Type which characterises a 'Balance Position'. The list of permitted values is set by Odyssey and cannot be modified. These natures are important because they are used intensively in the Fusion process and, subsequently, in functions such as 'Performance Measurement' and 'Performance Attribution'.",
          "enum" : [ "Un-accounted", "Capital Profit", "Capital Loss", "Position Fee", "Position Tax", "Tax Credit", "Portfolio Fee", "Portfolio Tax", "Received Income", "Investment", "Withdrawal", "Currency Profit", "Currency Loss", "Paid Income", "Received Accrued Interest", "Paid Accrued Interest", "Currency Forward Premium", "Currency Forward Discount", "Fund Share Coupon/Income", "Fund Share Coupon/P&L", "Net Value", "Accrued Value", "Book Capital Profit", "Book Capital Loss", "Book Currency Profit", "Book Currency Loss", "Book Profit", "Book Loss", "Unrealised Capital Profit", "Unrealised Capital Loss", "Unrealised Currency Profit", "Unrealised Currency Loss", "Unrealised Book Profit", "Unrealised Book Loss", "Unrealised Book Capital Profit", "Unrealised Book Capital Loss", "Unrealised Book Curr. Profit", "Unrealised Book Curr. Loss" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Associates a 'Position' and 'Balance Position' to a Balance Position Type.\r\nA Balance Position with a rank less than or equal to 10 must have a nature of 'Position Fee' or 'Position Tax'. Note that there can only be one BP Type with such a rank.\r\nThe amounts corresponding to these BP Types are stored in one of the corresponding 'BP Amount' in the position/balance position tables, and shows the difference between the position gross and net amounts."
        }
      }
    },
    "BusinessEntity" : {
      "type" : "object",
      "required" : [ "code", "legalNatureE", "multiEntityRoleE", "name", "orgaRoleE", "referenceE", "statusE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique business identifier of the business entity that is displayed to the end user. This field is mandatory."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the business entity's Data Security Profile with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the business entity (not necessarily unique). This field is optional."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the business entity."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination of the business entity. This extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the WealthSuite Front Office - Portfolio Management Web - TSL Operating Guide).\r\n\r\nThe denomination is displayed in the user's language, but if it is not available then the default translation is used instead. At the very least, if no denominations are available, then the name is used. As well, this extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination of the business entity in German. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination of the business entity in English. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination of the business entity in French. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "An extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "legalNatureE" : {
          "type" : "string",
          "description" : "Defines the legal nature of the business entity.",
          "enum" : [ "None", "Company", "Business Entity" ]
        },
        "multiEntityRoleE" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt defines if the business entity contributes to the multi-entity organization.",
          "enum" : [ "None", "Master", "Specific Data & Parameters" ]
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the business entity (not necessarily unique). This field is mandatory."
        },
        "orgaRoleE" : {
          "type" : "string",
          "description" : "Defines the organisation of the business entity inside the bank's organisation.",
          "enum" : [ "None", "Master Company", "Lead Company", "Branch Company", "Head Office", "Office", "Branch", "Division", "Department", "Service", "Desk" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the business entity."
        },
        "referenceE" : {
          "type" : "string",
          "description" : "Defines the reference of the business entity.\r\n\r\nA reference is a system (such as T24 back-office system) that is the data master concerning the bank's organisation.",
          "enum" : [ "None", "T24" ]
        },
        "rightReasonE" : {
          "type" : "string",
          "enum" : [ "None", "Security", "Active Change Set", "Multi-Entity Restrict", "Not Secured" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the business entity.",
          "enum" : [ "None", "Inactive", "Active", "Blocked", "Cancelled" ]
        },
        "telexC" : {
          "type" : "string",
          "description" : "Mask number of the business entity."
        },
        "themeC" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nThis attribute is a simple text that conditions the front-ends layout.  \r\nWhen, in the front-end, a user switches from one business entity to another business entity that has a different theme, the color changes accordingly. This reminds the user where he is logged into.\r\nThe standard packaging delivers some theme examples where the value is simply associated to a color: \r\n- red\r\n- darkBlue\r\n- purple\r\n- green\r\n- blue\r\n- orange\r\nWhen not defined: grey for WUI and Connect. \r\nThe usage of themes for conditioning the front-end layout can be extended by customization."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a Triple'A Plus Web user is allowed to update the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Triple'A Plus Web user's data profile contains the business entity's Data Security Profile with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateSecuRightF" : {
          "type" : "boolean"
        }
      }
    },
    "BusinessEntityAddresses" : {
      "type" : "object",
      "required" : [ "addressC", "busEntityCode", "country", "typeCode", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e. carriage returns are authorised)."
        },
        "busEntityCode" : {
          "type" : "string",
          "description" : "Indicates to which business entity the address belongs."
        },
        "country" : {
          "type" : "string",
          "description" : "Indicates the country or area in which the address is situated."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity's address.\r\n\r\nAs mentionned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Indicates the type of the address. \r\nExamples: Fiscal address, Legal address, Correspondence address."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type RankN"
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to update the corresponding business entity's address.\r\n\r\nAs mentioned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        }
      }
    },
    "BusinessEntityAddressesWithPermValues" : {
      "type" : "object",
      "required" : [ "addressC", "busEntityCode", "country", "typeCode", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e. carriage returns are authorised)."
        },
        "busEntityCode" : {
          "type" : "string",
          "description" : "Indicates to which business entity the address belongs."
        },
        "country" : {
          "type" : "string",
          "description" : "Indicates the country or area in which the address is situated."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity's address.\r\n\r\nAs mentionned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Indicates the type of the address. \r\nExamples: Fiscal address, Legal address, Correspondence address."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type RankN"
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to update the corresponding business entity's address.\r\n\r\nAs mentioned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        }
      }
    },
    "BusinessEntityUserCompo" : {
      "type" : "object",
      "required" : [ "applUserCode", "applUserId", "busEntityCode", "busEntityName", "dataProfileCode", "defaultLoginF", "mainBusEntityF", "roleE", "typeCode" ],
      "properties" : {
        "applUserCode" : {
          "type" : "string",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "applUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "busEntityCode" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityDenom" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityName" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityThemeC" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "defaultLoginF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nA business entity sets as default login is used by the system when the linked user authenticates into the system by providing login and password. The system automatically assigns that business entity to the created connection.\r\nOnly one default login can be set between a user and a business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "mainBusEntityF" : {
          "type" : "boolean",
          "description" : "Specifies whether the business entity is the main business entity of the bank's employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user))."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Defines the role that the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) has in the business.",
          "enum" : [ "None", "Compliance", "Administration", "Management", "Advisor", "Manager", "Assistant", "Application User" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "References the type of business entity user composition."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the type of business entity user composition."
        }
      }
    },
    "BusinessEntityUserCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "applUserCode", "applUserId", "busEntityCode", "busEntityName", "dataProfileCode", "defaultLoginF", "mainBusEntityF", "roleE", "typeCode" ],
      "properties" : {
        "applUserCode" : {
          "type" : "string",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "applUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "busEntityCode" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityDenom" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityName" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityThemeC" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "defaultLoginF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nA business entity sets as default login is used by the system when the linked user authenticates into the system by providing login and password. The system automatically assigns that business entity to the created connection.\r\nOnly one default login can be set between a user and a business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "mainBusEntityF" : {
          "type" : "boolean",
          "description" : "Specifies whether the business entity is the main business entity of the bank's employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user))."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Defines the role that the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) has in the business.",
          "enum" : [ "None", "Compliance", "Administration", "Management", "Advisor", "Manager", "Assistant", "Application User" ]
        },
        "roleE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute roleE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "typeCode" : {
          "type" : "string",
          "description" : "References the type of business entity user composition."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the type of business entity user composition."
        }
      }
    },
    "BusinessEntityWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "legalNatureE", "multiEntityRoleE", "name", "orgaRoleE", "referenceE", "statusE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique business identifier of the business entity that is displayed to the end user. This field is mandatory."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the business entity's Data Security Profile with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the business entity (not necessarily unique). This field is optional."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the business entity."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination of the business entity. This extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the WealthSuite Front Office - Portfolio Management Web - TSL Operating Guide).\r\n\r\nThe denomination is displayed in the user's language, but if it is not available then the default translation is used instead. At the very least, if no denominations are available, then the name is used. As well, this extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination of the business entity in German. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination of the business entity in English. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination of the business entity in French. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "An extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "legalNatureE" : {
          "type" : "string",
          "description" : "Defines the legal nature of the business entity.",
          "enum" : [ "None", "Company", "Business Entity" ]
        },
        "multiEntityRoleE" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt defines if the business entity contributes to the multi-entity organization.",
          "enum" : [ "None", "Master", "Specific Data & Parameters" ]
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the business entity (not necessarily unique). This field is mandatory."
        },
        "orgaRoleE" : {
          "type" : "string",
          "description" : "Defines the organisation of the business entity inside the bank's organisation.",
          "enum" : [ "None", "Master Company", "Lead Company", "Branch Company", "Head Office", "Office", "Branch", "Division", "Department", "Service", "Desk" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the business entity."
        },
        "referenceE" : {
          "type" : "string",
          "description" : "Defines the reference of the business entity.\r\n\r\nA reference is a system (such as T24 back-office system) that is the data master concerning the bank's organisation.",
          "enum" : [ "None", "T24" ]
        },
        "rightReasonE" : {
          "type" : "string",
          "enum" : [ "None", "Security", "Active Change Set", "Multi-Entity Restrict", "Not Secured" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the business entity.",
          "enum" : [ "None", "Inactive", "Active", "Blocked", "Cancelled" ]
        },
        "telexC" : {
          "type" : "string",
          "description" : "Mask number of the business entity."
        },
        "themeC" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nThis attribute is a simple text that conditions the front-ends layout.  \r\nWhen, in the front-end, a user switches from one business entity to another business entity that has a different theme, the color changes accordingly. This reminds the user where he is logged into.\r\nThe standard packaging delivers some theme examples where the value is simply associated to a color: \r\n- red\r\n- darkBlue\r\n- purple\r\n- green\r\n- blue\r\n- orange\r\nWhen not defined: grey for WUI and Connect. \r\nThe usage of themes for conditioning the front-end layout can be extended by customization."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a Triple'A Plus Web user is allowed to update the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Triple'A Plus Web user's data profile contains the business entity's Data Security Profile with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateSecuRightF" : {
          "type" : "boolean"
        }
      }
    },
    "Category" : {
      "type" : "object",
      "required" : [ "categoryDescC", "code", "dataSecuProfCode", "natureE" ],
      "properties" : {
        "categoryDescC" : {
          "type" : "string",
          "description" : "Description of the category"
        },
        "code" : {
          "type" : "string",
          "description" : "Unique code of a category. It is the primary key."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Data Security Profile of the category. A category is secured. The goal is to defined categories for a group of users."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the category specifying the type of the entity that is categorized.",
          "enum" : [ "Third Party", "Portfolio", "Instrument", "Document", "Activity" ]
        }
      }
    },
    "CategoryWithPermValues" : {
      "type" : "object",
      "required" : [ "categoryDescC", "code", "dataSecuProfCode", "natureE" ],
      "properties" : {
        "categoryDescC" : {
          "type" : "string",
          "description" : "Description of the category"
        },
        "code" : {
          "type" : "string",
          "description" : "Unique code of a category. It is the primary key."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Data Security Profile of the category. A category is secured. The goal is to defined categories for a group of users."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the category specifying the type of the entity that is categorized.",
          "enum" : [ "Third Party", "Portfolio", "Instrument", "Document", "Activity" ]
        }
      }
    },
    "ConstraintParameter" : {
      "type" : "object",
      "required" : [ "instrSetCode", "operatorE", "templateElementId", "templateElementName", "templateElementParamNatureE" ],
      "properties" : {
        "constrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the technical identifier of the constraint."
        },
        "dateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "References the date you defined in a Date constraint parameter."
        },
        "dimConstraintDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the type of constraint you define: strategy element (i.e. holding constraint) or trading constraint."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrSetCode" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetDenom" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "objectiveN" : {
          "type" : "number",
          "description" : "References the numerical value you defined in a Value parameter."
        },
        "operatorE" : {
          "type" : "string",
          "description" : "References the operator you defined in an Operator constraint parameter.",
          "enum" : [ "<None>", "<>", "=", "<", "<=", ">", ">=" ]
        },
        "templateElementId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementName" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementParamNatureE" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description.",
          "enum" : [ "Operator", "Attribute", "Value", "Date", "Instrument Set" ]
        }
      }
    },
    "ConstraintParameterWithPermValues" : {
      "type" : "object",
      "required" : [ "instrSetCode", "operatorE", "templateElementId", "templateElementName", "templateElementParamNatureE" ],
      "properties" : {
        "constrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the technical identifier of the constraint."
        },
        "dateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "References the date you defined in a Date constraint parameter."
        },
        "dimConstraintDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the type of constraint you define: strategy element (i.e. holding constraint) or trading constraint."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrSetCode" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetDenom" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "objectiveN" : {
          "type" : "number",
          "description" : "References the numerical value you defined in a Value parameter."
        },
        "operatorE" : {
          "type" : "string",
          "description" : "References the operator you defined in an Operator constraint parameter.",
          "enum" : [ "<None>", "<>", "=", "<", "<=", ">", ">=" ]
        },
        "operatorE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute operatorE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "templateElementId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementName" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementParamNatureE" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description.",
          "enum" : [ "Operator", "Attribute", "Value", "Date", "Instrument Set" ]
        }
      }
    },
    "ConstraintTemplate" : {
      "type" : "object",
      "required" : [ "activeF", "code", "constrNatureE", "criticalnessE", "name", "parameterF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Constraint Template. A Constraint Template must be active to appear in default selection lists. If a Constraint Template is inactive, it is not displayed in default selection lists."
        },
        "code" : {
          "type" : "string",
          "description" : "This code is the Constraint Template entity business key."
        },
        "constrNatureE" : {
          "type" : "string",
          "description" : "Specifies the type of constraint to which the template applies.",
          "enum" : [ "Trading Constraint", "Holding Constraint" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "The long name of the occurrence. Try to provide an explicit description of your template. This information appears in default selection lists and is useful later for identification and description."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "The short name of the occurrence."
        },
        "parameterF" : {
          "type" : "boolean",
          "description" : "Specifies if the constraint holds specific parameters or not. If it is set to No, you do not have access to the template elements (i.e. the parameter description)."
        }
      }
    },
    "ConstraintTemplateWithPermValues" : {
      "type" : "object",
      "required" : [ "activeF", "code", "constrNatureE", "criticalnessE", "name", "parameterF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Constraint Template. A Constraint Template must be active to appear in default selection lists. If a Constraint Template is inactive, it is not displayed in default selection lists."
        },
        "code" : {
          "type" : "string",
          "description" : "This code is the Constraint Template entity business key."
        },
        "constrNatureE" : {
          "type" : "string",
          "description" : "Specifies the type of constraint to which the template applies.",
          "enum" : [ "Trading Constraint", "Holding Constraint" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "The long name of the occurrence. Try to provide an explicit description of your template. This information appears in default selection lists and is useful later for identification and description."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "The short name of the occurrence."
        },
        "parameterF" : {
          "type" : "boolean",
          "description" : "Specifies if the constraint holds specific parameters or not. If it is set to No, you do not have access to the template elements (i.e. the parameter description)."
        }
      }
    },
    "Currencies" : {
      "type" : "object",
      "required" : [ "code", "name" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Code identifying an occurrence for the end user.\r\nThis code is unique but can be changed, if necessary."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see \"Multilingual\")."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the currency.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence.\r\nUsed mainly for display. Reports mainly use a Denomination (see under \"Multilingual\")."
        }
      }
    },
    "CurrenciesWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "name" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Code identifying an occurrence for the end user.\r\nThis code is unique but can be changed, if necessary."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see \"Multilingual\")."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the currency.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence.\r\nUsed mainly for display. Reports mainly use a Denomination (see under \"Multilingual\")."
        }
      }
    },
    "Geographic" : {
      "type" : "object",
      "required" : [ "code", "countryF", "name" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Most common business code."
        },
        "countryF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Geographical Area is a country."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the country.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "GeographicWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "countryF", "name" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Most common business code."
        },
        "countryF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Geographical Area is a country."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the country.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "Grid" : {
      "type" : "object",
      "required" : [ "code", "name", "natureE", "primaryGridF" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name of an occurence that will be used as default long name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the grid.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the kind of grid which is defined.",
          "enum" : [ "Standard", "Market Structure", "Market Structure Subset" ]
        },
        "primaryGridF" : {
          "type" : "boolean",
          "description" : "Currently not used by financial functions."
        }
      }
    },
    "GridWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "name", "natureE", "primaryGridF" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name of an occurence that will be used as default long name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the grid.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the kind of grid which is defined.",
          "enum" : [ "Standard", "Market Structure", "Market Structure Subset" ]
        },
        "primaryGridF" : {
          "type" : "boolean",
          "description" : "Currently not used by financial functions."
        }
      }
    },
    "HeaderCreateResponse" : {
      "type" : "object",
      "properties" : {
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MessageResponse"
          }
        },
        "interactiveToken" : {
          "type" : "string",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only ."
        }
      },
      "title" : "HeaderCreateResponse"
    },
    "HeaderListResponse" : {
      "type" : "object",
      "properties" : {
        "Pagination" : {
          "$ref" : "#/definitions/Pagination"
        },
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        }
      },
      "title" : "HeaderListResponse"
    },
    "HeaderResponse" : {
      "type" : "object",
      "properties" : {
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MessageResponse"
          }
        }
      },
      "title" : "HeaderResponse"
    },
    "Instrument" : {
      "type" : "object",
      "required" : [ "accrualRuleE", "activeF", "code", "complexityF", "contractNatE", "contractSizeN", "cutoffTimezoneCode", "cutoffTimezoneName", "fundIncomeStyleE", "issuerThirdCode", "marketThirdCode", "name", "natureE", "negociableF", "optStyleE", "optionClassE", "payFreqUnitE", "portfolioCode", "portfolioName", "portfolioStatusE", "portfolioThirdCode", "priceCalcRuleE", "redempCodeE", "refCurrCode", "reinvestmentAllowedF", "riskCurrCode", "riskGeoCode", "riskNatureE", "subNatE", "subtypeCode", "subtypeName", "switchOrderAmtF", "switchOrderPercF", "switchOrderUnitF", "taxGeoCode", "taxGeoName", "tradeNatureE", "typeCode", "typeName", "underlyInstrCode", "underlyInstrName", "underlyInstrNatureE", "usageNatureE", "valRuleE", "wrapEligibleF" ],
      "properties" : {
        "accrualRuleE" : {
          "type" : "string",
          "description" : "Specifies the method used to compute the number of days between two dates. For yield curves, the value defines the calendar convention for interpolation in the dates.\r\n\r\nThe following information applies to accrual rules 19 to 31.\r\n\r\nDATATYPE CALCONV (file main/cldr.h, version 1.68, line 92)\r\n\r\nCALCONV: data type for calendar conventions\r\n--------------------------------------------\r\n\r\n\r\n            ACTACT\r\n            ACTLEAP\r\n            ACTAFB\r\n            ACTEUROBOND\r\n            ACTFRF\r\n            EU30360\r\n            EU30E360\r\n            EU30E365\r\n            US30360\r\n            US30E360\r\n            ACT365\r\n            ACTNL365\r\n            ACT360\r\n            EU30EP360\r\nCALCONV\r\n\r\nThe main purpose of the calendar convention is to define the day count fraction used, e.g. when computing accrued interest over a certain time period. The day count fraction is in general computed as:\r\n\r\nNumber of days in period / Number of days per year.\r\n\r\nThe time period in question is defined to go from, and including, the period start date  to, but excluding, the period end date.\r\n\r\nThe definition of these is described below, followed by a short note on market practice.\r\n\r\nThe definitions are in accordance with the ISMA publication \"Bond Markets: Structures and Yield Calculations\" (1998) by Patrick Brown and the ISDA note \"Emu and Market Conventions: Recent Developments\" (1998).\r\n\r\nNumber of days in period\r\n------------------------\r\n\r\nFor the ACT based conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, ACT365, ACT360, the number of days between the two dates is computed as the actual number of calendar days in the period, including 29 February if it occurs in the period. For ACTNL365, which is used in Japan, 29 February is never counted.\r\n\r\nFor the 30-day month based conventions, EU30360, EU30E360, EU30E365, EU30EP360, US30360, US30E360, the number of days between two days - written on the form day-month-year as d1m1y1 and d2m2y2 - is computed according to the formula:\r\n\r\n        360 * (y2 - y1) + 30 * (m2 - m1) + (d2 - d1)\r\n\r\nwhere the original dates are modified according to the rules below:\r\n\r\nEU30360, US30360 convention (also know as the \"30-day month U.S. method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 and modified d1 = 30 then d2 is set to 30.\r\n\r\nEU30E365, EU30E365, US30E360 convention (also known as the \"30-day European method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 30.\r\n\r\nEU30EP360 convention:\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 1, m2 (and possibly y2) is updated to next month.\r\n\r\nNumber of days per year\r\n-----------------------          .\r\n\r\nFor the 360-days conventions, EU30360, EU30E360, EU30EP360, US30360, US30E360, ACT360, the number of days per year is 360.\r\n\r\nFor the 365-days conventions, EU30E365, ACT365, ACTNL365, the number of days per year is 365.\r\n\r\nFor the actual-days conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, the number of days per year is the actual number of days per year, differing in the processing of leap years in the following manner:\r\n\r\nACTACT convention: The number of days per year is the actual number of days from the period start date and one year ahead.\r\n\r\nACTAFB: If the period is shorter than one year then the number of days is 366 if 29 February occurs in the period. Otherwise it is 365.\r\n\r\nIf the period is longer than one year then the period is split into one year sub-periods -counting backwards from the period end date - plus the remaining initial stub period of length shorter than one year. The day count fraction is the sum over the day count fractions of the sub-periods. The stub period is treated in accordance with the first rule and the remaining year-long periods have a day count fraction of 1.\r\n\r\nACTEUROBOND: If the period equals a whole year, then the number of days per year equals the actual number of days in the period. If the period is not a whole year, then the number of days per year equals the number of days in the calendar year of the end period date.\r\n\r\nACTFRF: The number of days per year is the actual number of days from the end period date and one year back.\r\n\r\nACTLEAP: The period is split into the periods that are in leap and non-leap years. In the former periods the number of days per year is 366 while in the latter periods the number of days is 365. The day count fraction is the sum over the day count fractions of the sub-periods.\r\n\r\nMarket practice\r\n---------------\r\n\r\nThe actual-actual calendar conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, are used in the swap (floating leg) and bond markets. The recommendation to use actual-actual in the new euro denominations has highlighted the differences between the conventions even though they only differ in the number of days per year when considering leap years.\r\n\r\nACTACT              Original SCecon convention.\r\n\r\nACTLEAP             ISDA convention for swaps. It has been proposed\r\n                    to switch to ACTAFB.\r\nACTAFB              AFB convention. Recommended new ISDA convention.\r\nACTEUROBOND         Used in the Eurobond market.\r\nACTFRF              Used in the French market.\r\n\r\nThe 30-month calendar conventions, EU30360, EU30E360, EU30E365, US30360, US30E360, EU30EP360, are used swap (fixed leg) and bond markets.\r\n\r\nEU30360, US30360    Used in Finland\r\nEU30E360, US30E360  Previous standard in Europe. Still used in Denmark,\r\n\r\n                    Sweden, Holland, Belgium, and Austria.\r\nEU30EP360           Used in Switzerland.\r\n\r\nThe actual-360 convention, ACT360, is used in money and swap (floating leg) markets.\r\n\r\nThe actual-365 conventions, ACT365 and ACTNL365, are used in Norway, Canada, and Japan.",
          "enum" : [ "Default", "30E/360", "30/360 (Feb)", "30/360 (Def)", "30US/360", "Actual/365", "365/365", "Actual/Actual", "Actual/360", "Actual+1/365", "Actual/Actual (US)", "30E/365", "30/360", "30E/Actual", "30US/365", "30US/Actual", "Actual+1/Actual", "Actual+1/360", "30/360+1 (Italian BTP)", "ACTACT", "ACTLEAP", "ACTAFB", "ACTEUROBOND", "ACTFRF", "EU30360", "EU30E360", "EU30E365", "US30360", "US30E360", "ACT365", "ACTNL365", "ACT360", "EU30EP360", "BUS252" ]
        },
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Financial Instrument. If a Financial Instrument is inactive (active_f=0), it is not displayed in the default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date at which the Instrument exists or is issued. This attribute is purely informational for some Instruments. For bonds, it generally corresponds to the issue date. For Options, it specifies the date from which an option can be exercised. The option style is used in functions to distinguish between European and American Options.\r\nIf necessary, information on an Issue, particularly if it is in the future or if it is partial, can be stored in an Issue_or_Redemption Event."
        },
        "capTaxRateP" : {
          "type" : "number",
          "description" : "Specifies the amount of capital gains applied to a position in this security."
        },
        "code" : {
          "type" : "string",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc."
        },
        "complexityF" : {
          "type" : "boolean",
          "description" : "This field is used to specify the complexity of an instrument. \r\nIt could be initialised by a default value based on other attributes of the instruments such as the nature, the risk-nature, the currency, the market..."
        },
        "contractNatE" : {
          "type" : "string",
          "description" : "Specifies the default characteristics of a Futures contract for calculating conversion factors.",
          "enum" : [ "<None>", "CBOT futures 2 yr & 5 yr notes", "LIFFE long gilt contract", "MATIF French bond contract", "TSE Japanese bond contract", "LIFFE bond contract", "LIFFE Italian BTP contract", "Montreal Canadian contract", "MEFF Spanish 10 yr contract", "MEFF Spanish 3 yr contract", "LIFFE Spanish Bono contract", "CBOT fut. US bond & 10 yr note" ]
        },
        "contractSizeN" : {
          "type" : "number",
          "description" : "The size of one contract. The general practice in option dealing is to trade contracts that cover a fixed quantity of underlying instruments, e.g. 3 option contracts to buy 100 IBM stock at 145 USD. The quantity for the above example is stored in the database as 300. The contract size is 100. The quantity displayed or entered by the user is 3 (quantity/contract size). \r\nThe default value is 1."
        },
        "cutoffFixTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time between 00:00 and 23:59"
        },
        "cutoffTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Cut-off time is the deadline mutual fund company sets for investors to enter orders on this fund. \r\nWhen trade occurs after this time, the fund will be based on another net asset value.\r\nThe time format must be 24h. Example, enter 14:30 for 2:30 pm."
        },
        "cutoffTimezoneCode" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "cutoffTimezoneName" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence (see the documentation on the multi-lingual features for information on changing languages)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date at which the Instrument ceases to exist. In theory, there must be no positions in this Instrument after the end date. In practice, however, due to possible administrative or financial delays, this may not always be the case. This field is not mandatory but if completed it must be greater than or equal to the Begin Date."
        },
        "exerQuoteN" : {
          "type" : "number",
          "description" : "Identifies the exercise quote (strike) applicable to the underlying instrument when the redemption quote is applicable to the instrument. It is used for structured products that embed terms and conditions relative to an underlying with a strike.\r\n\r\nApplicable for structured product definition management."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the instrument.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpoSubscriptionF" : {
          "type" : "boolean",
          "description" : "Indicator to show that the IPO subscriptions are possible in the instrument. It is determined by the way of comparing the current date and if it is later than the subscription begin date and earlier than the date specified as cut-off date for the IPO subscription. \r\n0=Indicates that the IPO subscription is not enabled for the instrument (current date earlier than subscription begin date or later than cut off date)\r\n1=Indicates that the IPO subscriptions are possible for the instrument(current date later than subscription begin date and earlier than cut off date)"
        },
        "extIsinSynC" : {
          "type" : "string",
          "description" : "ISIN\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIN code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_ISIN_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extLastPriceN" : {
          "type" : "number",
          "description" : "Last Price\r\n\r\nThis is the last price of the instrument based on the system date. The INSTR_PRICE() keyword is used to display the value.\r\n\r\nThis extended attribute cannot be edited by the user and requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). The attribute is used only for the Web Packaging."
        },
        "extOngoingIpoF" : {
          "type" : "boolean",
          "description" : "Indicator to show if the instrument, which came up with an IPO, is listed in the secondary market or not. \r\n0=Indicates that the IPO instrument is listed in the market (current date later than first dealing date)\r\n1=1.\tIndicates that the IPO instrument is not yet listed in the market (current date earlier than first dealing date)"
        },
        "extRatingC" : {
          "type" : "string",
          "description" : "Rating\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the rating of the instrument.\r\nThe definition of the rating's code, to be used, has to be set through the parameter DS_RATING_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSectorC" : {
          "type" : "string",
          "description" : "Sector\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIC code of the instrument's sector.\r\nThe definition of the sector's code, to be used, has to be set through the parameter DS_SECTOR_INSTRUMENT\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTelekursSynC" : {
          "type" : "string",
          "description" : "Telekurs\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the Telekurs code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_TELEKURS_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faceValueN" : {
          "type" : "number",
          "description" : "The smallest nominal value unit for a bond or face value of a share, expressed in the Currency of the Financial Instrument."
        },
        "firstCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Specifies the date at which the first coupon is paid."
        },
        "fixD" : {
          "type" : "string",
          "format" : "date",
          "description" : "For structured products, it is the date at which the underlying price is determined to define the pay off of the instrument depending on the terms and conditions. \r\n\r\nApplicable for structured product definition management."
        },
        "fundIncomeStyleE" : {
          "type" : "string",
          "description" : "Indicates, how earnings from the funds' constituents are handled by the fund management.",
          "enum" : [ "<None>", "Growth", "Dividend" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "interestRateP" : {
          "type" : "number",
          "description" : "The interest rate of income to be paid. The payment is always in the currency of the Instrument. This field is also used to indicate the nominal interest rate of a notional instrument (deliverable) that underlies a bond futures contract."
        },
        "issueQtyN" : {
          "type" : "number",
          "description" : "The actual number of Financial Instruments issued to the market.\r\nNote that this is NOT the amount traded on the market."
        },
        "issueQuoteN" : {
          "type" : "number",
          "description" : "Specifies the quote at which the instrument was issued."
        },
        "issuerThirdCode" : {
          "type" : "string",
          "description" : "Specifies the third party that issued the instrument."
        },
        "lastCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "For bonds, date at which the last coupon is paid."
        },
        "lastPriceN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "lastQuoteN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "marketThirdCode" : {
          "type" : "string",
          "description" : "Specifies the main market in which the instrument is quoted.\r\nThis market is used in the default process for retrieving prices."
        },
        "minTradeQtyN" : {
          "type" : "number",
          "description" : "The minimum quantity of an instrument that may be traded. This field may be used in conjunction with the odd lot quantity.\r\n\r\nFor example, for a particular instrument, the minimum trade size may be 5000 units (minimum trade quantity) and then available in increments of 1000 (odd lot) thereafter."
        },
        "minTradingAmtM" : {
          "type" : "number",
          "description" : "Defines the Minimum Trading Amount of an instrument below which trades are not executed at the market price."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "negociableF" : {
          "type" : "boolean",
          "description" : "Specifies if the instrument is directly negotiable or not, e.g. a notional bond or an instrument that is generated for risk exposure purposes may not be negotiable."
        },
        "oddLotQtyN" : {
          "type" : "number",
          "description" : "Minimum quantity of the instrument below which trades are not executed at the market price."
        },
        "optStyleE" : {
          "type" : "string",
          "description" : "Specifies when the Option can be exercised.",
          "enum" : [ "<None>", "American", "European", "Bermudan" ]
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Specifies if the holder of an Option has the right to buy or sell the underlying.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "payFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "For Bonds, this field specifies the number of payment frequency units between two payments.\r\nFor Stocks and Fund Shares, specifies the frequency of dividend payments.\r\nFor Options, specifies the frequency. \r\nFor Rates whose subtype is set to Par yield, specifies the frequency of payoffs if the rate is a security with payoffs. Typically, this is used for rates that underly floating rate indexes, and CMT and CMS swaps where the underlying is a par yield rate of a 5-year Treasury."
        },
        "payFreqUnitE" : {
          "type" : "string",
          "description" : "Specifies the unit of the Payment Frequency.\r\nSee the description of the Payment Frequency attribute.\r\nThis attribute is complemented by the Frequency attribute that specifies the number of units, e.g. 1 week, 2 weeks, 4 months. The permitted values are:\r\n0. No periodicity\r\n4. Monthly\r\n5. Quarterly\r\n6. Semi-annually\r\n7. Annually",
          "enum" : [ "<None>", "Day", "Business Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioStatusE" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "portfolioThirdCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "priceCalcRuleE" : {
          "type" : "string",
          "description" : "Specifies the default method for obtaining the price from the quote of a financial instrument.",
          "enum" : [ "<None>", "Quote", "Quote/100", "Partially Paid Stocks", "Partially Paid Bonds", "Stocks Quoted in %", "Bonds Quoted in Unit", "Actuarial Yield", "Discount Rate", "Add-On Rate", "Quoted with AI", "Quoted in Unit with AI", "TCN", "Annualised Rate", "Quote Life", "Euro-Futures", "FRA", "Australian Future", "Part. Paid Bonds in Unit", "Part. Paid Stocks in Prct", "Price calculation Factor", "Discount Yield", "Basis Points", "Quote in Unit", "Australian Future (flexible)", "NPV", "Chilean Bond (TERA)", "Portfolio Specific Price" ]
        },
        "redempCodeE" : {
          "type" : "string",
          "description" : "Specifies if the Redemption data for this financial instrument is stored in the financial Instrument or the Issue_or_Redemption Events table.",
          "enum" : [ "Final Redemption in instrument", "Final Redm only in instrument", "All data in iss_redm_event" ]
        },
        "redempQuoteN" : {
          "type" : "number",
          "description" : "Market quotation of the exercise of a term contract expressed in a specific currency via a relationship. Can also be the market quotation of the redemption quote.\r\nNB. Default price calculation rule of the underlying financial instrument."
        },
        "refCurrCode" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "refCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "reinvestmentAllowedF" : {
          "type" : "boolean",
          "description" : "Indicates if the fund offers a choice for the investor to decide, whether the dividends of the fund should be paid out or re-invested.\r\nThis field can only be set for instrument with fund_income_style_e set to Dividend."
        },
        "riskCurrCode" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskGeoDenom" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskLevelN" : {
          "type" : "number",
          "description" : "This field is used in conjunction with the investment profile risk level in order to check whether the instrument does not excess the risk level tolerated by the investment profile."
        },
        "riskNatureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the risk incurred by this instrument. The general processing of instruments attempts to mirror an instrument with \"building block\" instruments whose risk nature is 1, 2, 3 or 4.",
          "enum" : [ "<None>", "Equity", "Interest", "Commodity", "Currency", "Hybrid", "Real Estate" ]
        },
        "roundLotAmtM" : {
          "type" : "number",
          "description" : "Defines the Round Lot Amount of an instrument that may be traded. This field may be used in conjunction with Minimum Trading Amount. \r\n\r\nFor example, the minimum Trading Amount can be 5000 EUR for a particular instrument and then, available only in increments of 1000 EUR (Round Lot Amount) thereafter."
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "switchOrderAmtF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in amount"
        },
        "switchOrderPercF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in percentage"
        },
        "switchOrderUnitF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in units"
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxGeoName" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxRateP" : {
          "type" : "number",
          "description" : "Specifies the withholding tax applied in the payment of a coupon or dividend."
        },
        "tickSizeN" : {
          "type" : "number",
          "description" : "Specifies the valid increment or decrement in the price of a financial instrument. The tick size amount can be defined using the script language if it is part of a more complex calculation."
        },
        "tradeNatureE" : {
          "type" : "string",
          "description" : "Specifies the Instrument Trade Nature.\r\n\r\nIt is useful for users who want to buy an instrument in the denomination of \"Amount\" (e.g., 1,000 EUR, 2,000 EUR, etc.)\r\n\r\nPermitted values (Nature) - Name:\r\n- 0 = <Default>\r\n- 1 = Quantity\r\n- 2 = Amount",
          "enum" : [ "default", "quantity", "amount" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrName" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrNatureE" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "usageNatureE" : {
          "type" : "string",
          "description" : "To specify usage nature that is applied for the instrument. Instrument usage can be listed, unlisted instrument or OTC instrument template. Default value is listed instrument.",
          "enum" : [ "None", "Unlisted Instrument", "Structured Notes Template", "OTC Derivatives Template", "Structured Product Template", "OTC Currency Derivatives Template", "Fiduciary Deposit Template", "Term Deposit Template" ]
        },
        "valRuleE" : {
          "type" : "string",
          "description" : "Specifies if and how this Financial Instrument is evaluated. If not quoted, the LAST PRICE DATE is null.",
          "enum" : [ "Quoted", "Price=0", "Price=1", "Composite", "Theoretical", "Reference Instrument", "Script", "Parent Price", "Simple Script" ]
        },
        "wrapEligibleF" : {
          "type" : "boolean",
          "description" : "This field indicates if the instrument is eligible for wrap services. \r\n\r\nWrap service is a means of consolidating various fees (administrative expenses, management expenses, commissions for trading, investment advice etc.,) into a single fee for all the services provided. \r\n\r\nAn instrument eligible for a wrap service implies that the various fees on that instrument can be wrapped into a single fee."
        }
      }
    },
    "InstrumentListCompo" : {
      "type" : "object",
      "required" : [ "entityDictSqlname", "instrumentCode", "listCode", "rankN" ],
      "properties" : {
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Reference to the type of object (entity_dict_id.sqlname_c) belonging to a list.\r\nThis reference has to be the same as the one defined in the corresponding list."
        },
        "instrumentCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of instrument"
        },
        "listCode" : {
          "type" : "string",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "InstrumentListCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "entityDictSqlname", "instrumentCode", "listCode", "rankN" ],
      "properties" : {
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Reference to the type of object (entity_dict_id.sqlname_c) belonging to a list.\r\nThis reference has to be the same as the one defined in the corresponding list."
        },
        "instrumentCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of instrument"
        },
        "listCode" : {
          "type" : "string",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "InstrumentSubNat" : {
      "type" : "object",
      "required" : [ "code", "natureE", "subNatE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        }
      }
    },
    "InstrumentSubNatWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "natureE", "subNatE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        },
        "subNatE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute subNatE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        }
      }
    },
    "InstrumentWithPermValues" : {
      "type" : "object",
      "required" : [ "accrualRuleE", "activeF", "code", "complexityF", "contractNatE", "contractSizeN", "cutoffTimezoneCode", "cutoffTimezoneName", "fundIncomeStyleE", "issuerThirdCode", "marketThirdCode", "name", "natureE", "negociableF", "optStyleE", "optionClassE", "payFreqUnitE", "portfolioCode", "portfolioName", "portfolioStatusE", "portfolioThirdCode", "priceCalcRuleE", "redempCodeE", "refCurrCode", "reinvestmentAllowedF", "riskCurrCode", "riskGeoCode", "riskNatureE", "subNatE", "subtypeCode", "subtypeName", "switchOrderAmtF", "switchOrderPercF", "switchOrderUnitF", "taxGeoCode", "taxGeoName", "tradeNatureE", "typeCode", "typeName", "underlyInstrCode", "underlyInstrName", "underlyInstrNatureE", "usageNatureE", "valRuleE", "wrapEligibleF" ],
      "properties" : {
        "accrualRuleE" : {
          "type" : "string",
          "description" : "Specifies the method used to compute the number of days between two dates. For yield curves, the value defines the calendar convention for interpolation in the dates.\r\n\r\nThe following information applies to accrual rules 19 to 31.\r\n\r\nDATATYPE CALCONV (file main/cldr.h, version 1.68, line 92)\r\n\r\nCALCONV: data type for calendar conventions\r\n--------------------------------------------\r\n\r\n\r\n            ACTACT\r\n            ACTLEAP\r\n            ACTAFB\r\n            ACTEUROBOND\r\n            ACTFRF\r\n            EU30360\r\n            EU30E360\r\n            EU30E365\r\n            US30360\r\n            US30E360\r\n            ACT365\r\n            ACTNL365\r\n            ACT360\r\n            EU30EP360\r\nCALCONV\r\n\r\nThe main purpose of the calendar convention is to define the day count fraction used, e.g. when computing accrued interest over a certain time period. The day count fraction is in general computed as:\r\n\r\nNumber of days in period / Number of days per year.\r\n\r\nThe time period in question is defined to go from, and including, the period start date  to, but excluding, the period end date.\r\n\r\nThe definition of these is described below, followed by a short note on market practice.\r\n\r\nThe definitions are in accordance with the ISMA publication \"Bond Markets: Structures and Yield Calculations\" (1998) by Patrick Brown and the ISDA note \"Emu and Market Conventions: Recent Developments\" (1998).\r\n\r\nNumber of days in period\r\n------------------------\r\n\r\nFor the ACT based conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, ACT365, ACT360, the number of days between the two dates is computed as the actual number of calendar days in the period, including 29 February if it occurs in the period. For ACTNL365, which is used in Japan, 29 February is never counted.\r\n\r\nFor the 30-day month based conventions, EU30360, EU30E360, EU30E365, EU30EP360, US30360, US30E360, the number of days between two days - written on the form day-month-year as d1m1y1 and d2m2y2 - is computed according to the formula:\r\n\r\n        360 * (y2 - y1) + 30 * (m2 - m1) + (d2 - d1)\r\n\r\nwhere the original dates are modified according to the rules below:\r\n\r\nEU30360, US30360 convention (also know as the \"30-day month U.S. method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 and modified d1 = 30 then d2 is set to 30.\r\n\r\nEU30E365, EU30E365, US30E360 convention (also known as the \"30-day European method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 30.\r\n\r\nEU30EP360 convention:\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 1, m2 (and possibly y2) is updated to next month.\r\n\r\nNumber of days per year\r\n-----------------------          .\r\n\r\nFor the 360-days conventions, EU30360, EU30E360, EU30EP360, US30360, US30E360, ACT360, the number of days per year is 360.\r\n\r\nFor the 365-days conventions, EU30E365, ACT365, ACTNL365, the number of days per year is 365.\r\n\r\nFor the actual-days conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, the number of days per year is the actual number of days per year, differing in the processing of leap years in the following manner:\r\n\r\nACTACT convention: The number of days per year is the actual number of days from the period start date and one year ahead.\r\n\r\nACTAFB: If the period is shorter than one year then the number of days is 366 if 29 February occurs in the period. Otherwise it is 365.\r\n\r\nIf the period is longer than one year then the period is split into one year sub-periods -counting backwards from the period end date - plus the remaining initial stub period of length shorter than one year. The day count fraction is the sum over the day count fractions of the sub-periods. The stub period is treated in accordance with the first rule and the remaining year-long periods have a day count fraction of 1.\r\n\r\nACTEUROBOND: If the period equals a whole year, then the number of days per year equals the actual number of days in the period. If the period is not a whole year, then the number of days per year equals the number of days in the calendar year of the end period date.\r\n\r\nACTFRF: The number of days per year is the actual number of days from the end period date and one year back.\r\n\r\nACTLEAP: The period is split into the periods that are in leap and non-leap years. In the former periods the number of days per year is 366 while in the latter periods the number of days is 365. The day count fraction is the sum over the day count fractions of the sub-periods.\r\n\r\nMarket practice\r\n---------------\r\n\r\nThe actual-actual calendar conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, are used in the swap (floating leg) and bond markets. The recommendation to use actual-actual in the new euro denominations has highlighted the differences between the conventions even though they only differ in the number of days per year when considering leap years.\r\n\r\nACTACT              Original SCecon convention.\r\n\r\nACTLEAP             ISDA convention for swaps. It has been proposed\r\n                    to switch to ACTAFB.\r\nACTAFB              AFB convention. Recommended new ISDA convention.\r\nACTEUROBOND         Used in the Eurobond market.\r\nACTFRF              Used in the French market.\r\n\r\nThe 30-month calendar conventions, EU30360, EU30E360, EU30E365, US30360, US30E360, EU30EP360, are used swap (fixed leg) and bond markets.\r\n\r\nEU30360, US30360    Used in Finland\r\nEU30E360, US30E360  Previous standard in Europe. Still used in Denmark,\r\n\r\n                    Sweden, Holland, Belgium, and Austria.\r\nEU30EP360           Used in Switzerland.\r\n\r\nThe actual-360 convention, ACT360, is used in money and swap (floating leg) markets.\r\n\r\nThe actual-365 conventions, ACT365 and ACTNL365, are used in Norway, Canada, and Japan.",
          "enum" : [ "Default", "30E/360", "30/360 (Feb)", "30/360 (Def)", "30US/360", "Actual/365", "365/365", "Actual/Actual", "Actual/360", "Actual+1/365", "Actual/Actual (US)", "30E/365", "30/360", "30E/Actual", "30US/365", "30US/Actual", "Actual+1/Actual", "Actual+1/360", "30/360+1 (Italian BTP)", "ACTACT", "ACTLEAP", "ACTAFB", "ACTEUROBOND", "ACTFRF", "EU30360", "EU30E360", "EU30E365", "US30360", "US30E360", "ACT365", "ACTNL365", "ACT360", "EU30EP360", "BUS252" ]
        },
        "accrualRuleE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute accrualRuleE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Financial Instrument. If a Financial Instrument is inactive (active_f=0), it is not displayed in the default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date at which the Instrument exists or is issued. This attribute is purely informational for some Instruments. For bonds, it generally corresponds to the issue date. For Options, it specifies the date from which an option can be exercised. The option style is used in functions to distinguish between European and American Options.\r\nIf necessary, information on an Issue, particularly if it is in the future or if it is partial, can be stored in an Issue_or_Redemption Event."
        },
        "capTaxRateP" : {
          "type" : "number",
          "description" : "Specifies the amount of capital gains applied to a position in this security."
        },
        "code" : {
          "type" : "string",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc."
        },
        "complexityF" : {
          "type" : "boolean",
          "description" : "This field is used to specify the complexity of an instrument. \r\nIt could be initialised by a default value based on other attributes of the instruments such as the nature, the risk-nature, the currency, the market..."
        },
        "contractNatE" : {
          "type" : "string",
          "description" : "Specifies the default characteristics of a Futures contract for calculating conversion factors.",
          "enum" : [ "<None>", "CBOT futures 2 yr & 5 yr notes", "LIFFE long gilt contract", "MATIF French bond contract", "TSE Japanese bond contract", "LIFFE bond contract", "LIFFE Italian BTP contract", "Montreal Canadian contract", "MEFF Spanish 10 yr contract", "MEFF Spanish 3 yr contract", "LIFFE Spanish Bono contract", "CBOT fut. US bond & 10 yr note" ]
        },
        "contractNatE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute contractNatE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "contractSizeN" : {
          "type" : "number",
          "description" : "The size of one contract. The general practice in option dealing is to trade contracts that cover a fixed quantity of underlying instruments, e.g. 3 option contracts to buy 100 IBM stock at 145 USD. The quantity for the above example is stored in the database as 300. The contract size is 100. The quantity displayed or entered by the user is 3 (quantity/contract size). \r\nThe default value is 1."
        },
        "cutoffFixTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time between 00:00 and 23:59"
        },
        "cutoffTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Cut-off time is the deadline mutual fund company sets for investors to enter orders on this fund. \r\nWhen trade occurs after this time, the fund will be based on another net asset value.\r\nThe time format must be 24h. Example, enter 14:30 for 2:30 pm."
        },
        "cutoffTimezoneCode" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "cutoffTimezoneName" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence (see the documentation on the multi-lingual features for information on changing languages)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date at which the Instrument ceases to exist. In theory, there must be no positions in this Instrument after the end date. In practice, however, due to possible administrative or financial delays, this may not always be the case. This field is not mandatory but if completed it must be greater than or equal to the Begin Date."
        },
        "exerQuoteN" : {
          "type" : "number",
          "description" : "Identifies the exercise quote (strike) applicable to the underlying instrument when the redemption quote is applicable to the instrument. It is used for structured products that embed terms and conditions relative to an underlying with a strike.\r\n\r\nApplicable for structured product definition management."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the instrument.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpoSubscriptionF" : {
          "type" : "boolean",
          "description" : "Indicator to show that the IPO subscriptions are possible in the instrument. It is determined by the way of comparing the current date and if it is later than the subscription begin date and earlier than the date specified as cut-off date for the IPO subscription. \r\n0=Indicates that the IPO subscription is not enabled for the instrument (current date earlier than subscription begin date or later than cut off date)\r\n1=Indicates that the IPO subscriptions are possible for the instrument(current date later than subscription begin date and earlier than cut off date)"
        },
        "extIsinSynC" : {
          "type" : "string",
          "description" : "ISIN\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIN code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_ISIN_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extLastPriceN" : {
          "type" : "number",
          "description" : "Last Price\r\n\r\nThis is the last price of the instrument based on the system date. The INSTR_PRICE() keyword is used to display the value.\r\n\r\nThis extended attribute cannot be edited by the user and requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). The attribute is used only for the Web Packaging."
        },
        "extOngoingIpoF" : {
          "type" : "boolean",
          "description" : "Indicator to show if the instrument, which came up with an IPO, is listed in the secondary market or not. \r\n0=Indicates that the IPO instrument is listed in the market (current date later than first dealing date)\r\n1=1.\tIndicates that the IPO instrument is not yet listed in the market (current date earlier than first dealing date)"
        },
        "extRatingC" : {
          "type" : "string",
          "description" : "Rating\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the rating of the instrument.\r\nThe definition of the rating's code, to be used, has to be set through the parameter DS_RATING_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSectorC" : {
          "type" : "string",
          "description" : "Sector\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIC code of the instrument's sector.\r\nThe definition of the sector's code, to be used, has to be set through the parameter DS_SECTOR_INSTRUMENT\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTelekursSynC" : {
          "type" : "string",
          "description" : "Telekurs\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the Telekurs code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_TELEKURS_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faceValueN" : {
          "type" : "number",
          "description" : "The smallest nominal value unit for a bond or face value of a share, expressed in the Currency of the Financial Instrument."
        },
        "firstCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Specifies the date at which the first coupon is paid."
        },
        "fixD" : {
          "type" : "string",
          "format" : "date",
          "description" : "For structured products, it is the date at which the underlying price is determined to define the pay off of the instrument depending on the terms and conditions. \r\n\r\nApplicable for structured product definition management."
        },
        "fundIncomeStyleE" : {
          "type" : "string",
          "description" : "Indicates, how earnings from the funds' constituents are handled by the fund management.",
          "enum" : [ "<None>", "Growth", "Dividend" ]
        },
        "fundIncomeStyleE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute fundIncomeStyleE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "interestRateP" : {
          "type" : "number",
          "description" : "The interest rate of income to be paid. The payment is always in the currency of the Instrument. This field is also used to indicate the nominal interest rate of a notional instrument (deliverable) that underlies a bond futures contract."
        },
        "issueQtyN" : {
          "type" : "number",
          "description" : "The actual number of Financial Instruments issued to the market.\r\nNote that this is NOT the amount traded on the market."
        },
        "issueQuoteN" : {
          "type" : "number",
          "description" : "Specifies the quote at which the instrument was issued."
        },
        "issuerThirdCode" : {
          "type" : "string",
          "description" : "Specifies the third party that issued the instrument."
        },
        "lastCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "For bonds, date at which the last coupon is paid."
        },
        "lastPriceN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "lastQuoteN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "marketThirdCode" : {
          "type" : "string",
          "description" : "Specifies the main market in which the instrument is quoted.\r\nThis market is used in the default process for retrieving prices."
        },
        "minTradeQtyN" : {
          "type" : "number",
          "description" : "The minimum quantity of an instrument that may be traded. This field may be used in conjunction with the odd lot quantity.\r\n\r\nFor example, for a particular instrument, the minimum trade size may be 5000 units (minimum trade quantity) and then available in increments of 1000 (odd lot) thereafter."
        },
        "minTradingAmtM" : {
          "type" : "number",
          "description" : "Defines the Minimum Trading Amount of an instrument below which trades are not executed at the market price."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "negociableF" : {
          "type" : "boolean",
          "description" : "Specifies if the instrument is directly negotiable or not, e.g. a notional bond or an instrument that is generated for risk exposure purposes may not be negotiable."
        },
        "oddLotQtyN" : {
          "type" : "number",
          "description" : "Minimum quantity of the instrument below which trades are not executed at the market price."
        },
        "optStyleE" : {
          "type" : "string",
          "description" : "Specifies when the Option can be exercised.",
          "enum" : [ "<None>", "American", "European", "Bermudan" ]
        },
        "optStyleE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute optStyleE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Specifies if the holder of an Option has the right to buy or sell the underlying.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "optionClassE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute optionClassE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "payFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "For Bonds, this field specifies the number of payment frequency units between two payments.\r\nFor Stocks and Fund Shares, specifies the frequency of dividend payments.\r\nFor Options, specifies the frequency. \r\nFor Rates whose subtype is set to Par yield, specifies the frequency of payoffs if the rate is a security with payoffs. Typically, this is used for rates that underly floating rate indexes, and CMT and CMS swaps where the underlying is a par yield rate of a 5-year Treasury."
        },
        "payFreqUnitE" : {
          "type" : "string",
          "description" : "Specifies the unit of the Payment Frequency.\r\nSee the description of the Payment Frequency attribute.\r\nThis attribute is complemented by the Frequency attribute that specifies the number of units, e.g. 1 week, 2 weeks, 4 months. The permitted values are:\r\n0. No periodicity\r\n4. Monthly\r\n5. Quarterly\r\n6. Semi-annually\r\n7. Annually",
          "enum" : [ "<None>", "Day", "Business Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "payFreqUnitE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute payFreqUnitE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioStatusE" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "portfolioThirdCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "priceCalcRuleE" : {
          "type" : "string",
          "description" : "Specifies the default method for obtaining the price from the quote of a financial instrument.",
          "enum" : [ "<None>", "Quote", "Quote/100", "Partially Paid Stocks", "Partially Paid Bonds", "Stocks Quoted in %", "Bonds Quoted in Unit", "Actuarial Yield", "Discount Rate", "Add-On Rate", "Quoted with AI", "Quoted in Unit with AI", "TCN", "Annualised Rate", "Quote Life", "Euro-Futures", "FRA", "Australian Future", "Part. Paid Bonds in Unit", "Part. Paid Stocks in Prct", "Price calculation Factor", "Discount Yield", "Basis Points", "Quote in Unit", "Australian Future (flexible)", "NPV", "Chilean Bond (TERA)", "Portfolio Specific Price" ]
        },
        "redempCodeE" : {
          "type" : "string",
          "description" : "Specifies if the Redemption data for this financial instrument is stored in the financial Instrument or the Issue_or_Redemption Events table.",
          "enum" : [ "Final Redemption in instrument", "Final Redm only in instrument", "All data in iss_redm_event" ]
        },
        "redempQuoteN" : {
          "type" : "number",
          "description" : "Market quotation of the exercise of a term contract expressed in a specific currency via a relationship. Can also be the market quotation of the redemption quote.\r\nNB. Default price calculation rule of the underlying financial instrument."
        },
        "refCurrCode" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "refCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "reinvestmentAllowedF" : {
          "type" : "boolean",
          "description" : "Indicates if the fund offers a choice for the investor to decide, whether the dividends of the fund should be paid out or re-invested.\r\nThis field can only be set for instrument with fund_income_style_e set to Dividend."
        },
        "riskCurrCode" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskGeoDenom" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskLevelN" : {
          "type" : "number",
          "description" : "This field is used in conjunction with the investment profile risk level in order to check whether the instrument does not excess the risk level tolerated by the investment profile."
        },
        "riskNatureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the risk incurred by this instrument. The general processing of instruments attempts to mirror an instrument with \"building block\" instruments whose risk nature is 1, 2, 3 or 4.",
          "enum" : [ "<None>", "Equity", "Interest", "Commodity", "Currency", "Hybrid", "Real Estate" ]
        },
        "riskNatureE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute riskNatureE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "roundLotAmtM" : {
          "type" : "number",
          "description" : "Defines the Round Lot Amount of an instrument that may be traded. This field may be used in conjunction with Minimum Trading Amount. \r\n\r\nFor example, the minimum Trading Amount can be 5000 EUR for a particular instrument and then, available only in increments of 1000 EUR (Round Lot Amount) thereafter."
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        },
        "subNatE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute subNatE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "switchOrderAmtF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in amount"
        },
        "switchOrderPercF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in percentage"
        },
        "switchOrderUnitF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in units"
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxGeoName" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxRateP" : {
          "type" : "number",
          "description" : "Specifies the withholding tax applied in the payment of a coupon or dividend."
        },
        "tickSizeN" : {
          "type" : "number",
          "description" : "Specifies the valid increment or decrement in the price of a financial instrument. The tick size amount can be defined using the script language if it is part of a more complex calculation."
        },
        "tradeNatureE" : {
          "type" : "string",
          "description" : "Specifies the Instrument Trade Nature.\r\n\r\nIt is useful for users who want to buy an instrument in the denomination of \"Amount\" (e.g., 1,000 EUR, 2,000 EUR, etc.)\r\n\r\nPermitted values (Nature) - Name:\r\n- 0 = <Default>\r\n- 1 = Quantity\r\n- 2 = Amount",
          "enum" : [ "default", "quantity", "amount" ]
        },
        "tradeNatureE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute tradeNatureE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrName" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrNatureE" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "usageNatureE" : {
          "type" : "string",
          "description" : "To specify usage nature that is applied for the instrument. Instrument usage can be listed, unlisted instrument or OTC instrument template. Default value is listed instrument.",
          "enum" : [ "None", "Unlisted Instrument", "Structured Notes Template", "OTC Derivatives Template", "Structured Product Template", "OTC Currency Derivatives Template", "Fiduciary Deposit Template", "Term Deposit Template" ]
        },
        "valRuleE" : {
          "type" : "string",
          "description" : "Specifies if and how this Financial Instrument is evaluated. If not quoted, the LAST PRICE DATE is null.",
          "enum" : [ "Quoted", "Price=0", "Price=1", "Composite", "Theoretical", "Reference Instrument", "Script", "Parent Price", "Simple Script" ]
        },
        "wrapEligibleF" : {
          "type" : "boolean",
          "description" : "This field indicates if the instrument is eligible for wrap services. \r\n\r\nWrap service is a means of consolidating various fees (administrative expenses, management expenses, commissions for trading, investment advice etc.,) into a single fee for all the services provided. \r\n\r\nAn instrument eligible for a wrap service implies that the various fees on that instrument can be wrapped into a single fee."
        }
      }
    },
    "Issuer" : {
      "type" : "object",
      "required" : [ "activeF", "code", "issuerF", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "issuerF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the issuer selection list."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "IssuerWithPermValues" : {
      "type" : "object",
      "required" : [ "activeF", "code", "issuerF", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "issuerF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the issuer selection list."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "Language" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence, as seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of a language."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of a language. It does not have to be unique."
        }
      }
    },
    "List" : {
      "type" : "object",
      "required" : [ "code", "dataSecuProfCode", "entityDictSqlname", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "entity of list"
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the list\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "queryDefinition" : {
          "type" : "string",
          "description" : "This attribute is only used for the Web packaging.\r\nThis Field contains the query definition used by the dynamic search."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        },
        "validityPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days after the last reconstruction of a constrained list according to constraint definition, for which the enumerated list is deemed valid.\r\n\r\nSpecial values:\r\nNULL - The list is rebuilt every time it is used\r\n0    - The list is rebuilt only if any object from one of the underlying entity (portfolio, instrument etc...) was modified. The system performs a check using all entities listed in the constraint definition.\r\n\r\nE.g. a portfolio group is defined as all portfolios managed by 'Smith' and with a reference currency equal to USD. For performance reasons this list instead of being systematically recomputed at request, is in fact stored as an enumerated list (although the definition is also associated to the list occurrence). Manager 'Smith' specifies however that the composition of the list should never be older than 7 days. When a request to use this list is made, the system checks that the last reconstruction date is not older than the current date less the validity period."
        }
      }
    },
    "ListWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "dataSecuProfCode", "entityDictSqlname", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "entity of list"
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the list\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "queryDefinition" : {
          "type" : "string",
          "description" : "This attribute is only used for the Web packaging.\r\nThis Field contains the query definition used by the dynamic search."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        },
        "validityPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days after the last reconstruction of a constrained list according to constraint definition, for which the enumerated list is deemed valid.\r\n\r\nSpecial values:\r\nNULL - The list is rebuilt every time it is used\r\n0    - The list is rebuilt only if any object from one of the underlying entity (portfolio, instrument etc...) was modified. The system performs a check using all entities listed in the constraint definition.\r\n\r\nE.g. a portfolio group is defined as all portfolios managed by 'Smith' and with a reference currency equal to USD. For performance reasons this list instead of being systematically recomputed at request, is in fact stored as an enumerated list (although the definition is also associated to the list occurrence). Manager 'Smith' specifies however that the composition of the list should never be older than 7 days. When a request to use this list is made, the system checks that the last reconstruction date is not older than the current date less the validity period."
        }
      }
    },
    "Manager" : {
      "type" : "object",
      "required" : [ "activeF", "code", "name", "wuiProfileE", "wuiRoleE" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Flag that indicates if a Manager is active or not."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier as seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, mainly used for reporting purpose.\r\nThis optional information is used as a default when there is no related occurrence in the 'denomination' table in a required language."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address (optional) of the manager."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the manager.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This information does not have to be unique."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Phone number of a manager."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier referencing one user occurrence.\r\nThe association with a user applies to the Web User Interface.\r\nThe associated user should be declared as a WUI user."
        },
        "wuiProfileE" : {
          "type" : "string",
          "description" : "This field holds information on the manager profile for the Triple'A Web User Interface (i.e. which screens he has access to). We deliver a few standard profiles (some of which are only used within the Advisor context).",
          "enum" : [ "Default", "RelationshipManager", "MarketingOfficer", "FinancialAnalyst", "Developer", "CdmSo", "PmAdmin", "RetailManager", "Audit", "Admin", "PortfolioManagerForT24", "PortfolioManager" ]
        },
        "wuiRoleE" : {
          "type" : "string",
          "description" : "This flied hold information on the manager profile for the Triple'A Web User Interface (i.e. what action he can do). We deliver in standard two roles (used only within the Advisor context).",
          "enum" : [ "Assistant", "HeadManager", "RlsAdmin", "AlertAdmin" ]
        }
      }
    },
    "ManagerWithPermValues" : {
      "type" : "object",
      "required" : [ "activeF", "code", "name", "wuiProfileE", "wuiRoleE" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Flag that indicates if a Manager is active or not."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier as seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, mainly used for reporting purpose.\r\nThis optional information is used as a default when there is no related occurrence in the 'denomination' table in a required language."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address (optional) of the manager."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the manager.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This information does not have to be unique."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Phone number of a manager."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier referencing one user occurrence.\r\nThe association with a user applies to the Web User Interface.\r\nThe associated user should be declared as a WUI user."
        },
        "wuiProfileE" : {
          "type" : "string",
          "description" : "This field holds information on the manager profile for the Triple'A Web User Interface (i.e. which screens he has access to). We deliver a few standard profiles (some of which are only used within the Advisor context).",
          "enum" : [ "Default", "RelationshipManager", "MarketingOfficer", "FinancialAnalyst", "Developer", "CdmSo", "PmAdmin", "RetailManager", "Audit", "Admin", "PortfolioManagerForT24", "PortfolioManager" ]
        },
        "wuiRoleE" : {
          "type" : "string",
          "description" : "This flied hold information on the manager profile for the Triple'A Web User Interface (i.e. what action he can do). We deliver in standard two roles (used only within the Advisor context).",
          "enum" : [ "Assistant", "HeadManager", "RlsAdmin", "AlertAdmin" ]
        }
      }
    },
    "MarketSegment" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "Long name of a market segment. Used for reporting purpose."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the market segment.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurence."
        }
      }
    },
    "MarketSegmentWithPermValues" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "Long name of a market segment. Used for reporting purpose."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the market segment.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurence."
        }
      }
    },
    "MessageResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string",
          "enum" : [ "WARNING", "ERROR", "INFO" ]
        },
        "message" : {
          "type" : "string"
        }
      },
      "title" : "MessageResponse"
    },
    "ModelConstraint" : {
      "type" : "object",
      "required" : [ "beginD", "compositeF", "criticalnessE", "natureE", "portObject", "portfolioCode", "portfolioName", "rightToRunF", "roundUnitE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This date tells when the constraint begins to apply."
        },
        "compositeF" : {
          "type" : "boolean",
          "description" : "Tells if a constraint portfolio should be put out of its composite because of the constraint"
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates to which type of object the constraint set applies.\r\n\r\nThe permitted values, which correspond to entities defined in the 'meta-dictionnary', are:\r\n\r\n- Portfolio\r\n- Portfolio List\r\n\r\nPlease note that the value Portfolio List is only used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Tells when the constraints stops to be active."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (set).\r\nDenomination is displayed in user's language, but if it is not available then the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (set) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (set) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (set) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastConstraintD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The last date when the constraint was modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxConstrainedGridN" : {
          "type" : "number",
          "description" : "Not Used."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the modelling constraint. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of a Portfolio or a List of Portfolios.\r\n\r\nThis field contains the ID of an occurrence in the table defined by the 'dim_port_dict_id' field (if not NULL).\r\n\r\nPlease note that a Portfolio List can only be used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roundUnitE" : {
          "type" : "string",
          "description" : "Not Used.",
          "enum" : [ "<None>", "0.001", "0.005", "0.01", "0.05", "0.1", "0.5", "1", "5", "10" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "ModelConstraintElement" : {
      "type" : "object",
      "required" : [ "applicationFieldE", "constrBoundNatE", "constrTreatE", "creationModeE", "criticalnessE", "fixedCellF", "ignoreMarginF", "instrumentCode", "modelConstraintId", "natureE", "rightToRunF", "tradingOrderNatE" ],
      "properties" : {
        "applicationFieldE" : {
          "type" : "string",
          "description" : "For constraints defined on a list of instruments, this field indicates whether the constraint applies to each instrument of the list taken individually or whether the constrains applyy to the sum of the instrument contained in the list.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Single Instrument", "Sum of Instruments" ]
        },
        "calcMaxWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the maximum weight in per cent for the given constraint. If this weight is equal to y, you will have the constraint \"<= y %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "calcMinWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the minimum weight in per cent for the given constraint. If this weight is equal to x, you will have the constraint \">= x %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundCurrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For constraints in Amount (constr_bound_nat_e = 1) the field indicates the currency in which the amount is expressed.\r\n\r\nPlease note that this attribute is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundNatE" : {
          "type" : "string",
          "description" : "Indicates the unit value in which min_weight_n and max_weight_n are expressed.\r\n\r\nPlease note that some bound natures are only used in the context of Odyssey Components Suite and have no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Amount", "Percentage", "Quantity" ]
        },
        "constrNatE" : {
          "type" : "string",
          "description" : "Calculated attribute containing the constraint nature.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "constrTreatE" : {
          "type" : "string",
          "description" : "Indicates how the constraint has to be handled by the derivation process.\r\nUncovered Out Locking. A mandatory Security Out constraint is defined for a portfolio that does not hold the quantity in the constraint. This exception is not raised if the constraint processing has been set to optional.",
          "enum" : [ "<None>", "Mandatory", "Optional", "Check Only" ]
        },
        "creationModeE" : {
          "type" : "string",
          "description" : "This attribute is used to define how the modelling constraint (element) was created.",
          "enum" : [ "Triple A", "Dynamic" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "That field can be used to enter text information. For example you can describe the meaning of the constraint."
        },
        "dimInstrDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it tells whether the constraint element applies to a list of instruments or to a single instrument."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date specifying the end of validity of the modelling constraint element."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (element).\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (element) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (element) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (element) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fixedCellF" : {
          "type" : "boolean",
          "description" : "This field only applies to modelling constraints of nature Allocation.\r\nIf it is set to 'yes' it means that the derived weight should be equal to the weight of the asset allocation.\r\n\r\nIt is important to note that, if this flag is set to 1 (yes), you cannot define minimum or maximum weights."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "ignoreMarginF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Fluctuation Margin is ignored or not"
        },
        "instrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the list of instruments or the instrument to which the constraint element applies."
        },
        "instrumentCode" : {
          "type" : "string",
          "description" : "In the case of an element associated to a single instrument that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the instrument to which the constraint element is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For Modelling Constraint of nature Allocation: information to which market segment the constraint applies."
        },
        "maxWeightN" : {
          "type" : "number",
          "description" : "Indicates the maximum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to y, you will have the constraint <= y \"constr_bound_nat_e\".\r\n\r\nSee also min_weight_n anf fixed_cell_f."
        },
        "minWeightN" : {
          "type" : "number",
          "description" : "Indicates the minimum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to x, you will have the constraint >= x \"constr_bound_nat_e\".\r\n\r\nSee also max_weight_n anf fixed_cell_f."
        },
        "modelConstraintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the modelling constraint (set) to which the element is attached."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the type of constraint we are dealing with.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the priority with which the constraint has to be treated. Smallest values are treated first.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "tradingOrderNatE" : {
          "type" : "string",
          "description" : "Indicates the operation natures to which a Trading constraint applies.\r\n\r\nPlease note that this field only applies to modelling constraints of nature Trading in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Buy", "Sell", "Buy / Sell" ]
        }
      }
    },
    "ModelConstraintElementWithPermValues" : {
      "type" : "object",
      "required" : [ "applicationFieldE", "constrBoundNatE", "constrTreatE", "creationModeE", "criticalnessE", "fixedCellF", "ignoreMarginF", "instrumentCode", "modelConstraintId", "natureE", "rightToRunF", "tradingOrderNatE" ],
      "properties" : {
        "applicationFieldE" : {
          "type" : "string",
          "description" : "For constraints defined on a list of instruments, this field indicates whether the constraint applies to each instrument of the list taken individually or whether the constrains applyy to the sum of the instrument contained in the list.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Single Instrument", "Sum of Instruments" ]
        },
        "calcMaxWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the maximum weight in per cent for the given constraint. If this weight is equal to y, you will have the constraint \"<= y %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "calcMinWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the minimum weight in per cent for the given constraint. If this weight is equal to x, you will have the constraint \">= x %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundCurrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For constraints in Amount (constr_bound_nat_e = 1) the field indicates the currency in which the amount is expressed.\r\n\r\nPlease note that this attribute is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundNatE" : {
          "type" : "string",
          "description" : "Indicates the unit value in which min_weight_n and max_weight_n are expressed.\r\n\r\nPlease note that some bound natures are only used in the context of Odyssey Components Suite and have no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Amount", "Percentage", "Quantity" ]
        },
        "constrBoundNatE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute constrBoundNatE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "constrNatE" : {
          "type" : "string",
          "description" : "Calculated attribute containing the constraint nature.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "constrTreatE" : {
          "type" : "string",
          "description" : "Indicates how the constraint has to be handled by the derivation process.\r\nUncovered Out Locking. A mandatory Security Out constraint is defined for a portfolio that does not hold the quantity in the constraint. This exception is not raised if the constraint processing has been set to optional.",
          "enum" : [ "<None>", "Mandatory", "Optional", "Check Only" ]
        },
        "constrTreatE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute constrTreatE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "creationModeE" : {
          "type" : "string",
          "description" : "This attribute is used to define how the modelling constraint (element) was created.",
          "enum" : [ "Triple A", "Dynamic" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "criticalnessE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute criticalnessE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "denom" : {
          "type" : "string",
          "description" : "That field can be used to enter text information. For example you can describe the meaning of the constraint."
        },
        "dimInstrDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it tells whether the constraint element applies to a list of instruments or to a single instrument."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date specifying the end of validity of the modelling constraint element."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (element).\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (element) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (element) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (element) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fixedCellF" : {
          "type" : "boolean",
          "description" : "This field only applies to modelling constraints of nature Allocation.\r\nIf it is set to 'yes' it means that the derived weight should be equal to the weight of the asset allocation.\r\n\r\nIt is important to note that, if this flag is set to 1 (yes), you cannot define minimum or maximum weights."
        },
        "fixedCellF_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute fixedCellF",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "ignoreMarginF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Fluctuation Margin is ignored or not"
        },
        "instrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the list of instruments or the instrument to which the constraint element applies."
        },
        "instrumentCode" : {
          "type" : "string",
          "description" : "In the case of an element associated to a single instrument that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the instrument to which the constraint element is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For Modelling Constraint of nature Allocation: information to which market segment the constraint applies."
        },
        "maxWeightN" : {
          "type" : "number",
          "description" : "Indicates the maximum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to y, you will have the constraint <= y \"constr_bound_nat_e\".\r\n\r\nSee also min_weight_n anf fixed_cell_f."
        },
        "minWeightN" : {
          "type" : "number",
          "description" : "Indicates the minimum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to x, you will have the constraint >= x \"constr_bound_nat_e\".\r\n\r\nSee also max_weight_n anf fixed_cell_f."
        },
        "modelConstraintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the modelling constraint (set) to which the element is attached."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the type of constraint we are dealing with.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the priority with which the constraint has to be treated. Smallest values are treated first.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "tradingOrderNatE" : {
          "type" : "string",
          "description" : "Indicates the operation natures to which a Trading constraint applies.\r\n\r\nPlease note that this field only applies to modelling constraints of nature Trading in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Buy", "Sell", "Buy / Sell" ]
        }
      }
    },
    "ModelConstraintWithPermValues" : {
      "type" : "object",
      "required" : [ "beginD", "compositeF", "criticalnessE", "natureE", "portObject", "portfolioCode", "portfolioName", "rightToRunF", "roundUnitE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This date tells when the constraint begins to apply."
        },
        "compositeF" : {
          "type" : "boolean",
          "description" : "Tells if a constraint portfolio should be put out of its composite because of the constraint"
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates to which type of object the constraint set applies.\r\n\r\nThe permitted values, which correspond to entities defined in the 'meta-dictionnary', are:\r\n\r\n- Portfolio\r\n- Portfolio List\r\n\r\nPlease note that the value Portfolio List is only used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Tells when the constraints stops to be active."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (set).\r\nDenomination is displayed in user's language, but if it is not available then the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (set) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (set) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (set) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastConstraintD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The last date when the constraint was modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxConstrainedGridN" : {
          "type" : "number",
          "description" : "Not Used."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the modelling constraint. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of a Portfolio or a List of Portfolios.\r\n\r\nThis field contains the ID of an occurrence in the table defined by the 'dim_port_dict_id' field (if not NULL).\r\n\r\nPlease note that a Portfolio List can only be used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roundUnitE" : {
          "type" : "string",
          "description" : "Not Used.",
          "enum" : [ "<None>", "0.001", "0.005", "0.01", "0.05", "0.1", "0.5", "1", "5", "10" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "Notepad" : {
      "type" : "object",
      "required" : [ "entitySqlnameC", "noteD", "object", "typeCode", "userCode" ],
      "properties" : {
        "entitySqlnameC" : {
          "type" : "string",
          "description" : "Reference to the table, to which the object (or occurrence) belongs, a notepad is associated to. \r\nThe authorised entity types, in this case, are the following: \r\nacc_plan, currency, deposit, format, format_element, ft_convention, ft_rate, ft_rate_history, geographic, instrument, list, manager, model_constr_elt, model_constraint, portfolio, sector, standing_instruction, strategy, strategy_history, third_party, trading_constraint, val_rule, val_rule_element"
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "noteC" : {
          "type" : "string",
          "description" : "Text of a notepad."
        },
        "noteD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time when the note was entered."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the occurrence to which a notepad is associated. This object belongs to the table referenced by its 'entity_dict_id'."
        },
        "titleC" : {
          "type" : "string",
          "description" : "Title of the notepad.\r\nUsed for selection purposes."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a notepad."
        },
        "userCode" : {
          "type" : "string",
          "description" : "Reference to the user who is the issuer of a notepad."
        }
      }
    },
    "NotepadWithPermValues" : {
      "type" : "object",
      "required" : [ "entitySqlnameC", "noteD", "object", "typeCode", "userCode" ],
      "properties" : {
        "entitySqlnameC" : {
          "type" : "string",
          "description" : "Reference to the table, to which the object (or occurrence) belongs, a notepad is associated to. \r\nThe authorised entity types, in this case, are the following: \r\nacc_plan, currency, deposit, format, format_element, ft_convention, ft_rate, ft_rate_history, geographic, instrument, list, manager, model_constr_elt, model_constraint, portfolio, sector, standing_instruction, strategy, strategy_history, third_party, trading_constraint, val_rule, val_rule_element"
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "noteC" : {
          "type" : "string",
          "description" : "Text of a notepad."
        },
        "noteD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time when the note was entered."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the occurrence to which a notepad is associated. This object belongs to the table referenced by its 'entity_dict_id'."
        },
        "titleC" : {
          "type" : "string",
          "description" : "Title of the notepad.\r\nUsed for selection purposes."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a notepad."
        },
        "userCode" : {
          "type" : "string",
          "description" : "Reference to the user who is the issuer of a notepad."
        }
      }
    },
    "Pagination" : {
      "type" : "object",
      "properties" : {
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        },
        "token" : {
          "type" : "string",
          "description" : "token used by server"
        }
      },
      "title" : "Pagination"
    },
    "Portfolio" : {
      "type" : "object",
      "required" : [ "activeF", "adminMgrName", "code", "commMgrCode", "commMgrName", "currencyCode", "currentWithdreqStatusE", "languageCode", "lastRebalancingStatusE", "name", "serviceTypeE", "statusE", "taxLotMngtE", "thirdCode", "thirdName" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Specifies whether the portfolio is active or not. This information is used in the Portfolio Selection screen which, by default, only proposes the active portfolios to the user."
        },
        "adminMgrName" : {
          "type" : "string",
          "description" : "Reference to the administrative manager of a portfolio."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory."
        },
        "commMgrCode" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "commMgrName" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to the currency of the portfolio."
        },
        "currentWithdreqStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the current withdrawal request for the selected portfolio. It can be used by front-ends to show this information, by automatic rebalancing batches to avoid rebalancing portfolio with pending or failed requests and for defining alerts.",
          "enum" : [ "No Pending Request", "Partial Withdrawal Pending", "Full Liquidation Pending", "Partial Withdrawal Failed", "Full Liquidation Failed", "Full Liquidation Completed" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Portfolio denomination (not necessarily unique). This field is optional."
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is is a business indicator used on the portfolio dashboard. If the cash percentage in the portfolio is greater than a defined threshold, the indicator is set 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_CASH_PERCENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Not Constraints Compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the constraints are not compliant.\r\nWith Case Management: Set if the constraints are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. \r\nIf the number of days since the last operation ext_days_operation is higher than a defined threshold, the value is set to 1.\r\nThe threshold is defined with the parameter DS_DBOARD_PTF_DAYS_OPERATION.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiGoalNotCompliant" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates if the goal based portfolio is compliant with its objective or not.\r\nEquals to 1 if the goal is a risk, 0 otherwise."
        },
        "extBiInvalidIp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the portfolio investment profile is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiIpPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the investment profile review of the portfolio is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. If the market value change defined by ext_change_mkt_val_p has dropped below a defined threshold, the value is set to 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_MKT_VAL_DROP.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives Not Met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the objectives are not met.\r\nWith Case Management: Set if the objectives are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiReturn" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Return Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. It is, in fact, the same value as ext_ptf_threshold. A new format element has been created to clearly indicate that a dashboard indicator exists for this variable.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Percentage of Cash\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the percentage of cash, related to the portfolio's current market value, less the advances in cash.\r\nThe definition of cash is available in a constrained list on instruments (PCK_DS_CASH), which is set through the parameter DS_QUERY_LIQUIDITY.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Variation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the variation, in percentage, between the portfolio's current market value and its market value one year ago, related to the market value one year ago.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the date of the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt idicates the number of days between the current date and the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the portfolio.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extGoalComplianceStatusE" : {
          "type" : "string",
          "description" : "This attribute defines the compliance status of a goal based portfolio and can have the following permitted values:\r\n0 â€“ None \r\n1 â€“ On track, the goal based portfolio is on track based on its objective and time horizon. \r\n2 â€“ At risk, the goal based portfolio is at risk and may not achieve its objective in the defined time horizon.\r\n3 â€“ Completed, the goal based portfolio is completed.",
          "enum" : [ "None", "On track", "At risk", "Completed" ]
        },
        "extInvestProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute indicates the investment profile currently linked to the portfolio via a strategy link. If no investment profile is currently linked to the portfolio then this attribute's value will be empty.\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no investment profile defined yet\r\n2 â€“ Valid, the current investment profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current investment profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extIpExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current investment profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpName" : {
          "type" : "string",
          "description" : "Investment Profile Name\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the name of the investment profile containing the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpRiskLevelN" : {
          "type" : "number",
          "description" : "Indicates the investment profile risk level; the risk level of the investment profile that contains the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty. (See also ext_ip_name.)\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extIpRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non-compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extObjMeanDiff" : {
          "type" : "number",
          "description" : "Strategy Deviation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the medium values of all differences between the actual weight and the objective's weight with its margins of all investment structure elements (positions and market segments).\r\nA complete explanation of the computation can be found in section Strategy Deviation Computation of the Triple'A Plus Web Packaging Reference Guide\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extOneYearPtfRet" : {
          "type" : "number",
          "description" : "Portfolio return over the last 12 months\r\n\r\nThis is the return of the portfolio over the last 12 months (with adaptation to month end).\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extOpenOrders" : {
          "type" : "boolean",
          "description" : "Indicates whether orders are pending on the market for this portfolio. Orders are considered to be pending in the market if their status is between (including) the values as defined in the system parameters SYS_OPSTATUS_SENT and SYS_OPSTATUS_EXECUTED.\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide)."
        },
        "extOverUnderPerf" : {
          "type" : "number",
          "description" : "Ptf/Bench Over/Under Performance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the portfolio's return and its benchmark's return, if benchmark's return is available.\r\n\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPlPercent" : {
          "type" : "number",
          "description" : "Portfolio P&L (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the market value and the cost value of the portfolio, expressed in percentage of cost value.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfCur" : {
          "type" : "string",
          "description" : "Portfolio Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the portfolio's currency, which is a synonym's value. If it is not available, the portfolio's currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfHierLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). It defines the hierarchy level of the portfolio.\r\n\r\nThis attribute is used only for the Web Packaging.\r\n\r\nPossible values are:\r\n0 - Parent and not child\r\n1 - Parent and child\r\n2 - Not parent, but child\r\n3 - Not parent and not child"
        },
        "extRedemEndD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Fixed Income nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD2" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Derivative nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD3" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Money Market nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD4" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Forwards nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the portfolio in system currency.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extYtdPtfReturn" : {
          "type" : "number",
          "description" : "Portfolio year-to-date return\r\n\r\nThis is the return of the portfolio since the beginning of the year up to the current day.\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. The possible values are set by OAMS and cannot be modified."
        },
        "lastRebalancingD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date the portfolio was rebalanced."
        },
        "lastRebalancingStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the last rebalancing performed on the portfolio. It can contain either the last automatic rebalancing (batch) or manual process. However, for manual processes, only rebalancing performed with the publishing option is automatically handled. Otherwise, each front-end has the responsability to make this attribute up-to-date.",
          "enum" : [ "<None>", "Pending", "Completed", "Failed" ]
        },
        "managTypeExtDenomination" : {
          "type" : "string",
          "description" : "Management Type"
        },
        "mgtBeginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Management begin date (for information purposes only)."
        },
        "name" : {
          "type" : "string",
          "description" : "Portfolio name (not necessarily unique). This field is mandatory."
        },
        "parentPortId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the parent portfolio. This reference makes it possible to define a hierarchy of portfolios. To include a hierarchy when you use the financial functions, select the No Hierarchy checkbox on the Domain screen's Parameters tab. The checkbox label changes to Load Hierarchy, indicating that the hierarchy, if there is one, will be loaded."
        },
        "serviceTypeE" : {
          "type" : "string",
          "description" : "This field is used to specify the portfolio service type, meaning the manner a portfolio is managed by the bank (which services are provided).\r\n\r\nThis data is used in front-ends including in each input control applied in a context of a Suitability and Appropriateness tests.",
          "enum" : [ "<None>", "Discretionary", "Advisory", "Execution only", "Others", "Robo-advisor", "Goal-based" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the portfolio.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "taxLotMngtE" : {
          "type" : "string",
          "description" : "Specifies if tax lot are managed on the portfolio.\r\nNot yet implemented.",
          "enum" : [ "No", "Yes" ]
        },
        "thirdCode" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "thirdName" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Reference to the type of the portfolio."
        }
      }
    },
    "PortfolioList" : {
      "type" : "object",
      "required" : [ "code", "currencyCode", "dataSecuProfCode", "entityDictSqlname", "masterOnlyF", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to a currency.\r\nThis reference is useful for portfolio list where it can be used to determine the default currency used to perform a financial function (e.g. a valuation)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Dict Entity of List"
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "masterOnlyF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt determines if the list composition is to be shared by all business entities vs. being specific to each one. The system expects to find the composition of â€œMaster onlyâ€� list defined once; in the master business entity. Other lists that are not â€œMaster onlyâ€� have their compositions defined in each business entity.\r\nPlease note that list of portfolio cannot be master only in the multi-entity context. No portfolio can be defined in master."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        }
      }
    },
    "PortfolioListCompo" : {
      "type" : "object",
      "required" : [ "entityDictSqlname", "listCode", "portfolioCode", "rankN" ],
      "properties" : {
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Reference to the type of object (entity_dict_id.sqlname_c) belonging to a list.\r\nThis reference has to be the same as the one defined in the corresponding list."
        },
        "listCode" : {
          "type" : "string",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of portfolio"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "PortfolioListCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "entityDictSqlname", "listCode", "portfolioCode", "rankN" ],
      "properties" : {
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Reference to the type of object (entity_dict_id.sqlname_c) belonging to a list.\r\nThis reference has to be the same as the one defined in the corresponding list."
        },
        "listCode" : {
          "type" : "string",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of portfolio"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "PortfolioListWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "currencyCode", "dataSecuProfCode", "entityDictSqlname", "masterOnlyF", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to a currency.\r\nThis reference is useful for portfolio list where it can be used to determine the default currency used to perform a financial function (e.g. a valuation)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Dict Entity of List"
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "masterOnlyF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt determines if the list composition is to be shared by all business entities vs. being specific to each one. The system expects to find the composition of â€œMaster onlyâ€� list defined once; in the master business entity. Other lists that are not â€œMaster onlyâ€� have their compositions defined in each business entity.\r\nPlease note that list of portfolio cannot be master only in the multi-entity context. No portfolio can be defined in master."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        }
      }
    },
    "PortfolioStrategyLink" : {
      "type" : "object",
      "required" : [ "beginD", "portfolioCode", "strategyCode", "strategyNatureE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin date of the link between an Object and a Strategy."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End Date of the link between an object and a strategy.\r\nNo NULL value can be inserted in this field. A NULL value, which means no end to the link between a strategy and an object, must be replaced by a date somewhen in the future."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "PortfolioStrategyLinkWithPermValues" : {
      "type" : "object",
      "required" : [ "beginD", "portfolioCode", "strategyCode", "strategyNatureE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin date of the link between an Object and a Strategy."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End Date of the link between an object and a strategy.\r\nNo NULL value can be inserted in this field. A NULL value, which means no end to the link between a strategy and an object, must be replaced by a date somewhen in the future."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "PortfolioWithPermValues" : {
      "type" : "object",
      "required" : [ "activeF", "adminMgrName", "code", "commMgrCode", "commMgrName", "currencyCode", "currentWithdreqStatusE", "languageCode", "lastRebalancingStatusE", "name", "serviceTypeE", "statusE", "taxLotMngtE", "thirdCode", "thirdName" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Specifies whether the portfolio is active or not. This information is used in the Portfolio Selection screen which, by default, only proposes the active portfolios to the user."
        },
        "adminMgrName" : {
          "type" : "string",
          "description" : "Reference to the administrative manager of a portfolio."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory."
        },
        "commMgrCode" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "commMgrName" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to the currency of the portfolio."
        },
        "currentWithdreqStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the current withdrawal request for the selected portfolio. It can be used by front-ends to show this information, by automatic rebalancing batches to avoid rebalancing portfolio with pending or failed requests and for defining alerts.",
          "enum" : [ "No Pending Request", "Partial Withdrawal Pending", "Full Liquidation Pending", "Partial Withdrawal Failed", "Full Liquidation Failed", "Full Liquidation Completed" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Portfolio denomination (not necessarily unique). This field is optional."
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is is a business indicator used on the portfolio dashboard. If the cash percentage in the portfolio is greater than a defined threshold, the indicator is set 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_CASH_PERCENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Not Constraints Compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the constraints are not compliant.\r\nWith Case Management: Set if the constraints are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. \r\nIf the number of days since the last operation ext_days_operation is higher than a defined threshold, the value is set to 1.\r\nThe threshold is defined with the parameter DS_DBOARD_PTF_DAYS_OPERATION.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiGoalNotCompliant" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates if the goal based portfolio is compliant with its objective or not.\r\nEquals to 1 if the goal is a risk, 0 otherwise."
        },
        "extBiInvalidIp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the portfolio investment profile is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiIpPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the investment profile review of the portfolio is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. If the market value change defined by ext_change_mkt_val_p has dropped below a defined threshold, the value is set to 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_MKT_VAL_DROP.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives Not Met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the objectives are not met.\r\nWith Case Management: Set if the objectives are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiReturn" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Return Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. It is, in fact, the same value as ext_ptf_threshold. A new format element has been created to clearly indicate that a dashboard indicator exists for this variable.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Percentage of Cash\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the percentage of cash, related to the portfolio's current market value, less the advances in cash.\r\nThe definition of cash is available in a constrained list on instruments (PCK_DS_CASH), which is set through the parameter DS_QUERY_LIQUIDITY.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Variation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the variation, in percentage, between the portfolio's current market value and its market value one year ago, related to the market value one year ago.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the date of the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt idicates the number of days between the current date and the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the portfolio.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extGoalComplianceStatusE" : {
          "type" : "string",
          "description" : "This attribute defines the compliance status of a goal based portfolio and can have the following permitted values:\r\n0 â€“ None \r\n1 â€“ On track, the goal based portfolio is on track based on its objective and time horizon. \r\n2 â€“ At risk, the goal based portfolio is at risk and may not achieve its objective in the defined time horizon.\r\n3 â€“ Completed, the goal based portfolio is completed.",
          "enum" : [ "None", "On track", "At risk", "Completed" ]
        },
        "extInvestProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute indicates the investment profile currently linked to the portfolio via a strategy link. If no investment profile is currently linked to the portfolio then this attribute's value will be empty.\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no investment profile defined yet\r\n2 â€“ Valid, the current investment profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current investment profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extIpExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current investment profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpName" : {
          "type" : "string",
          "description" : "Investment Profile Name\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the name of the investment profile containing the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpRiskLevelN" : {
          "type" : "number",
          "description" : "Indicates the investment profile risk level; the risk level of the investment profile that contains the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty. (See also ext_ip_name.)\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extIpRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non-compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extObjMeanDiff" : {
          "type" : "number",
          "description" : "Strategy Deviation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the medium values of all differences between the actual weight and the objective's weight with its margins of all investment structure elements (positions and market segments).\r\nA complete explanation of the computation can be found in section Strategy Deviation Computation of the Triple'A Plus Web Packaging Reference Guide\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extOneYearPtfRet" : {
          "type" : "number",
          "description" : "Portfolio return over the last 12 months\r\n\r\nThis is the return of the portfolio over the last 12 months (with adaptation to month end).\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extOpenOrders" : {
          "type" : "boolean",
          "description" : "Indicates whether orders are pending on the market for this portfolio. Orders are considered to be pending in the market if their status is between (including) the values as defined in the system parameters SYS_OPSTATUS_SENT and SYS_OPSTATUS_EXECUTED.\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide)."
        },
        "extOverUnderPerf" : {
          "type" : "number",
          "description" : "Ptf/Bench Over/Under Performance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the portfolio's return and its benchmark's return, if benchmark's return is available.\r\n\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPlPercent" : {
          "type" : "number",
          "description" : "Portfolio P&L (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the market value and the cost value of the portfolio, expressed in percentage of cost value.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfCur" : {
          "type" : "string",
          "description" : "Portfolio Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the portfolio's currency, which is a synonym's value. If it is not available, the portfolio's currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfHierLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). It defines the hierarchy level of the portfolio.\r\n\r\nThis attribute is used only for the Web Packaging.\r\n\r\nPossible values are:\r\n0 - Parent and not child\r\n1 - Parent and child\r\n2 - Not parent, but child\r\n3 - Not parent and not child"
        },
        "extRedemEndD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Fixed Income nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD2" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Derivative nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD3" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Money Market nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD4" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Forwards nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the portfolio in system currency.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extYtdPtfReturn" : {
          "type" : "number",
          "description" : "Portfolio year-to-date return\r\n\r\nThis is the return of the portfolio since the beginning of the year up to the current day.\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. The possible values are set by OAMS and cannot be modified."
        },
        "lastRebalancingD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date the portfolio was rebalanced."
        },
        "lastRebalancingStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the last rebalancing performed on the portfolio. It can contain either the last automatic rebalancing (batch) or manual process. However, for manual processes, only rebalancing performed with the publishing option is automatically handled. Otherwise, each front-end has the responsability to make this attribute up-to-date.",
          "enum" : [ "<None>", "Pending", "Completed", "Failed" ]
        },
        "managTypeExtDenomination" : {
          "type" : "string",
          "description" : "Management Type"
        },
        "mgtBeginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Management begin date (for information purposes only)."
        },
        "name" : {
          "type" : "string",
          "description" : "Portfolio name (not necessarily unique). This field is mandatory."
        },
        "parentPortId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the parent portfolio. This reference makes it possible to define a hierarchy of portfolios. To include a hierarchy when you use the financial functions, select the No Hierarchy checkbox on the Domain screen's Parameters tab. The checkbox label changes to Load Hierarchy, indicating that the hierarchy, if there is one, will be loaded."
        },
        "serviceTypeE" : {
          "type" : "string",
          "description" : "This field is used to specify the portfolio service type, meaning the manner a portfolio is managed by the bank (which services are provided).\r\n\r\nThis data is used in front-ends including in each input control applied in a context of a Suitability and Appropriateness tests.",
          "enum" : [ "<None>", "Discretionary", "Advisory", "Execution only", "Others", "Robo-advisor", "Goal-based" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the portfolio.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "taxLotMngtE" : {
          "type" : "string",
          "description" : "Specifies if tax lot are managed on the portfolio.\r\nNot yet implemented.",
          "enum" : [ "No", "Yes" ]
        },
        "thirdCode" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "thirdName" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Reference to the type of the portfolio."
        }
      }
    },
    "Rating" : {
      "type" : "object",
      "required" : [ "autocreatedF", "code", "codificationName", "rankN" ],
      "properties" : {
        "autocreatedF" : {
          "type" : "boolean",
          "description" : "Indicates whether an occurrence has been created automatically by Triple'A (autocreate_f = 1) or not (autocreate_f = 0). This automatic creation may happen through the batch interface programs. The default value is 0."
        },
        "code" : {
          "type" : "string",
          "description" : "Business identitfier of the occurrence in association with the codification."
        },
        "codificationId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "codification id used for this rating (e.g. S&P, Moody's,...)"
        },
        "codificationName" : {
          "type" : "string",
          "description" : "Indicates the codification used for this rating (e.g. S&P, Moody's,...)"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the importance of each rating within the codification. The highest rank is the best creditworthiness.\r\nE.g. AAA has rank 10\r\nAA has rank 9 ,...\r\n\r\nNote that this rank is not only used to order the ratings when displaying them. It is also used to compare ratings given by different codifications (e.g. BB of Standard & Poor's is equivalent to bb+ of Moody's). This information is also used in the \"Check Strategy\" function in the \"minimum ranking\" objectives."
        }
      }
    },
    "SearchBusinessEntityAddresses" : {
      "type" : "object",
      "required" : [ "addressC", "busEntityCode", "country", "typeCode", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e. carriage returns are authorised)."
        },
        "busEntityCode" : {
          "type" : "string",
          "description" : "Indicates to which business entity the address belongs."
        },
        "country" : {
          "type" : "string",
          "description" : "Indicates the country or area in which the address is situated."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity's address.\r\n\r\nAs mentionned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Indicates the type of the address. \r\nExamples: Fiscal address, Legal address, Correspondence address."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type of the address. \r\nExamples: Fiscal address, Legal address, Correspondence address."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to update the corresponding business entity's address.\r\n\r\nAs mentioned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        }
      }
    },
    "SearchBusinessEntityUserCompo" : {
      "type" : "object",
      "required" : [ "applUserCode", "applUserId", "busEntityCode", "busEntityName", "dataProfileCode", "defaultLoginF", "mainBusEntityF", "roleE", "typeCode" ],
      "properties" : {
        "applUserCode" : {
          "type" : "string",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "applUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "busEntityCode" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityDenom" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityName" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityThemeC" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "defaultLoginF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nA business entity sets as default login is used by the system when the linked user authenticates into the system by providing login and password. The system automatically assigns that business entity to the created connection.\r\nOnly one default login can be set between a user and a business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "mainBusEntityF" : {
          "type" : "boolean",
          "description" : "Specifies whether the business entity is the main business entity of the bank's employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user))."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Defines the role that the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) has in the business.",
          "enum" : [ "None", "Compliance", "Administration", "Management", "Advisor", "Manager", "Assistant", "Application User" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "References the type of business entity user composition."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the type of business entity user composition."
        }
      }
    },
    "SearchInstrument" : {
      "type" : "object",
      "required" : [ "code", "issuerThirdCode", "marketThirdCode", "name", "natureE", "optionClassE", "refCurrCode", "typeCode", "underlyInstrCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date at which the Instrument ceases to exist. In theory, there must be no positions in this Instrument after the end date. In practice, however, due to possible administrative or financial delays, this may not always be the case. This field is not mandatory but if completed it must be greater than or equal to the Begin Date."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the instrument.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIsinSynC" : {
          "type" : "string",
          "description" : "ISIN\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIN code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_ISIN_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "issuerThirdCode" : {
          "type" : "string",
          "description" : "Specifies the third party that issued the instrument."
        },
        "lastPriceN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "lastQuoteN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "marketThirdCode" : {
          "type" : "string",
          "description" : "Specifies the main market in which the instrument is quoted.\r\nThis market is used in the default process for retrieving prices."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Specifies if the holder of an Option has the right to buy or sell the underlying.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "refCurrCode" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        }
      }
    },
    "SearchInstrumentListCompo" : {
      "type" : "object",
      "required" : [ "entityDictSqlname", "instrumentCode", "listCode", "rankN" ],
      "properties" : {
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Reference to the type of object (entity_dict_id.sqlname_c) belonging to a list.\r\nThis reference has to be the same as the one defined in the corresponding list."
        },
        "instrumentCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of instrument"
        },
        "listCode" : {
          "type" : "string",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "SearchList" : {
      "type" : "object",
      "required" : [ "code", "dataSecuProfCode", "entityDictSqlname", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "entity of list"
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the list\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        },
        "validityPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days after the last reconstruction of a constrained list according to constraint definition, for which the enumerated list is deemed valid.\r\n\r\nSpecial values:\r\nNULL - The list is rebuilt every time it is used\r\n0    - The list is rebuilt only if any object from one of the underlying entity (portfolio, instrument etc...) was modified. The system performs a check using all entities listed in the constraint definition.\r\n\r\nE.g. a portfolio group is defined as all portfolios managed by 'Smith' and with a reference currency equal to USD. For performance reasons this list instead of being systematically recomputed at request, is in fact stored as an enumerated list (although the definition is also associated to the list occurrence). Manager 'Smith' specifies however that the composition of the list should never be older than 7 days. When a request to use this list is made, the system checks that the last reconstruction date is not older than the current date less the validity period."
        }
      }
    },
    "SearchNotepad" : {
      "type" : "object",
      "required" : [ "entitySqlnameC", "noteD", "object", "typeCode", "userCode" ],
      "properties" : {
        "entitySqlnameC" : {
          "type" : "string",
          "description" : "Reference to the table, to which the object (or occurrence) belongs, a notepad is associated to. \r\nThe authorised entity types, in this case, are the following: \r\nacc_plan, currency, deposit, format, format_element, ft_convention, ft_rate, ft_rate_history, geographic, instrument, list, manager, model_constr_elt, model_constraint, portfolio, sector, standing_instruction, strategy, strategy_history, third_party, trading_constraint, val_rule, val_rule_element"
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "noteC" : {
          "type" : "string",
          "description" : "Text of a notepad."
        },
        "noteD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time when the note was entered."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the occurrence to which a notepad is associated. This object belongs to the table referenced by its 'entity_dict_id'."
        },
        "titleC" : {
          "type" : "string",
          "description" : "Title of the notepad.\r\nUsed for selection purposes."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a notepad."
        },
        "userCode" : {
          "type" : "string",
          "description" : "Reference to the user who is the issuer of a notepad."
        }
      }
    },
    "SearchPortfolio" : {
      "type" : "object",
      "required" : [ "activeF", "adminMgrName", "code", "commMgrCode", "commMgrName", "currencyCode", "currentWithdreqStatusE", "languageCode", "lastRebalancingStatusE", "name", "serviceTypeE", "statusE", "taxLotMngtE", "thirdCode", "thirdName" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Specifies whether the portfolio is active or not. This information is used in the Portfolio Selection screen which, by default, only proposes the active portfolios to the user."
        },
        "adminMgrName" : {
          "type" : "string",
          "description" : "Reference to the administrative manager of a portfolio."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory."
        },
        "commMgrCode" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "commMgrName" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to the currency of the portfolio."
        },
        "currentWithdreqStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the current withdrawal request for the selected portfolio. It can be used by front-ends to show this information, by automatic rebalancing batches to avoid rebalancing portfolio with pending or failed requests and for defining alerts.",
          "enum" : [ "No Pending Request", "Partial Withdrawal Pending", "Full Liquidation Pending", "Partial Withdrawal Failed", "Full Liquidation Failed", "Full Liquidation Completed" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Portfolio denomination (not necessarily unique). This field is optional."
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is is a business indicator used on the portfolio dashboard. If the cash percentage in the portfolio is greater than a defined threshold, the indicator is set 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_CASH_PERCENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Not Constraints Compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the constraints are not compliant.\r\nWith Case Management: Set if the constraints are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. \r\nIf the number of days since the last operation ext_days_operation is higher than a defined threshold, the value is set to 1.\r\nThe threshold is defined with the parameter DS_DBOARD_PTF_DAYS_OPERATION.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiGoalNotCompliant" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates if the goal based portfolio is compliant with its objective or not.\r\nEquals to 1 if the goal is a risk, 0 otherwise."
        },
        "extBiInvalidIp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the portfolio investment profile is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiIpPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the investment profile review of the portfolio is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. If the market value change defined by ext_change_mkt_val_p has dropped below a defined threshold, the value is set to 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_MKT_VAL_DROP.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives Not Met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the objectives are not met.\r\nWith Case Management: Set if the objectives are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiReturn" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Return Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. It is, in fact, the same value as ext_ptf_threshold. A new format element has been created to clearly indicate that a dashboard indicator exists for this variable.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Percentage of Cash\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the percentage of cash, related to the portfolio's current market value, less the advances in cash.\r\nThe definition of cash is available in a constrained list on instruments (PCK_DS_CASH), which is set through the parameter DS_QUERY_LIQUIDITY.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Variation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the variation, in percentage, between the portfolio's current market value and its market value one year ago, related to the market value one year ago.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the date of the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt idicates the number of days between the current date and the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the portfolio.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extGoalComplianceStatusE" : {
          "type" : "string",
          "description" : "This attribute defines the compliance status of a goal based portfolio and can have the following permitted values:\r\n0 â€“ None \r\n1 â€“ On track, the goal based portfolio is on track based on its objective and time horizon. \r\n2 â€“ At risk, the goal based portfolio is at risk and may not achieve its objective in the defined time horizon.\r\n3 â€“ Completed, the goal based portfolio is completed.",
          "enum" : [ "None", "On track", "At risk", "Completed" ]
        },
        "extInvestProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute indicates the investment profile currently linked to the portfolio via a strategy link. If no investment profile is currently linked to the portfolio then this attribute's value will be empty.\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no investment profile defined yet\r\n2 â€“ Valid, the current investment profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current investment profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extIpExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current investment profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpName" : {
          "type" : "string",
          "description" : "Investment Profile Name\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the name of the investment profile containing the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpRiskLevelN" : {
          "type" : "number",
          "description" : "Indicates the investment profile risk level; the risk level of the investment profile that contains the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty. (See also ext_ip_name.)\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extIpRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non-compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extObjMeanDiff" : {
          "type" : "number",
          "description" : "Strategy Deviation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the medium values of all differences between the actual weight and the objective's weight with its margins of all investment structure elements (positions and market segments).\r\nA complete explanation of the computation can be found in section Strategy Deviation Computation of the Triple'A Plus Web Packaging Reference Guide\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extOneYearPtfRet" : {
          "type" : "number",
          "description" : "Portfolio return over the last 12 months\r\n\r\nThis is the return of the portfolio over the last 12 months (with adaptation to month end).\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extOpenOrders" : {
          "type" : "boolean",
          "description" : "Indicates whether orders are pending on the market for this portfolio. Orders are considered to be pending in the market if their status is between (including) the values as defined in the system parameters SYS_OPSTATUS_SENT and SYS_OPSTATUS_EXECUTED.\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide)."
        },
        "extOverUnderPerf" : {
          "type" : "number",
          "description" : "Ptf/Bench Over/Under Performance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the portfolio's return and its benchmark's return, if benchmark's return is available.\r\n\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPlPercent" : {
          "type" : "number",
          "description" : "Portfolio P&L (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the market value and the cost value of the portfolio, expressed in percentage of cost value.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfCur" : {
          "type" : "string",
          "description" : "Portfolio Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the portfolio's currency, which is a synonym's value. If it is not available, the portfolio's currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfHierLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). It defines the hierarchy level of the portfolio.\r\n\r\nThis attribute is used only for the Web Packaging.\r\n\r\nPossible values are:\r\n0 - Parent and not child\r\n1 - Parent and child\r\n2 - Not parent, but child\r\n3 - Not parent and not child"
        },
        "extRedemEndD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Fixed Income nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD2" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Derivative nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD3" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Money Market nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD4" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Forwards nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the portfolio in system currency.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extYtdPtfReturn" : {
          "type" : "number",
          "description" : "Portfolio year-to-date return\r\n\r\nThis is the return of the portfolio since the beginning of the year up to the current day.\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. The possible values are set by OAMS and cannot be modified."
        },
        "lastRebalancingD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date the portfolio was rebalanced."
        },
        "lastRebalancingStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the last rebalancing performed on the portfolio. It can contain either the last automatic rebalancing (batch) or manual process. However, for manual processes, only rebalancing performed with the publishing option is automatically handled. Otherwise, each front-end has the responsability to make this attribute up-to-date.",
          "enum" : [ "<None>", "Pending", "Completed", "Failed" ]
        },
        "managTypeExtDenomination" : {
          "type" : "string",
          "description" : "Management Type"
        },
        "mgtBeginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Management begin date (for information purposes only)."
        },
        "name" : {
          "type" : "string",
          "description" : "Portfolio name (not necessarily unique). This field is mandatory."
        },
        "parentPortId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the parent portfolio. This reference makes it possible to define a hierarchy of portfolios. To include a hierarchy when you use the financial functions, select the No Hierarchy checkbox on the Domain screen's Parameters tab. The checkbox label changes to Load Hierarchy, indicating that the hierarchy, if there is one, will be loaded."
        },
        "serviceTypeE" : {
          "type" : "string",
          "description" : "This field is used to specify the portfolio service type, meaning the manner a portfolio is managed by the bank (which services are provided).\r\n\r\nThis data is used in front-ends including in each input control applied in a context of a Suitability and Appropriateness tests.",
          "enum" : [ "<None>", "Discretionary", "Advisory", "Execution only", "Others", "Robo-advisor", "Goal-based" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the portfolio.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "taxLotMngtE" : {
          "type" : "string",
          "description" : "Specifies if tax lot are managed on the portfolio.\r\nNot yet implemented.",
          "enum" : [ "No", "Yes" ]
        },
        "thirdCode" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "thirdName" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Reference to the type of the portfolio."
        }
      }
    },
    "SearchPortfolioList" : {
      "type" : "object",
      "required" : [ "code", "currencyCode", "dataSecuProfCode", "entityDictSqlname", "masterOnlyF", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to a currency.\r\nThis reference is useful for portfolio list where it can be used to determine the default currency used to perform a financial function (e.g. a valuation)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Dict Entity of List"
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "masterOnlyF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt determines if the list composition is to be shared by all business entities vs. being specific to each one. The system expects to find the composition of â€œMaster onlyâ€� list defined once; in the master business entity. Other lists that are not â€œMaster onlyâ€� have their compositions defined in each business entity.\r\nPlease note that list of portfolio cannot be master only in the multi-entity context. No portfolio can be defined in master."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        }
      }
    },
    "SearchPortfolioListCompo" : {
      "type" : "object",
      "required" : [ "entityDictSqlname", "listCode", "portfolioCode", "rankN" ],
      "properties" : {
        "entityDictSqlname" : {
          "type" : "string",
          "description" : "Reference to the type of object (entity_dict_id.sqlname_c) belonging to a list.\r\nThis reference has to be the same as the one defined in the corresponding list."
        },
        "listCode" : {
          "type" : "string",
          "description" : "Reference to the list to which an occurrence of 'List Composition' necessarily belongs."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of portfolio"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "SearchRatingAttrib" : {
      "type" : "object",
      "required" : [ "codificationName", "ratingCode", "ratingCodificationCode", "ratingCodificationName", "ratingId" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates from which date on this specific rating is applicable. This date is part of the unique key in this table and allows to historise the ratings attributed to an occurrence."
        },
        "codificationId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the codification which necessarily characterises an occurrence of 'rating attribution'.\r\nThis codification must be a 'sector' codification.\r\nThere can be only on rating attribution attached to an occurrence per codification."
        },
        "codificationName" : {
          "type" : "string",
          "description" : "Reference to the codification which necessarily characterises an occurrence of 'rating attribution'.\r\nThis codification must be a 'sector' codification.\r\nThere can be only on rating attribution attached to an occurrence per codification."
        },
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the table containing the object the alert applies to.\r\nIt is is limited to Portfolio, Third Party (Client) and Instrument."
        },
        "externalSeqNo" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "External Sequence Number\r\nCan be used to ensure that messages from an external interface are processed in the right order"
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates to which third party or instrument the occurrence relates."
        },
        "ratingCode" : {
          "type" : "string",
          "description" : "Reference to the rating which is associated to an occurrence through a rating attribution.\r\nPlease note that this reference is not directly present as a foreign key in the Instrument/Third Party tables means that it is possible to associate several ratings to the same occurrence, provided that they are characterised by a different 'rating' codification (e.g. Moodys, S&P,...), and also to historise these rating attributions."
        },
        "ratingCodificationCode" : {
          "type" : "string",
          "description" : "Reference to the rating which is associated to an occurrence through a rating attribution.\r\nPlease note that this reference is not directly present as a foreign key in the Instrument/Third Party tables means that it is possible to associate several ratings to the same occurrence, provided that they are characterised by a different 'rating' codification (e.g. Moodys, S&P,...), and also to historise these rating attributions."
        },
        "ratingCodificationName" : {
          "type" : "string",
          "description" : "Reference to the rating which is associated to an occurrence through a rating attribution.\r\nPlease note that this reference is not directly present as a foreign key in the Instrument/Third Party tables means that it is possible to associate several ratings to the same occurrence, provided that they are characterised by a different 'rating' codification (e.g. Moodys, S&P,...), and also to historise these rating attributions."
        },
        "ratingId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the rating which is associated to an occurrence through a rating attribution.\r\nPlease note that this reference is not directly present as a foreign key in the Instrument/Third Party tables means that it is possible to associate several ratings to the same occurrence, provided that they are characterised by a different 'rating' codification (e.g. Moodys, S&P,...), and also to historise these rating attributions."
        }
      }
    },
    "SearchStrategy" : {
      "type" : "object",
      "required" : [ "benchFreqUnitE", "code", "complianceFreqUnitE", "criticalnessE", "irregularF", "name", "natureE", "relativeMarginF", "retDetLevE", "riskF", "subNatureE" ],
      "properties" : {
        "benchFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of unit of bench_freq_unit_e. See this attribute for more information."
        },
        "benchFreqUnitE" : {
          "type" : "string",
          "description" : "Used in conjunction with bench_freq_n, it indicates the \"logical\" rebalancing frequency, strating on the strat_rebal_d. This information is used during the Benchmark Storage process: if the frequency of rebalancing AND the strat_rebal_d are not void, the strategy will be rebalanced at regular dates, ie. the current physical weights are stored instead of the dynamic weight.\r\n\r\nExample : Benchmark Storage, on a monthly basis, starting on 31/12/01, ending on 31/03/02, with a strat_rebal_d=18/11/00 and logical frequency of 1 month, the storage will be done on the following dates :\r\n\r\n1. 31/12/01 - 18/01/02\r\n2. 18/01/02 - 31/01/02\r\n3. 31/01/02 - 18/02/02\r\n4. 18/02/02 - 28/02/02\r\n5. 28/02/02 - 18/03/02\r\n6. 18/03/02 - 31/03/02",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy natures such as 'allocation' or 'model portfolio'."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence as seen by the user."
        },
        "complianceFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the Risk Strategy required frequency update.\r\nThe compliance frequency unit is defined by day, week, month, quarter, semester, year."
        },
        "complianceFreqUnitE" : {
          "type" : "string",
          "description" : "The compliance frequency is defined as number of frequency unit.",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nusing Case Management Component, this value determines what are Cases that must be clarified.\r\n\r\nUsed for Asset Allocation, Model Portfolio and Constraint Set.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long Name for a strategy."
        },
        "dimGridDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "It allows you to assign a grid or a grid list to a strategy."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "Allows to specify for a model portfolio the global fluctuation margin that is applied to each financial instrument composing the model portfolio when  compared to the real portfolio."
        },
        "gridObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Allows users to assign a grid list or a grid to a strategy.\r\nMoreover, the user can assign a grid/grid list to model portfolios or recommendation lists. \r\nPlease refer to the Triple'A Orders and Productivity Guide for more details on this feature."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "invProfRiskLevelN" : {
          "type" : "number",
          "description" : "This field stores the level of the risk that the Investment Profile can take."
        },
        "irregularF" : {
          "type" : "boolean",
          "description" : "Benchmark Storage process definition flag. It indicates for a storage period whether only the current - at from date - strategy history weights are used for computation or any new strategy history weights found between the from date and the till date are taken into account."
        },
        "lastComplianceUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date on which the Risk Strategy has been updated."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastStoredBenchD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A non-editable date at which the instrument has been stored the last time. Update by the Benchmark Storage function process."
        },
        "lastUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last update of the strategy. For information only."
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a 'market segment'.\r\nA 'model portfolio' or a 'recommendation list' strategy may be restricted to a particular 'market segment'."
        },
        "name" : {
          "type" : "string",
          "description" : "Short Name for a strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'. \r\nFor more information please see the Orders and Productivity Guide, and the Performance Analysis Reference Guide.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        },
        "parentStrategyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Technical identifier for a strategy. This field is normally not seen by the user.\r\nThis relation allows to indicates that a strategy is a 'sub-strategy' of a strategy of a higher level.\r\nFor instance, an asset allocation may have one model per market segment as sub-strategy."
        },
        "relativeMarginF" : {
          "type" : "string",
          "description" : "It defines how Margins are computed.\r\n\r\nExample:\r\nConsider an Investment Profile (Asset Allocation, with an objective weight = 10% on Chemicals, and a Model Portfolio with two Instruments, 50% Novartis & 50% Roche). \r\nThe Fluctuation Margin is defined as equal as 1% into Model Portfolio.\r\n\r\nStock\r\n  Stock/CHF\r\n    Chemicals                  Objve: 10%\r\n       Novartis                        5%\r\n       Roche                           5%\r\n\r\nThe computation of Fluctuation Margin is as follows:\r\nAbsolute: 1% * 10% = +/- 0.10%\r\nRelative: 1% * 5% = +/- 0.05%\r\nUnweighted Absolute: +/- 1%.",
          "enum" : [ "Absolute", "Relative", "Unweighted absolute" ]
        },
        "retDetLevE" : {
          "type" : "string",
          "description" : "Benchmark Storage detail level:\r\n1. Global\r\n2. Grid\r\n3. Instrument",
          "enum" : [ "Global", "Grid", "Instrument", "Use PSP" ]
        },
        "riskF" : {
          "type" : "boolean",
          "description" : "Indicates whether a strategy is defined in term of risks exposure or not.\r\nThis information is used when comparing a portfolio to a strategy. If the flag is 'Yes', the 'risk exposure' valuation of the portfolio will be taken into account in the comparison process."
        },
        "stratRebalD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Benchmark Storage process definition date. Used in conjunction with bench_freq_n and bench_freq_unit_e. See this latter attribute for more information."
        },
        "subNatureE" : {
          "type" : "string",
          "description" : "A strategy sub-nature.",
          "enum" : [ "<None>", "Constant Weight", "Load Ratio", "Dummy Portfolio" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "Strategy" : {
      "type" : "object",
      "required" : [ "benchFreqUnitE", "code", "complianceFreqUnitE", "criticalnessE", "heartUploadE", "irregularF", "name", "natureE", "relativeMarginF", "retDetLevE", "rightToRunF", "riskF", "subNatureE" ],
      "properties" : {
        "benchFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of unit of bench_freq_unit_e. See this attribute for more information."
        },
        "benchFreqUnitE" : {
          "type" : "string",
          "description" : "Used in conjunction with bench_freq_n, it indicates the \"logical\" rebalancing frequency, strating on the strat_rebal_d. This information is used during the Benchmark Storage process: if the frequency of rebalancing AND the strat_rebal_d are not void, the strategy will be rebalanced at regular dates, ie. the current physical weights are stored instead of the dynamic weight.\r\n\r\nExample : Benchmark Storage, on a monthly basis, starting on 31/12/01, ending on 31/03/02, with a strat_rebal_d=18/11/00 and logical frequency of 1 month, the storage will be done on the following dates :\r\n\r\n1. 31/12/01 - 18/01/02\r\n2. 18/01/02 - 31/01/02\r\n3. 31/01/02 - 18/02/02\r\n4. 18/02/02 - 28/02/02\r\n5. 28/02/02 - 18/03/02\r\n6. 18/03/02 - 31/03/02",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy natures such as 'allocation' or 'model portfolio'."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence as seen by the user."
        },
        "complianceFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the Risk Strategy required frequency update.\r\nThe compliance frequency unit is defined by day, week, month, quarter, semester, year."
        },
        "complianceFreqUnitE" : {
          "type" : "string",
          "description" : "The compliance frequency is defined as number of frequency unit.",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nusing Case Management Component, this value determines what are Cases that must be clarified.\r\n\r\nUsed for Asset Allocation, Model Portfolio and Constraint Set.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long Name for a strategy."
        },
        "dimGridDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "It allows you to assign a grid or a grid list to a strategy."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "Allows to specify for a model portfolio the global fluctuation margin that is applied to each financial instrument composing the model portfolio when  compared to the real portfolio."
        },
        "gridObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Allows users to assign a grid list or a grid to a strategy.\r\nMoreover, the user can assign a grid/grid list to model portfolios or recommendation lists. \r\nPlease refer to the Triple'A Orders and Productivity Guide for more details on this feature."
        },
        "heartUploadE" : {
          "type" : "string",
          "description" : "Only used if you implement the Triple'A - HEART interface. This attribute tells whether or not the strategy is uploaded in HEART.",
          "enum" : [ "No", "Yes", "To Delete" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "invProfRiskLevelN" : {
          "type" : "number",
          "description" : "This field stores the level of the risk that the Investment Profile can take."
        },
        "irregularF" : {
          "type" : "boolean",
          "description" : "Benchmark Storage process definition flag. It indicates for a storage period whether only the current - at from date - strategy history weights are used for computation or any new strategy history weights found between the from date and the till date are taken into account."
        },
        "lastComplianceUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date on which the Risk Strategy has been updated."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastStoredBenchD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A non-editable date at which the instrument has been stored the last time. Update by the Benchmark Storage function process."
        },
        "lastUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last update of the strategy. For information only."
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a 'market segment'.\r\nA 'model portfolio' or a 'recommendation list' strategy may be restricted to a particular 'market segment'."
        },
        "name" : {
          "type" : "string",
          "description" : "Short Name for a strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'. \r\nFor more information please see the Orders and Productivity Guide, and the Performance Analysis Reference Guide.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        },
        "parentStrategyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Technical identifier for a strategy. This field is normally not seen by the user.\r\nThis relation allows to indicates that a strategy is a 'sub-strategy' of a strategy of a higher level.\r\nFor instance, an asset allocation may have one model per market segment as sub-strategy."
        },
        "relativeMarginF" : {
          "type" : "string",
          "description" : "It defines how Margins are computed.\r\n\r\nExample:\r\nConsider an Investment Profile (Asset Allocation, with an objective weight = 10% on Chemicals, and a Model Portfolio with two Instruments, 50% Novartis & 50% Roche). \r\nThe Fluctuation Margin is defined as equal as 1% into Model Portfolio.\r\n\r\nStock\r\n  Stock/CHF\r\n    Chemicals                  Objve: 10%\r\n       Novartis                        5%\r\n       Roche                           5%\r\n\r\nThe computation of Fluctuation Margin is as follows:\r\nAbsolute: 1% * 10% = +/- 0.10%\r\nRelative: 1% * 5% = +/- 0.05%\r\nUnweighted Absolute: +/- 1%.",
          "enum" : [ "Absolute", "Relative", "Unweighted absolute" ]
        },
        "retDetLevE" : {
          "type" : "string",
          "description" : "Benchmark Storage detail level:\r\n1. Global\r\n2. Grid\r\n3. Instrument",
          "enum" : [ "Global", "Grid", "Instrument", "Use PSP" ]
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "riskF" : {
          "type" : "boolean",
          "description" : "Indicates whether a strategy is defined in term of risks exposure or not.\r\nThis information is used when comparing a portfolio to a strategy. If the flag is 'Yes', the 'risk exposure' valuation of the portfolio will be taken into account in the comparison process."
        },
        "stratRebalD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Benchmark Storage process definition date. Used in conjunction with bench_freq_n and bench_freq_unit_e. See this latter attribute for more information."
        },
        "subNatureE" : {
          "type" : "string",
          "description" : "A strategy sub-nature.",
          "enum" : [ "<None>", "Constant Weight", "Load Ratio", "Dummy Portfolio" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "StrategyCompo" : {
      "type" : "object",
      "required" : [ "linkNatE", "object", "strategyHistoryId", "weightNatureE" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkNatE" : {
          "type" : "string",
          "description" : "This nature allows to specify which kind of link relates a strategy to an object.",
          "enum" : [ "Strategy", "Benchmark", "Strat&Bench", "Strategy (Check only)", "Constraint", "Cash Management", "Performance Fees" ]
        },
        "minBuyAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minBuyPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates the occurrence of the corresponding object type that belongs to the composition of the \"Benchmark\" or \"Investment Profile\"."
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the relative inportance of a strategy for a portfolio or list of portfolios.\r\n\"1\" is the most important. <NULL> are processed at least importance."
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'Strategy History' to which a 'Strategy Composition' necessarily belongs."
        },
        "weightN" : {
          "type" : "number",
          "description" : "This attribute allows defining the percentage of the strategy defined in the composition of a strategy with \"Composite\" nature. This is used when we want to define a Core-Satellite strategy structure.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations"
        },
        "weightNatureE" : {
          "type" : "string",
          "description" : "Describes how the Weight is computed.",
          "enum" : [ "<None>", "Relative", "Absolute", "Computed by Difference" ]
        }
      }
    },
    "StrategyCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "linkNatE", "object", "strategyHistoryId", "weightNatureE" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkNatE" : {
          "type" : "string",
          "description" : "This nature allows to specify which kind of link relates a strategy to an object.",
          "enum" : [ "Strategy", "Benchmark", "Strat&Bench", "Strategy (Check only)", "Constraint", "Cash Management", "Performance Fees" ]
        },
        "minBuyAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minBuyPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates the occurrence of the corresponding object type that belongs to the composition of the \"Benchmark\" or \"Investment Profile\"."
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the relative inportance of a strategy for a portfolio or list of portfolios.\r\n\"1\" is the most important. <NULL> are processed at least importance."
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'Strategy History' to which a 'Strategy Composition' necessarily belongs."
        },
        "weightN" : {
          "type" : "number",
          "description" : "This attribute allows defining the percentage of the strategy defined in the composition of a strategy with \"Composite\" nature. This is used when we want to define a Core-Satellite strategy structure.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations"
        },
        "weightNatureE" : {
          "type" : "string",
          "description" : "Describes how the Weight is computed.",
          "enum" : [ "<None>", "Relative", "Absolute", "Computed by Difference" ]
        }
      }
    },
    "StrategyElement" : {
      "type" : "object",
      "required" : [ "complianceChronoCompNatE", "complianceChronoNatE", "constraintTemplateCode", "criticalnessE", "instrCode", "limitNatE", "natureE", "objTrackErrorCheckE", "recomNatE", "strategyHistoryId" ],
      "properties" : {
        "actTrackErrN" : {
          "type" : "number",
          "description" : "Current's value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "benchAnalysisObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an object (which entity depends on the value of the attribute bench_analysis_entity_id) which could be used to define a second type of benchmark for a particular strategy. \r\n\r\nNote that in the benchmark storage function, we test whether the user decided to use this new type of benchmark to build up his strategy. We assume that if at least one bench_analysis_object_id is not NULL, the strategy benchmark will take reference on this attribute."
        },
        "benchDimensionE" : {
          "type" : "string",
          "description" : "This attribute is used only for the Web Packaging.\r\n\r\nDimension of benchmark related to the strategy's objective. This attribute is directly related to the attribute [bench_entity_dict_id]",
          "enum" : [ "<None>", "Portfolio", "Instrument", "Strategy" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy nature such as 'allocation', 'model portfolio'."
        },
        "complianceChronoCompNatE" : {
          "type" : "string",
          "description" : "Indicates the type of Compliance Chrono nature.",
          "enum" : [ "None", "Measure", "Indicator" ]
        },
        "complianceChronoNatE" : {
          "type" : "string",
          "description" : "Indicates the Compliance Chrono nature.",
          "enum" : [ "None", "VaR Percent", "Volatility Percent", "Tracking Error Percent", "Expected Shortfall Percent", "Diversification Effect Percent", "Marginal VaR Percent", "VaR Amount", "Expected Shortfall Amount", "Marginal VaR Amount", "Diversification Effect Amount", "Risk Grade", "Volatility Amount", "Tracking Error Amount", "Shortfall Probability Percent", "Shortfall Probability Amount", "Marg. Volatility Percent", "Marg. Volatility Amount", "Marg. Tracking Error Percent", "Marg. Tracking Error Amount", "Marg. Expected Shortfall Percent", "Marg. Expected Shortfall Amount", "EVaR Percent", "EVaR Amount", "Marginal EVaR Percent", "Marginal EVaR Amount", "TVaR Percent", "TVaR Amount", "Marginal TVaR Percent", "Marginal TVaR Amount", "Beta", "Super Hedging Price", "Information Ratio", "Sharpe Ratio", "Treynor Ratio", "Jensen's Alpha", "Risk Level", "Expected Return Percent", "Expected Return Amount", "Product Risk Class" ]
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute returns the severity set at Strategy & Constraint level.\r\n\r\nActivating the Case Management Component, the severity is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nthe case's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nthe case's severity determines what are Cases that must be clarified.\r\n\r\nUsing the Constraint Breach facility, this attribute determines the level to which a constraint is blocking when passing an Order into an Order Session (Order Entry, Allocate Order and Strategy Reconciliation).\r\n\r\nSee Orders & Productivity Guide.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Description of the strategy element. Useful for \"unstructured constraint\" strategy element."
        },
        "effTrackErrN" : {
          "type" : "number",
          "description" : "Effective's Value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "In case of an objective which is described in tem of a reference to an other object, an additive (positive or negative) margin can be applied to it."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrCode" : {
          "type" : "string",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "instrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "limitNatE" : {
          "type" : "string",
          "description" : "Defines thetype of limit for the strategy objective. This information is significant only in the case of an 'allocation constraint' strategy.\r\n\r\nThe value of the limit is stored in the 'value_n' filed. \r\nFor instance, if the objective is 20% (Nature = Percentage) invested in the Swiss stock market (market segment). the lower limit could be 3%.\r\nTo interpret this figure, the nature of the objective has also to be taken into account.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Used only to be associated to a 'strategy element' belonging to an 'allocation' or an 'allocation constraint set'.\r\nIt contains a market segment identifier of the 'grid' associated to the strategy."
        },
        "maxN" : {
          "type" : "number",
          "description" : "Maximum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "minN" : {
          "type" : "number",
          "description" : "Minimum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "A mandatory \"hard-coded\" classifying attribute for distinctive processing.",
          "enum" : [ "Weight", "Minimum Weight", "Maximum Weight", "Modified Duration", "Modified Duration Contribution", "Beta", "Beta Contribution", "Current Return", "Current Return Contribution", "Minimum Rating", "Tracking Error", "Model Item", "Recommendation", "Constraint", "Model", "Contrib Model", "Contrib Model Item", "Reference Weight", "Surveyed Securities List", "Risk" ]
        },
        "objTrackErrMarginN" : {
          "type" : "number",
          "description" : "Objective's Margin linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrN" : {
          "type" : "number",
          "description" : "Objective linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrorCheckE" : {
          "type" : "string",
          "description" : "Indicates if the Objective's Tracking Error is checked or not.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return.\r\n\r\nPermitted values are:\r\n\r\n0: not checked\r\n1: checked",
          "enum" : [ "Not Checked", "Checked" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The instrument or market segment priorities are used to define, in the case of purchases, the order the instruments are processed for buys. Two or more instruments having the same priorities shall be purchased as to correct the highest deficits first, as currently done.\r\nIn the case of recommendation lists, under the MARKET_SEGMENT_RANK system parameter set, the priority_n shall play the role of the rank_n, relegated in this context to a display role only."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The rank is part of the logical indentifier of the strategy element. It will be used for display purposes."
        },
        "recomNatE" : {
          "type" : "string",
          "description" : "This information is useful for 'model portfolio' or 'recommendation list'.",
          "enum" : [ "<None>", "Buy", "Increase", "Keep", "Reduce", "Sell", "Neutral" ]
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'strategy history' to which a 'strategy element' necessarily belongs to."
        },
        "valueN" : {
          "type" : "number",
          "description" : "Defines the value of  the strategy objective.\r\nFor instance, the objective could be 20% (Nature = Percentage)  invested in the Swiss stock market (market segment), or a Beta of 1 (Nature = Beta) for the overall portfolio."
        }
      }
    },
    "StrategyElementWithPermValues" : {
      "type" : "object",
      "required" : [ "complianceChronoCompNatE", "complianceChronoNatE", "constraintTemplateCode", "criticalnessE", "instrCode", "limitNatE", "natureE", "objTrackErrorCheckE", "recomNatE", "strategyHistoryId" ],
      "properties" : {
        "actTrackErrN" : {
          "type" : "number",
          "description" : "Current's value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "benchAnalysisObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an object (which entity depends on the value of the attribute bench_analysis_entity_id) which could be used to define a second type of benchmark for a particular strategy. \r\n\r\nNote that in the benchmark storage function, we test whether the user decided to use this new type of benchmark to build up his strategy. We assume that if at least one bench_analysis_object_id is not NULL, the strategy benchmark will take reference on this attribute."
        },
        "benchDimensionE" : {
          "type" : "string",
          "description" : "This attribute is used only for the Web Packaging.\r\n\r\nDimension of benchmark related to the strategy's objective. This attribute is directly related to the attribute [bench_entity_dict_id]",
          "enum" : [ "<None>", "Portfolio", "Instrument", "Strategy" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy nature such as 'allocation', 'model portfolio'."
        },
        "complianceChronoCompNatE" : {
          "type" : "string",
          "description" : "Indicates the type of Compliance Chrono nature.",
          "enum" : [ "None", "Measure", "Indicator" ]
        },
        "complianceChronoNatE" : {
          "type" : "string",
          "description" : "Indicates the Compliance Chrono nature.",
          "enum" : [ "None", "VaR Percent", "Volatility Percent", "Tracking Error Percent", "Expected Shortfall Percent", "Diversification Effect Percent", "Marginal VaR Percent", "VaR Amount", "Expected Shortfall Amount", "Marginal VaR Amount", "Diversification Effect Amount", "Risk Grade", "Volatility Amount", "Tracking Error Amount", "Shortfall Probability Percent", "Shortfall Probability Amount", "Marg. Volatility Percent", "Marg. Volatility Amount", "Marg. Tracking Error Percent", "Marg. Tracking Error Amount", "Marg. Expected Shortfall Percent", "Marg. Expected Shortfall Amount", "EVaR Percent", "EVaR Amount", "Marginal EVaR Percent", "Marginal EVaR Amount", "TVaR Percent", "TVaR Amount", "Marginal TVaR Percent", "Marginal TVaR Amount", "Beta", "Super Hedging Price", "Information Ratio", "Sharpe Ratio", "Treynor Ratio", "Jensen's Alpha", "Risk Level", "Expected Return Percent", "Expected Return Amount", "Product Risk Class" ]
        },
        "complianceChronoNatE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute complianceChronoNatE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute returns the severity set at Strategy & Constraint level.\r\n\r\nActivating the Case Management Component, the severity is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nthe case's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nthe case's severity determines what are Cases that must be clarified.\r\n\r\nUsing the Constraint Breach facility, this attribute determines the level to which a constraint is blocking when passing an Order into an Order Session (Order Entry, Allocate Order and Strategy Reconciliation).\r\n\r\nSee Orders & Productivity Guide.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "criticalnessE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute criticalnessE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "denom" : {
          "type" : "string",
          "description" : "Description of the strategy element. Useful for \"unstructured constraint\" strategy element."
        },
        "effTrackErrN" : {
          "type" : "number",
          "description" : "Effective's Value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "In case of an objective which is described in tem of a reference to an other object, an additive (positive or negative) margin can be applied to it."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrCode" : {
          "type" : "string",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "instrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "limitNatE" : {
          "type" : "string",
          "description" : "Defines thetype of limit for the strategy objective. This information is significant only in the case of an 'allocation constraint' strategy.\r\n\r\nThe value of the limit is stored in the 'value_n' filed. \r\nFor instance, if the objective is 20% (Nature = Percentage) invested in the Swiss stock market (market segment). the lower limit could be 3%.\r\nTo interpret this figure, the nature of the objective has also to be taken into account.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Used only to be associated to a 'strategy element' belonging to an 'allocation' or an 'allocation constraint set'.\r\nIt contains a market segment identifier of the 'grid' associated to the strategy."
        },
        "maxN" : {
          "type" : "number",
          "description" : "Maximum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "minN" : {
          "type" : "number",
          "description" : "Minimum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "A mandatory \"hard-coded\" classifying attribute for distinctive processing.",
          "enum" : [ "Weight", "Minimum Weight", "Maximum Weight", "Modified Duration", "Modified Duration Contribution", "Beta", "Beta Contribution", "Current Return", "Current Return Contribution", "Minimum Rating", "Tracking Error", "Model Item", "Recommendation", "Constraint", "Model", "Contrib Model", "Contrib Model Item", "Reference Weight", "Surveyed Securities List", "Risk" ]
        },
        "objTrackErrMarginN" : {
          "type" : "number",
          "description" : "Objective's Margin linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrN" : {
          "type" : "number",
          "description" : "Objective linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrorCheckE" : {
          "type" : "string",
          "description" : "Indicates if the Objective's Tracking Error is checked or not.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return.\r\n\r\nPermitted values are:\r\n\r\n0: not checked\r\n1: checked",
          "enum" : [ "Not Checked", "Checked" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The instrument or market segment priorities are used to define, in the case of purchases, the order the instruments are processed for buys. Two or more instruments having the same priorities shall be purchased as to correct the highest deficits first, as currently done.\r\nIn the case of recommendation lists, under the MARKET_SEGMENT_RANK system parameter set, the priority_n shall play the role of the rank_n, relegated in this context to a display role only."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The rank is part of the logical indentifier of the strategy element. It will be used for display purposes."
        },
        "recomNatE" : {
          "type" : "string",
          "description" : "This information is useful for 'model portfolio' or 'recommendation list'.",
          "enum" : [ "<None>", "Buy", "Increase", "Keep", "Reduce", "Sell", "Neutral" ]
        },
        "recomNatE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute recomNatE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'strategy history' to which a 'strategy element' necessarily belongs to."
        },
        "valueN" : {
          "type" : "number",
          "description" : "Defines the value of  the strategy objective.\r\nFor instance, the objective could be 20% (Nature = Percentage)  invested in the Swiss stock market (market segment), or a Beta of 1 (Nature = Beta) for the overall portfolio."
        }
      }
    },
    "StrategyHistory" : {
      "type" : "object",
      "required" : [ "beginD", "strategyCode" ],
      "properties" : {
        "applicD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Strategy application date: it allows to distinguish the validity date from the application date.\r\nIn R3.50, just for information purpose."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin Date of a 'Strategy History'. This date is part of the 'Strategy History' primary key.\r\nThis information is combined with the 'End Date' to check that, for the same 'Strategy', there is no overlapping of occurrences in 'Strategy History'."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see the 'Denomination' table)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of a 'Strategy History'.\r\nThis parameter is optional. No end date provided means no end to the link between a strategy and an object."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy history.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy history in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy history in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy history in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Reference of the strategy to which a strategy history necessarily belongs to."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "StrategyHistoryWithPermValues" : {
      "type" : "object",
      "required" : [ "beginD", "strategyCode" ],
      "properties" : {
        "applicD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Strategy application date: it allows to distinguish the validity date from the application date.\r\nIn R3.50, just for information purpose."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin Date of a 'Strategy History'. This date is part of the 'Strategy History' primary key.\r\nThis information is combined with the 'End Date' to check that, for the same 'Strategy', there is no overlapping of occurrences in 'Strategy History'."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see the 'Denomination' table)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of a 'Strategy History'.\r\nThis parameter is optional. No end date provided means no end to the link between a strategy and an object."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy history.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy history in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy history in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy history in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Reference of the strategy to which a strategy history necessarily belongs to."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "StrategyLink" : {
      "type" : "object",
      "required" : [ "beginD", "object", "portfolioCode", "portfolioListCode", "portfolioListName", "portfolioName", "strategyCode", "strategyId", "strategyNatureE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin date of the link between an Object and a Strategy."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End Date of the link between an object and a strategy.\r\nNo NULL value can be inserted in this field. A NULL value, which means no end to the link between a strategy and an object, must be replaced by a date somewhen in the future."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "linkedEntityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an entity type. Several types of objects may be linked to a strategy: \r\n- A 'Portfolio'\r\n- A 'Portfolio List'"
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurence in the table that is itself defined by the 'object type' (entity_dict_id) field."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioListCode" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a list of portfolios, it gives the list of portfolios to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioListDenom" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a list of portfolios, it gives the list of portfolios to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioListId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of a strategy link related to a list of portfolios, it gives the list of portfolios to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioListName" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a list of portfolios, it gives the list of portfolios to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user."
        },
        "strategyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "StrategyWithPermValues" : {
      "type" : "object",
      "required" : [ "benchFreqUnitE", "code", "complianceFreqUnitE", "criticalnessE", "heartUploadE", "irregularF", "name", "natureE", "relativeMarginF", "retDetLevE", "rightToRunF", "riskF", "subNatureE" ],
      "properties" : {
        "benchFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of unit of bench_freq_unit_e. See this attribute for more information."
        },
        "benchFreqUnitE" : {
          "type" : "string",
          "description" : "Used in conjunction with bench_freq_n, it indicates the \"logical\" rebalancing frequency, strating on the strat_rebal_d. This information is used during the Benchmark Storage process: if the frequency of rebalancing AND the strat_rebal_d are not void, the strategy will be rebalanced at regular dates, ie. the current physical weights are stored instead of the dynamic weight.\r\n\r\nExample : Benchmark Storage, on a monthly basis, starting on 31/12/01, ending on 31/03/02, with a strat_rebal_d=18/11/00 and logical frequency of 1 month, the storage will be done on the following dates :\r\n\r\n1. 31/12/01 - 18/01/02\r\n2. 18/01/02 - 31/01/02\r\n3. 31/01/02 - 18/02/02\r\n4. 18/02/02 - 28/02/02\r\n5. 28/02/02 - 18/03/02\r\n6. 18/03/02 - 31/03/02",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy natures such as 'allocation' or 'model portfolio'."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence as seen by the user."
        },
        "complianceFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the Risk Strategy required frequency update.\r\nThe compliance frequency unit is defined by day, week, month, quarter, semester, year."
        },
        "complianceFreqUnitE" : {
          "type" : "string",
          "description" : "The compliance frequency is defined as number of frequency unit.",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nusing Case Management Component, this value determines what are Cases that must be clarified.\r\n\r\nUsed for Asset Allocation, Model Portfolio and Constraint Set.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "criticalnessE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute criticalnessE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long Name for a strategy."
        },
        "dimGridDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "It allows you to assign a grid or a grid list to a strategy."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "Allows to specify for a model portfolio the global fluctuation margin that is applied to each financial instrument composing the model portfolio when  compared to the real portfolio."
        },
        "gridObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Allows users to assign a grid list or a grid to a strategy.\r\nMoreover, the user can assign a grid/grid list to model portfolios or recommendation lists. \r\nPlease refer to the Triple'A Orders and Productivity Guide for more details on this feature."
        },
        "heartUploadE" : {
          "type" : "string",
          "description" : "Only used if you implement the Triple'A - HEART interface. This attribute tells whether or not the strategy is uploaded in HEART.",
          "enum" : [ "No", "Yes", "To Delete" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "invProfRiskLevelN" : {
          "type" : "number",
          "description" : "This field stores the level of the risk that the Investment Profile can take."
        },
        "irregularF" : {
          "type" : "boolean",
          "description" : "Benchmark Storage process definition flag. It indicates for a storage period whether only the current - at from date - strategy history weights are used for computation or any new strategy history weights found between the from date and the till date are taken into account."
        },
        "lastComplianceUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date on which the Risk Strategy has been updated."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastStoredBenchD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A non-editable date at which the instrument has been stored the last time. Update by the Benchmark Storage function process."
        },
        "lastUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last update of the strategy. For information only."
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a 'market segment'.\r\nA 'model portfolio' or a 'recommendation list' strategy may be restricted to a particular 'market segment'."
        },
        "name" : {
          "type" : "string",
          "description" : "Short Name for a strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'. \r\nFor more information please see the Orders and Productivity Guide, and the Performance Analysis Reference Guide.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        },
        "parentStrategyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Technical identifier for a strategy. This field is normally not seen by the user.\r\nThis relation allows to indicates that a strategy is a 'sub-strategy' of a strategy of a higher level.\r\nFor instance, an asset allocation may have one model per market segment as sub-strategy."
        },
        "relativeMarginF" : {
          "type" : "string",
          "description" : "It defines how Margins are computed.\r\n\r\nExample:\r\nConsider an Investment Profile (Asset Allocation, with an objective weight = 10% on Chemicals, and a Model Portfolio with two Instruments, 50% Novartis & 50% Roche). \r\nThe Fluctuation Margin is defined as equal as 1% into Model Portfolio.\r\n\r\nStock\r\n  Stock/CHF\r\n    Chemicals                  Objve: 10%\r\n       Novartis                        5%\r\n       Roche                           5%\r\n\r\nThe computation of Fluctuation Margin is as follows:\r\nAbsolute: 1% * 10% = +/- 0.10%\r\nRelative: 1% * 5% = +/- 0.05%\r\nUnweighted Absolute: +/- 1%.",
          "enum" : [ "Absolute", "Relative", "Unweighted absolute" ]
        },
        "relativeMarginF_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute relativeMarginF",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "retDetLevE" : {
          "type" : "string",
          "description" : "Benchmark Storage detail level:\r\n1. Global\r\n2. Grid\r\n3. Instrument",
          "enum" : [ "Global", "Grid", "Instrument", "Use PSP" ]
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "riskF" : {
          "type" : "boolean",
          "description" : "Indicates whether a strategy is defined in term of risks exposure or not.\r\nThis information is used when comparing a portfolio to a strategy. If the flag is 'Yes', the 'risk exposure' valuation of the portfolio will be taken into account in the comparison process."
        },
        "stratRebalD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Benchmark Storage process definition date. Used in conjunction with bench_freq_n and bench_freq_unit_e. See this latter attribute for more information."
        },
        "subNatureE" : {
          "type" : "string",
          "description" : "A strategy sub-nature.",
          "enum" : [ "<None>", "Constant Weight", "Load Ratio", "Dummy Portfolio" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "TermEvent" : {
      "type" : "object",
      "required" : [ "beginD", "currencyCode", "optStyleE", "optionClassE", "underlyInstrCode" ],
      "properties" : {
        "barrierN" : {
          "type" : "number",
          "description" : "Used in Barrier option to indicate the barrier. In double barriers, it indicates the lower barrier."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date from which the exercise may occur.\r\n\r\nFor events that can occur only at one specific date (e.g., European options, futures, etc.), it will be equal to END_DATE.\r\n\r\nIntegrity rules:\r\n- Must be less than or equal the end_date.\r\n- Used in Asian options as the first date on which the averaging takes place. (The Asian current average is stored in the option instrument chrono.)"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the occurrence."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the last date on which an event may occur.\r\n\r\nIntegrity rule:\r\n- If specified, it must be greater than or equal the Begin_Date (see Begin_Date definition)."
        },
        "exerQuoteN" : {
          "type" : "number",
          "description" : "Specifies the market quotation at which the underlying is exchanged.\r\n\r\nNotes:\r\n- If the underlying instrument is a currency, the quote stored here is the exchange rate as quoted by the market. However, the price stored must satisfy the quantity * price equation. (Price may be = 1/Quote.) \r\n- The currency of the quote is expressed through its relationship with Currency.\r\n- Delivery quotes for non-repetitive Futures and Forwards are found in the position."
        },
        "exerQuoteP" : {
          "type" : "number",
          "description" : "Identifies the exercise quote (strike) in percentage of initial fixing price applicable to the underlying instrument when the redemption quote is applicable to the instrument. It is used for exotic options that embed terms and conditions relative to an underlying with a strike. \r\n\r\nApplicable for exotic options definition management."
        },
        "instrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the instrument to which the income event applies."
        },
        "leverageN" : {
          "type" : "number",
          "description" : "Specifies the multiplier factor applied to the quantity of the underlying for structured product (e.g., Mini Future-Turbo or Accumulator).\r\n\r\nApplicable for structured product definition management and is stored for information purposes only."
        },
        "lowerBarrierP" : {
          "type" : "number",
          "description" : "This attribute is used to capture the Lower barrier price expressed as a % of Exercise Price when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "optStyleE" : {
          "type" : "string",
          "description" : "Indicates when the option can be exercised.\r\n- American options can be exercised at all times.\r\n- European options can be exercised at expiration date.\r\n\r\nPermitted values:\r\n- 0 = None\r\n- 1 = American \r\n- 2 = European\r\n- 3 = Bermudan\r\n\r\nIntegrity rules:\r\n- The value 0 is applicable to instruments with Futures or Forwards nature.\r\n- The values 1, 2, and 3 are applicable to instruments with Option nature.",
          "enum" : [ "<None>", "American", "European", "Bermudan" ]
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Describes whether the holder has the right to buy or sell the underlying.\r\nWhen not defined, the event is firm.\r\n\r\nPermitted values:\r\n- 0 = Not optional\r\n- 1 = Call\r\n- 2 = Put\r\n\r\nIntegrity rules:\r\n- The 0 value applies to instruments with a Forward or Future nature.\r\n- The 1 and 2 values apply to instruments with an Option nature.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "protectedD" : {
          "type" : "string",
          "format" : "date",
          "description" : "For structured products, it defines the date that guarantees a minimum period before which the knock-out conditions are not applicable (disabled).\r\n\r\nApplicable for structured product definition management and is stored for information purposes only."
        },
        "underlyFixingPriceN" : {
          "type" : "number",
          "description" : "This attribute is used in the case of an exotic option to capture the initial price for the underlying instrument, which is used to define exercise and barrier levels when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Indicates the instrument upon which the term contract is derived.\r\n\r\nFor bond futures, the term contract is deemed to be on a notional bond but all calculations are done on the cheapest-to-deliver bond. Therefore, the underlying is deemed to be a composite instrument (so that conversion ratios can be described) that contains the cheapest-to-deliver. \r\n\r\nNote: The cheapest-to-deliver can either be specified or calculated by the system."
        },
        "underlyInstrDenom" : {
          "type" : "string",
          "description" : "Indicates the instrument upon which the term contract is derived.\r\n\r\nFor bond futures, the term contract is deemed to be on a notional bond but all calculations are done on the cheapest-to-deliver bond. Therefore, the underlying is deemed to be a composite instrument (so that conversion ratios can be described) that contains the cheapest-to-deliver. \r\n\r\nNote: The cheapest-to-deliver can either be specified or calculated by the system."
        },
        "underlyQtyN" : {
          "type" : "number",
          "description" : "Specifies the number of underlying instruments that can be obtained by exercising this contract.\r\n\r\nIntegrity rule:\r\n- Must be strictly greater than 0."
        },
        "upperBarrierN" : {
          "type" : "number",
          "description" : "In double barrier options, indicates the upper barrier."
        },
        "upperBarrierP" : {
          "type" : "number",
          "description" : "This attribute is used to capture the Upper barrier price expressed as a % of Exercise Price when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date from which the condition is valid."
        }
      }
    },
    "TermEventWithPermValues" : {
      "type" : "object",
      "required" : [ "beginD", "currencyCode", "optStyleE", "optionClassE", "underlyInstrCode" ],
      "properties" : {
        "barrierN" : {
          "type" : "number",
          "description" : "Used in Barrier option to indicate the barrier. In double barriers, it indicates the lower barrier."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date from which the exercise may occur.\r\n\r\nFor events that can occur only at one specific date (e.g., European options, futures, etc.), it will be equal to END_DATE.\r\n\r\nIntegrity rules:\r\n- Must be less than or equal the end_date.\r\n- Used in Asian options as the first date on which the averaging takes place. (The Asian current average is stored in the option instrument chrono.)"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the occurrence."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the last date on which an event may occur.\r\n\r\nIntegrity rule:\r\n- If specified, it must be greater than or equal the Begin_Date (see Begin_Date definition)."
        },
        "exerQuoteN" : {
          "type" : "number",
          "description" : "Specifies the market quotation at which the underlying is exchanged.\r\n\r\nNotes:\r\n- If the underlying instrument is a currency, the quote stored here is the exchange rate as quoted by the market. However, the price stored must satisfy the quantity * price equation. (Price may be = 1/Quote.) \r\n- The currency of the quote is expressed through its relationship with Currency.\r\n- Delivery quotes for non-repetitive Futures and Forwards are found in the position."
        },
        "exerQuoteP" : {
          "type" : "number",
          "description" : "Identifies the exercise quote (strike) in percentage of initial fixing price applicable to the underlying instrument when the redemption quote is applicable to the instrument. It is used for exotic options that embed terms and conditions relative to an underlying with a strike. \r\n\r\nApplicable for exotic options definition management."
        },
        "instrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the instrument to which the income event applies."
        },
        "leverageN" : {
          "type" : "number",
          "description" : "Specifies the multiplier factor applied to the quantity of the underlying for structured product (e.g., Mini Future-Turbo or Accumulator).\r\n\r\nApplicable for structured product definition management and is stored for information purposes only."
        },
        "lowerBarrierP" : {
          "type" : "number",
          "description" : "This attribute is used to capture the Lower barrier price expressed as a % of Exercise Price when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "optStyleE" : {
          "type" : "string",
          "description" : "Indicates when the option can be exercised.\r\n- American options can be exercised at all times.\r\n- European options can be exercised at expiration date.\r\n\r\nPermitted values:\r\n- 0 = None\r\n- 1 = American \r\n- 2 = European\r\n- 3 = Bermudan\r\n\r\nIntegrity rules:\r\n- The value 0 is applicable to instruments with Futures or Forwards nature.\r\n- The values 1, 2, and 3 are applicable to instruments with Option nature.",
          "enum" : [ "<None>", "American", "European", "Bermudan" ]
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Describes whether the holder has the right to buy or sell the underlying.\r\nWhen not defined, the event is firm.\r\n\r\nPermitted values:\r\n- 0 = Not optional\r\n- 1 = Call\r\n- 2 = Put\r\n\r\nIntegrity rules:\r\n- The 0 value applies to instruments with a Forward or Future nature.\r\n- The 1 and 2 values apply to instruments with an Option nature.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "protectedD" : {
          "type" : "string",
          "format" : "date",
          "description" : "For structured products, it defines the date that guarantees a minimum period before which the knock-out conditions are not applicable (disabled).\r\n\r\nApplicable for structured product definition management and is stored for information purposes only."
        },
        "underlyFixingPriceN" : {
          "type" : "number",
          "description" : "This attribute is used in the case of an exotic option to capture the initial price for the underlying instrument, which is used to define exercise and barrier levels when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Indicates the instrument upon which the term contract is derived.\r\n\r\nFor bond futures, the term contract is deemed to be on a notional bond but all calculations are done on the cheapest-to-deliver bond. Therefore, the underlying is deemed to be a composite instrument (so that conversion ratios can be described) that contains the cheapest-to-deliver. \r\n\r\nNote: The cheapest-to-deliver can either be specified or calculated by the system."
        },
        "underlyInstrDenom" : {
          "type" : "string",
          "description" : "Indicates the instrument upon which the term contract is derived.\r\n\r\nFor bond futures, the term contract is deemed to be on a notional bond but all calculations are done on the cheapest-to-deliver bond. Therefore, the underlying is deemed to be a composite instrument (so that conversion ratios can be described) that contains the cheapest-to-deliver. \r\n\r\nNote: The cheapest-to-deliver can either be specified or calculated by the system."
        },
        "underlyQtyN" : {
          "type" : "number",
          "description" : "Specifies the number of underlying instruments that can be obtained by exercising this contract.\r\n\r\nIntegrity rule:\r\n- Must be strictly greater than 0."
        },
        "upperBarrierN" : {
          "type" : "number",
          "description" : "In double barrier options, indicates the upper barrier."
        },
        "upperBarrierP" : {
          "type" : "number",
          "description" : "This attribute is used to capture the Upper barrier price expressed as a % of Exercise Price when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date from which the condition is valid."
        }
      }
    },
    "ThirdCategory" : {
      "type" : "object",
      "required" : [ "categoryCode", "categoryDenom", "thirdPartyCode" ],
      "properties" : {
        "categoryCode" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "categoryDenom" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Primary Key."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Code of the third party."
        }
      }
    },
    "ThirdCategoryWithPermValues" : {
      "type" : "object",
      "required" : [ "categoryCode", "categoryDenom", "thirdPartyCode" ],
      "properties" : {
        "categoryCode" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "categoryDenom" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Primary Key."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Code of the third party."
        }
      }
    },
    "ThirdParty" : {
      "type" : "object",
      "required" : [ "activeF", "bestExecE", "cliClassifE", "clientF", "code", "commodDerivKnowE", "complexInstrKnowF", "creditDerivKnowE", "currDerivKnowE", "currencyCode", "economicStatKnowE", "educationLevelE", "gdprChildF", "gdprInscopeF", "gdprProcessRestrictionF", "indiceDerivKnowE", "intDerivKnowE", "languageCode", "legalEntityStatusE", "legalEntityTypeE", "managerCode", "managerName", "name", "otherComplexKnowE", "residGeoCode", "riskGeoCode", "secDerivKnowE", "statusE", "taxGeoCode" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is the date when the third party is foreseen as active"
        },
        "bestExecE" : {
          "type" : "string",
          "description" : "This field indicates whether the Best Execution Policy is signed or not.",
          "enum" : [ "None", "Not Defined", "Not Signed", "Signed", "Pending", "Missing" ]
        },
        "cliClassifE" : {
          "type" : "string",
          "description" : "Manages the client's categorisation. By default, it is set to None. \r\n\r\nThis field may be modified by authorised users if a professional client requests to be treated as a retail client for the Mifid compliance.",
          "enum" : [ "None", "Retail", "Professionnal Per Se", "Professionnal on Request", "Eligible Counterparty", "Institutional" ]
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "commodDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for commodities derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "complexInstrKnowF" : {
          "type" : "boolean",
          "description" : "This flag is used to specify whether the client knows complex instruments."
        },
        "creditDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for credit derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for currency derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the third party."
        },
        "economicStatKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for economic statistics.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "educationLevelE" : {
          "type" : "string",
          "description" : "This field is used to specify the level of education of the client. This could be one argument used to check if the client has the right level of knowledge in complex instruments.",
          "enum" : [ "None", "Not Defined", "High School", "Graduate", "Post-Graduate" ]
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the cash ratio business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCategory" : {
          "type" : "string",
          "description" : "The client category.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a field used for the client dashboard. It contains the client type.\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Constraints compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the constraints business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last operation.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the days since last operation business indicator fpr any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last proposal.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the number of days since the last proposal is larger than a defined threshold. The threshold is defined using parameter DS_DBOARD_CLIENT_DAYS_PROPOSAL.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiInvalidMifid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile of the client is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMifidPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile review of the client is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the market value drop business indicator for any of client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business inidcator used on the client dashboard.\r\nSet to 1 if the objectives met business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiProposalPending" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If there are proposals, which are in status \"Sent for Validation\", for the client's proposals, and the number of days between the last modifiction date for the oldest of these proposals, and the current date exceeds the value of the system paramter DS_DBOARD_CLIENT_PENDING_PROP, the value is set to 1.\r\n\r\nThis attribute can then be evaluated for the definition of pre-defined queries and alerts.  \r\n\r\n\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates whether at least one of the portfolios related to the client has an advisory service.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest cash percentage of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest drop in market value (expressed in %) of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last operation performed on all portfolios related to the client.\r\nIt is the most recent date of all Last Operation Date (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the Instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDateProposal" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Proposal Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last operation performed on all portfolios related to the client.\r\nIt is the minimum value of all Last Operation (in days) (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Proposal (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extMifidCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no MiFID profile defined yet\r\n2 â€“ Valid, the current MiFID profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current MiFID profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extMifidExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current MiFID profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extMifidRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non- compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated:It was impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency, which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extRiskCompliance" : {
          "type" : "string",
          "description" : "Risk Compliance is an extended attribute that cannot be edited by the user but requires a data pre-computation. In the standard packaging, this attribute is built from the results of the worst risk indicators of VaR %, Volatility %, Tracking Error %, Expected Shortfall %, Diversification Effect %, VaR amount, Expected Shortfall amount, Diversification Effect amount, Risk Grade, Volatility amount, Tracking Error amount, Shortfall Probability %, and Shortfall Probability amount.\r\n\r\nFor each indicator, the compliance is calculated as follows:\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Risk Compliant: Some risk objectives are reached. \r\n- Not Evaluated: No risk values calculated.\r\n\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Compliant â€“ High: Some risk objectives are reached and are based on severities     that are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some risk objectives are reached and are based on severities that are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some risk objectives are reached and are based on severities that are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Evaluated: No risk values calculated.\r\n\r\nThis attribute is used only for the web packaging.",
          "enum" : [ "No Risk Objective defined", "Risk Objective not evaluated", "Risk Compliant", "Not Risk Compliant - Low", "Not Risk Compliant - Medium", "Not Risk Compliant - High", "Not Compliant" ]
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the client in system currency. It is the total market value, in system currency, of all portfolios related to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "The fax number of the third party."
        },
        "gdprChildF" : {
          "type" : "boolean",
          "description" : "Considered as child for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprInscopeF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprProcessRestrictionF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "indiceDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for index derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "intDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for interest rate derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and  cannot be modified."
        },
        "lastContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of last contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "legalEntityStatusE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity status. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field can be extended by adding new permitted values (no overwrite of the standard ones).",
          "enum" : [ "None", "Prospect - New", "Client", "Ex-client", "Active", "Business Affiliate", "Business Associate", "Client Advisor", "Client Associated", "Client Related", "Inactive", "Other", "Prospect - Qualified", "Prospect - Opportunity", "Prospect - Lost", "Client-Related (user defined)", "Referrer", "Suspect", "Unknown", "Ex-Client Associated", "Ex-Client Related" ]
        },
        "legalEntityTypeE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity type. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field cannot be extended.",
          "enum" : [ "None", "Customer", "Person", "Organization", "Economic Group" ]
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "managerName" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "mifidLastModifD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This field is used to persist the date when the client data have been last modified."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "nextContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Planned date for next contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "otherComplexKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for other complex instruments.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "The telephone number of the third party."
        },
        "residGeoCode" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "residGeoExtDenomination" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "riskGeoExtDenomination" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "secDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for securities.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of a third party.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "In Progress", "Inactive" ]
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "taxGeoExtDenomination" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "telexC" : {
          "type" : "string",
          "description" : "The mask number of the third party."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Not used."
        }
      }
    },
    "ThirdPartyWithPermValues" : {
      "type" : "object",
      "required" : [ "activeF", "bestExecE", "cliClassifE", "clientF", "code", "commodDerivKnowE", "complexInstrKnowF", "creditDerivKnowE", "currDerivKnowE", "currencyCode", "economicStatKnowE", "educationLevelE", "gdprChildF", "gdprInscopeF", "gdprProcessRestrictionF", "indiceDerivKnowE", "intDerivKnowE", "languageCode", "legalEntityStatusE", "legalEntityTypeE", "managerCode", "managerName", "name", "otherComplexKnowE", "residGeoCode", "riskGeoCode", "secDerivKnowE", "statusE", "taxGeoCode" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is the date when the third party is foreseen as active"
        },
        "bestExecE" : {
          "type" : "string",
          "description" : "This field indicates whether the Best Execution Policy is signed or not.",
          "enum" : [ "None", "Not Defined", "Not Signed", "Signed", "Pending", "Missing" ]
        },
        "cliClassifE" : {
          "type" : "string",
          "description" : "Manages the client's categorisation. By default, it is set to None. \r\n\r\nThis field may be modified by authorised users if a professional client requests to be treated as a retail client for the Mifid compliance.",
          "enum" : [ "None", "Retail", "Professionnal Per Se", "Professionnal on Request", "Eligible Counterparty", "Institutional" ]
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "commodDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for commodities derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "complexInstrKnowF" : {
          "type" : "boolean",
          "description" : "This flag is used to specify whether the client knows complex instruments."
        },
        "creditDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for credit derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for currency derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the third party."
        },
        "economicStatKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for economic statistics.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "educationLevelE" : {
          "type" : "string",
          "description" : "This field is used to specify the level of education of the client. This could be one argument used to check if the client has the right level of knowledge in complex instruments.",
          "enum" : [ "None", "Not Defined", "High School", "Graduate", "Post-Graduate" ]
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the cash ratio business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCategory" : {
          "type" : "string",
          "description" : "The client category.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a field used for the client dashboard. It contains the client type.\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Constraints compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the constraints business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last operation.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the days since last operation business indicator fpr any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last proposal.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the number of days since the last proposal is larger than a defined threshold. The threshold is defined using parameter DS_DBOARD_CLIENT_DAYS_PROPOSAL.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiInvalidMifid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile of the client is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMifidPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile review of the client is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the market value drop business indicator for any of client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business inidcator used on the client dashboard.\r\nSet to 1 if the objectives met business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiProposalPending" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If there are proposals, which are in status \"Sent for Validation\", for the client's proposals, and the number of days between the last modifiction date for the oldest of these proposals, and the current date exceeds the value of the system paramter DS_DBOARD_CLIENT_PENDING_PROP, the value is set to 1.\r\n\r\nThis attribute can then be evaluated for the definition of pre-defined queries and alerts.  \r\n\r\n\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates whether at least one of the portfolios related to the client has an advisory service.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest cash percentage of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest drop in market value (expressed in %) of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last operation performed on all portfolios related to the client.\r\nIt is the most recent date of all Last Operation Date (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the Instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDateProposal" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Proposal Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last operation performed on all portfolios related to the client.\r\nIt is the minimum value of all Last Operation (in days) (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Proposal (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extMifidCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no MiFID profile defined yet\r\n2 â€“ Valid, the current MiFID profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current MiFID profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extMifidExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current MiFID profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extMifidRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non- compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated:It was impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency, which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extRiskCompliance" : {
          "type" : "string",
          "description" : "Risk Compliance is an extended attribute that cannot be edited by the user but requires a data pre-computation. In the standard packaging, this attribute is built from the results of the worst risk indicators of VaR %, Volatility %, Tracking Error %, Expected Shortfall %, Diversification Effect %, VaR amount, Expected Shortfall amount, Diversification Effect amount, Risk Grade, Volatility amount, Tracking Error amount, Shortfall Probability %, and Shortfall Probability amount.\r\n\r\nFor each indicator, the compliance is calculated as follows:\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Risk Compliant: Some risk objectives are reached. \r\n- Not Evaluated: No risk values calculated.\r\n\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Compliant â€“ High: Some risk objectives are reached and are based on severities     that are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some risk objectives are reached and are based on severities that are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some risk objectives are reached and are based on severities that are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Evaluated: No risk values calculated.\r\n\r\nThis attribute is used only for the web packaging.",
          "enum" : [ "No Risk Objective defined", "Risk Objective not evaluated", "Risk Compliant", "Not Risk Compliant - Low", "Not Risk Compliant - Medium", "Not Risk Compliant - High", "Not Compliant" ]
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the client in system currency. It is the total market value, in system currency, of all portfolios related to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "The fax number of the third party."
        },
        "gdprChildF" : {
          "type" : "boolean",
          "description" : "Considered as child for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprInscopeF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprProcessRestrictionF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "indiceDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for index derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "intDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for interest rate derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and  cannot be modified."
        },
        "lastContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of last contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "legalEntityStatusE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity status. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field can be extended by adding new permitted values (no overwrite of the standard ones).",
          "enum" : [ "None", "Prospect - New", "Client", "Ex-client", "Active", "Business Affiliate", "Business Associate", "Client Advisor", "Client Associated", "Client Related", "Inactive", "Other", "Prospect - Qualified", "Prospect - Opportunity", "Prospect - Lost", "Client-Related (user defined)", "Referrer", "Suspect", "Unknown", "Ex-Client Associated", "Ex-Client Related" ]
        },
        "legalEntityTypeE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity type. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field cannot be extended.",
          "enum" : [ "None", "Customer", "Person", "Organization", "Economic Group" ]
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "managerName" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "mifidLastModifD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This field is used to persist the date when the client data have been last modified."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "nextContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Planned date for next contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "otherComplexKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for other complex instruments.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "The telephone number of the third party."
        },
        "residGeoCode" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "residGeoExtDenomination" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "riskGeoExtDenomination" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "secDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for securities.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of a third party.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "In Progress", "Inactive" ]
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "taxGeoExtDenomination" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "telexC" : {
          "type" : "string",
          "description" : "The mask number of the third party."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Not used."
        }
      }
    },
    "TradingConstraint" : {
      "type" : "object",
      "required" : [ "beginD", "code", "constraintTemplateCode", "criticalnessE", "name", "natureE", "portObject", "portfolioCode", "portfolioListCode" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the begin of validity of the trading constraint."
        },
        "code" : {
          "type" : "string",
          "description" : "Code of the trading constraint."
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This critical level lets you decide the degree to which a constraint is blocking when a portfolio manager wants to pass orders. You can access this feature from the order entry function when you run a compliance check. It is also accessible from the allocate order and strategy reconciliation functions.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the trading constraint."
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "dimPortName" : {
          "type" : "string",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the end of validity of the trading constraint ."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the trading constraint."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the trading constraint, not yet used.",
          "enum" : [ "Trading Constraint" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the portfolio or list of portfolios the trading constraint is linked to."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListCode" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListDenom" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "TradingConstraintWithPermValues" : {
      "type" : "object",
      "required" : [ "beginD", "code", "constraintTemplateCode", "criticalnessE", "name", "natureE", "portObject", "portfolioCode", "portfolioListCode" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the begin of validity of the trading constraint."
        },
        "code" : {
          "type" : "string",
          "description" : "Code of the trading constraint."
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This critical level lets you decide the degree to which a constraint is blocking when a portfolio manager wants to pass orders. You can access this feature from the order entry function when you run a compliance check. It is also accessible from the allocate order and strategy reconciliation functions.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "criticalnessE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute criticalnessE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the trading constraint."
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "dimPortName" : {
          "type" : "string",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the end of validity of the trading constraint ."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the trading constraint."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the trading constraint, not yet used.",
          "enum" : [ "Trading Constraint" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the portfolio or list of portfolios the trading constraint is linked to."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListCode" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListDenom" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "Type" : {
      "type" : "object",
      "required" : [ "code", "instrNatE", "name", "operNatE", "rankN" ],
      "properties" : {
        "attributeDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeEntityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeName" : {
          "type" : "string",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "code" : {
          "type" : "string",
          "description" : "'Business' identifier of an occurrence. The combination of the 'code' and the 'attribute_dict_id' constitutes a unique key."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the type.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrNatE" : {
          "type" : "string",
          "description" : "Contains the instrument nature of the type. Is used mainly for selection purposes. It is possible to associate a type to an instrument with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence."
        },
        "operNatE" : {
          "type" : "string",
          "description" : "Indicates the nature of the operation related to this type. It is possible to associate a typeto an operation with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Buy", "Sell", "Income", "Investment", "Withdrawal", "Fees & Taxes", "Adjustment", "Unit Issue", "Unit Redemption", "Transfer", "BP Transfer", "Locking", "Portfolio Transfer", "Book Value Adjustment", "Init", "Combined" ]
        },
        "parentTypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the Parent Type (Type entity also). If the Parent Type is indicated, it's actually a sub type."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for types of intrument price and types of exchange rate the order in which the prices are taken when determining the \"default\" price for the day, e.g. close, bid, or ask.\r\nInstrument price or exchange rate types that  have a rank of 0 are not included in the default price process, e.g. fiscal prices."
        }
      }
    },
    "TypeWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "instrNatE", "name", "operNatE", "rankN" ],
      "properties" : {
        "attributeDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeEntityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeName" : {
          "type" : "string",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "code" : {
          "type" : "string",
          "description" : "'Business' identifier of an occurrence. The combination of the 'code' and the 'attribute_dict_id' constitutes a unique key."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the type.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrNatE" : {
          "type" : "string",
          "description" : "Contains the instrument nature of the type. Is used mainly for selection purposes. It is possible to associate a type to an instrument with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence."
        },
        "operNatE" : {
          "type" : "string",
          "description" : "Indicates the nature of the operation related to this type. It is possible to associate a typeto an operation with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Buy", "Sell", "Income", "Investment", "Withdrawal", "Fees & Taxes", "Adjustment", "Unit Issue", "Unit Redemption", "Transfer", "BP Transfer", "Locking", "Portfolio Transfer", "Book Value Adjustment", "Init", "Combined" ]
        },
        "parentTypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the Parent Type (Type entity also). If the Parent Type is indicated, it's actually a sub type."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for types of intrument price and types of exchange rate the order in which the prices are taken when determining the \"default\" price for the day, e.g. close, bid, or ask.\r\nInstrument price or exchange rate types that  have a rank of 0 are not included in the default price process, e.g. fiscal prices."
        }
      }
    },
    "createAddressInput" : {
      "type" : "object",
      "required" : [ "addressC", "thirdPartyCode", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e., carriage returns are authorised)."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. Its field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\n\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Indicates to which third-party the address belongs."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type of address (e.g., fiscal address, legal address, correspondence address, etc.)"
        }
      }
    },
    "createAddressSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AddressWithPermValues"
        }
      }
    },
    "createBalancePosTypeInput" : {
      "type" : "object",
      "required" : [ "code", "name", "natureE", "rankN" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence that is seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, used mainly for reporting purposes. This long name is used as a default when there is no occurrence in the 'denomination' table for a required language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination. This is the denomination of the balance position type. Denomination is displayed in the user's language but if it is not available, then the default translation is used instead. If no denominations are available, then the name is used.\r\n\r\nIt is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too. \r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German. This is the denomination of the balance position type in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English. This is the denomination of the balance position type in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French. This is the denomination of the balance position type in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a Balance Position Type which characterises a 'Balance Position'. The list of permitted values is set by Odyssey and cannot be modified. These natures are important because they are used intensively in the Fusion process and, subsequently, in functions such as 'Performance Measurement' and 'Performance Attribution'.",
          "enum" : [ "Un-accounted", "Capital Profit", "Capital Loss", "Position Fee", "Position Tax", "Tax Credit", "Portfolio Fee", "Portfolio Tax", "Received Income", "Investment", "Withdrawal", "Currency Profit", "Currency Loss", "Paid Income", "Received Accrued Interest", "Paid Accrued Interest", "Currency Forward Premium", "Currency Forward Discount", "Fund Share Coupon/Income", "Fund Share Coupon/P&L", "Net Value", "Accrued Value", "Book Capital Profit", "Book Capital Loss", "Book Currency Profit", "Book Currency Loss", "Book Profit", "Book Loss", "Unrealised Capital Profit", "Unrealised Capital Loss", "Unrealised Currency Profit", "Unrealised Currency Loss", "Unrealised Book Profit", "Unrealised Book Loss", "Unrealised Book Capital Profit", "Unrealised Book Capital Loss", "Unrealised Book Curr. Profit", "Unrealised Book Curr. Loss" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Associates a 'Position' and 'Balance Position' to a Balance Position Type.\r\nA Balance Position with a rank less than or equal to 10 must have a nature of 'Position Fee' or 'Position Tax'. Note that there can only be one BP Type with such a rank.\r\nThe amounts corresponding to these BP Types are stored in one of the corresponding 'BP Amount' in the position/balance position tables, and shows the difference between the position gross and net amounts."
        }
      }
    },
    "createBalancePosTypeSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BalancePosTypeWithPermValues"
        }
      }
    },
    "createBusinessEntitiesInput" : {
      "type" : "object",
      "required" : [ "code", "legalNatureE", "multiEntityRoleE", "name", "orgaRoleE", "referenceE", "statusE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique business identifier of the business entity that is displayed to the end user. This field is mandatory."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the business entity's Data Security Profile with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the business entity (not necessarily unique). This field is optional."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the business entity."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination of the business entity. This extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the WealthSuite Front Office - Portfolio Management Web - TSL Operating Guide).\r\n\r\nThe denomination is displayed in the user's language, but if it is not available then the default translation is used instead. At the very least, if no denominations are available, then the name is used. As well, this extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination of the business entity in German. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination of the business entity in English. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination of the business entity in French. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "An extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "legalNatureE" : {
          "type" : "string",
          "description" : "Defines the legal nature of the business entity.",
          "enum" : [ "None", "Company", "Business Entity" ]
        },
        "multiEntityRoleE" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt defines if the business entity contributes to the multi-entity organization.",
          "enum" : [ "None", "Master", "Specific Data & Parameters" ]
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the business entity (not necessarily unique). This field is mandatory."
        },
        "orgaRoleE" : {
          "type" : "string",
          "description" : "Defines the organisation of the business entity inside the bank's organisation.",
          "enum" : [ "None", "Master Company", "Lead Company", "Branch Company", "Head Office", "Office", "Branch", "Division", "Department", "Service", "Desk" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the business entity."
        },
        "referenceE" : {
          "type" : "string",
          "description" : "Defines the reference of the business entity.\r\n\r\nA reference is a system (such as T24 back-office system) that is the data master concerning the bank's organisation.",
          "enum" : [ "None", "T24" ]
        },
        "rightReasonE" : {
          "type" : "string",
          "enum" : [ "None", "Security", "Active Change Set", "Multi-Entity Restrict", "Not Secured" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the business entity.",
          "enum" : [ "None", "Inactive", "Active", "Blocked", "Cancelled" ]
        },
        "telexC" : {
          "type" : "string",
          "description" : "Mask number of the business entity."
        },
        "themeC" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nThis attribute is a simple text that conditions the front-ends layout.  \r\nWhen, in the front-end, a user switches from one business entity to another business entity that has a different theme, the color changes accordingly. This reminds the user where he is logged into.\r\nThe standard packaging delivers some theme examples where the value is simply associated to a color: \r\n- red\r\n- darkBlue\r\n- purple\r\n- green\r\n- blue\r\n- orange\r\nWhen not defined: grey for WUI and Connect. \r\nThe usage of themes for conditioning the front-end layout can be extended by customization."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a Triple'A Plus Web user is allowed to update the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Triple'A Plus Web user's data profile contains the business entity's Data Security Profile with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateSecuRightF" : {
          "type" : "boolean"
        }
      }
    },
    "createBusinessEntitiesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntityWithPermValues"
        }
      }
    },
    "createBusinessEntityUserComposInput" : {
      "type" : "object",
      "required" : [ "applUserCode", "applUserId", "busEntityName", "dataProfileCode", "defaultLoginF", "mainBusEntityF", "roleE", "typeCode" ],
      "properties" : {
        "applUserCode" : {
          "type" : "string",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "applUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "busEntityDenom" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityName" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityThemeC" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "defaultLoginF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nA business entity sets as default login is used by the system when the linked user authenticates into the system by providing login and password. The system automatically assigns that business entity to the created connection.\r\nOnly one default login can be set between a user and a business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "mainBusEntityF" : {
          "type" : "boolean",
          "description" : "Specifies whether the business entity is the main business entity of the bank's employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user))."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Defines the role that the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) has in the business.",
          "enum" : [ "None", "Compliance", "Administration", "Management", "Advisor", "Manager", "Assistant", "Application User" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "References the type of business entity user composition."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the type of business entity user composition."
        }
      }
    },
    "createBusinessEntityUserComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntityUserCompoWithPermValues"
        }
      }
    },
    "createCategoriesInput" : {
      "type" : "object",
      "required" : [ "categoryDescC", "code", "dataSecuProfCode", "natureE" ],
      "properties" : {
        "categoryDescC" : {
          "type" : "string",
          "description" : "Description of the category"
        },
        "code" : {
          "type" : "string",
          "description" : "Unique code of a category. It is the primary key."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Data Security Profile of the category. A category is secured. The goal is to defined categories for a group of users."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the category specifying the type of the entity that is categorized.",
          "enum" : [ "Third Party", "Portfolio", "Instrument", "Document", "Activity" ]
        }
      }
    },
    "createCategoriesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/CategoryWithPermValues"
        }
      }
    },
    "createConstraintParametersInput" : {
      "type" : "object",
      "required" : [ "instrSetCode", "operatorE", "templateElementId", "templateElementName", "templateElementParamNatureE" ],
      "properties" : {
        "constrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the technical identifier of the constraint."
        },
        "dateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "References the date you defined in a Date constraint parameter."
        },
        "dimConstraintDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the type of constraint you define: strategy element (i.e. holding constraint) or trading constraint."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrSetCode" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetDenom" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "objectiveN" : {
          "type" : "number",
          "description" : "References the numerical value you defined in a Value parameter."
        },
        "operatorE" : {
          "type" : "string",
          "description" : "References the operator you defined in an Operator constraint parameter.",
          "enum" : [ "<None>", "<>", "=", "<", "<=", ">", ">=" ]
        },
        "templateElementId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementName" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementParamNatureE" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description.",
          "enum" : [ "Operator", "Attribute", "Value", "Date", "Instrument Set" ]
        }
      }
    },
    "createConstraintParametersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ConstraintParameterWithPermValues"
        }
      }
    },
    "createConstraintTemplateInput" : {
      "type" : "object",
      "required" : [ "activeF", "code", "constrNatureE", "criticalnessE", "name", "parameterF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Constraint Template. A Constraint Template must be active to appear in default selection lists. If a Constraint Template is inactive, it is not displayed in default selection lists."
        },
        "code" : {
          "type" : "string",
          "description" : "This code is the Constraint Template entity business key."
        },
        "constrNatureE" : {
          "type" : "string",
          "description" : "Specifies the type of constraint to which the template applies.",
          "enum" : [ "Trading Constraint", "Holding Constraint" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "The long name of the occurrence. Try to provide an explicit description of your template. This information appears in default selection lists and is useful later for identification and description."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "The short name of the occurrence."
        },
        "parameterF" : {
          "type" : "boolean",
          "description" : "Specifies if the constraint holds specific parameters or not. If it is set to No, you do not have access to the template elements (i.e. the parameter description)."
        }
      }
    },
    "createConstraintTemplateSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ConstraintTemplateWithPermValues"
        }
      }
    },
    "createCurrencyInput" : {
      "type" : "object",
      "required" : [ "code", "name" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Code identifying an occurrence for the end user.\r\nThis code is unique but can be changed, if necessary."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see \"Multilingual\")."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the currency.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence.\r\nUsed mainly for display. Reports mainly use a Denomination (see under \"Multilingual\")."
        }
      }
    },
    "createCurrencySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/CurrenciesWithPermValues"
        }
      }
    },
    "createGeographicInput" : {
      "type" : "object",
      "required" : [ "code", "countryF", "name" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Most common business code."
        },
        "countryF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Geographical Area is a country."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the country.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "createGeographicSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/GeographicWithPermValues"
        }
      }
    },
    "createGridInput" : {
      "type" : "object",
      "required" : [ "code", "name", "natureE", "primaryGridF" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name of an occurence that will be used as default long name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the grid.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the kind of grid which is defined.",
          "enum" : [ "Standard", "Market Structure", "Market Structure Subset" ]
        },
        "primaryGridF" : {
          "type" : "boolean",
          "description" : "Currently not used by financial functions."
        }
      }
    },
    "createGridSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/GridWithPermValues"
        }
      }
    },
    "createInstrumentListCompoInput" : {
      "type" : "object",
      "required" : [ "instrumentCode", "rankN" ],
      "properties" : {
        "instrumentCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of instrument"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "createInstrumentListCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InstrumentListCompoWithPermValues"
        }
      }
    },
    "createInstrumentListInput" : {
      "type" : "object",
      "required" : [ "code", "dataSecuProfCode", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the list\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "queryDefinition" : {
          "type" : "string",
          "description" : "This attribute is only used for the Web packaging.\r\nThis Field contains the query definition used by the dynamic search."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        },
        "validityPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days after the last reconstruction of a constrained list according to constraint definition, for which the enumerated list is deemed valid.\r\n\r\nSpecial values:\r\nNULL - The list is rebuilt every time it is used\r\n0    - The list is rebuilt only if any object from one of the underlying entity (portfolio, instrument etc...) was modified. The system performs a check using all entities listed in the constraint definition.\r\n\r\nE.g. a portfolio group is defined as all portfolios managed by 'Smith' and with a reference currency equal to USD. For performance reasons this list instead of being systematically recomputed at request, is in fact stored as an enumerated list (although the definition is also associated to the list occurrence). Manager 'Smith' specifies however that the composition of the list should never be older than 7 days. When a request to use this list is made, the system checks that the last reconstruction date is not older than the current date less the validity period."
        }
      }
    },
    "createInstrumentListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ListWithPermValues"
        }
      }
    },
    "createInstrumentsInput" : {
      "type" : "object",
      "required" : [ "accrualRuleE", "activeF", "code", "complexityF", "contractNatE", "contractSizeN", "cutoffTimezoneCode", "cutoffTimezoneName", "fundIncomeStyleE", "issuerThirdCode", "marketThirdCode", "name", "natureE", "negociableF", "optStyleE", "optionClassE", "payFreqUnitE", "portfolioCode", "portfolioName", "portfolioStatusE", "portfolioThirdCode", "priceCalcRuleE", "redempCodeE", "refCurrCode", "reinvestmentAllowedF", "riskCurrCode", "riskGeoCode", "riskNatureE", "subNatE", "subtypeCode", "subtypeName", "switchOrderAmtF", "switchOrderPercF", "switchOrderUnitF", "taxGeoCode", "taxGeoName", "tradeNatureE", "typeCode", "typeName", "underlyInstrCode", "underlyInstrName", "underlyInstrNatureE", "usageNatureE", "valRuleE", "wrapEligibleF" ],
      "properties" : {
        "accrualRuleE" : {
          "type" : "string",
          "description" : "Specifies the method used to compute the number of days between two dates. For yield curves, the value defines the calendar convention for interpolation in the dates.\r\n\r\nThe following information applies to accrual rules 19 to 31.\r\n\r\nDATATYPE CALCONV (file main/cldr.h, version 1.68, line 92)\r\n\r\nCALCONV: data type for calendar conventions\r\n--------------------------------------------\r\n\r\n\r\n            ACTACT\r\n            ACTLEAP\r\n            ACTAFB\r\n            ACTEUROBOND\r\n            ACTFRF\r\n            EU30360\r\n            EU30E360\r\n            EU30E365\r\n            US30360\r\n            US30E360\r\n            ACT365\r\n            ACTNL365\r\n            ACT360\r\n            EU30EP360\r\nCALCONV\r\n\r\nThe main purpose of the calendar convention is to define the day count fraction used, e.g. when computing accrued interest over a certain time period. The day count fraction is in general computed as:\r\n\r\nNumber of days in period / Number of days per year.\r\n\r\nThe time period in question is defined to go from, and including, the period start date  to, but excluding, the period end date.\r\n\r\nThe definition of these is described below, followed by a short note on market practice.\r\n\r\nThe definitions are in accordance with the ISMA publication \"Bond Markets: Structures and Yield Calculations\" (1998) by Patrick Brown and the ISDA note \"Emu and Market Conventions: Recent Developments\" (1998).\r\n\r\nNumber of days in period\r\n------------------------\r\n\r\nFor the ACT based conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, ACT365, ACT360, the number of days between the two dates is computed as the actual number of calendar days in the period, including 29 February if it occurs in the period. For ACTNL365, which is used in Japan, 29 February is never counted.\r\n\r\nFor the 30-day month based conventions, EU30360, EU30E360, EU30E365, EU30EP360, US30360, US30E360, the number of days between two days - written on the form day-month-year as d1m1y1 and d2m2y2 - is computed according to the formula:\r\n\r\n        360 * (y2 - y1) + 30 * (m2 - m1) + (d2 - d1)\r\n\r\nwhere the original dates are modified according to the rules below:\r\n\r\nEU30360, US30360 convention (also know as the \"30-day month U.S. method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 and modified d1 = 30 then d2 is set to 30.\r\n\r\nEU30E365, EU30E365, US30E360 convention (also known as the \"30-day European method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 30.\r\n\r\nEU30EP360 convention:\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 1, m2 (and possibly y2) is updated to next month.\r\n\r\nNumber of days per year\r\n-----------------------          .\r\n\r\nFor the 360-days conventions, EU30360, EU30E360, EU30EP360, US30360, US30E360, ACT360, the number of days per year is 360.\r\n\r\nFor the 365-days conventions, EU30E365, ACT365, ACTNL365, the number of days per year is 365.\r\n\r\nFor the actual-days conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, the number of days per year is the actual number of days per year, differing in the processing of leap years in the following manner:\r\n\r\nACTACT convention: The number of days per year is the actual number of days from the period start date and one year ahead.\r\n\r\nACTAFB: If the period is shorter than one year then the number of days is 366 if 29 February occurs in the period. Otherwise it is 365.\r\n\r\nIf the period is longer than one year then the period is split into one year sub-periods -counting backwards from the period end date - plus the remaining initial stub period of length shorter than one year. The day count fraction is the sum over the day count fractions of the sub-periods. The stub period is treated in accordance with the first rule and the remaining year-long periods have a day count fraction of 1.\r\n\r\nACTEUROBOND: If the period equals a whole year, then the number of days per year equals the actual number of days in the period. If the period is not a whole year, then the number of days per year equals the number of days in the calendar year of the end period date.\r\n\r\nACTFRF: The number of days per year is the actual number of days from the end period date and one year back.\r\n\r\nACTLEAP: The period is split into the periods that are in leap and non-leap years. In the former periods the number of days per year is 366 while in the latter periods the number of days is 365. The day count fraction is the sum over the day count fractions of the sub-periods.\r\n\r\nMarket practice\r\n---------------\r\n\r\nThe actual-actual calendar conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, are used in the swap (floating leg) and bond markets. The recommendation to use actual-actual in the new euro denominations has highlighted the differences between the conventions even though they only differ in the number of days per year when considering leap years.\r\n\r\nACTACT              Original SCecon convention.\r\n\r\nACTLEAP             ISDA convention for swaps. It has been proposed\r\n                    to switch to ACTAFB.\r\nACTAFB              AFB convention. Recommended new ISDA convention.\r\nACTEUROBOND         Used in the Eurobond market.\r\nACTFRF              Used in the French market.\r\n\r\nThe 30-month calendar conventions, EU30360, EU30E360, EU30E365, US30360, US30E360, EU30EP360, are used swap (fixed leg) and bond markets.\r\n\r\nEU30360, US30360    Used in Finland\r\nEU30E360, US30E360  Previous standard in Europe. Still used in Denmark,\r\n\r\n                    Sweden, Holland, Belgium, and Austria.\r\nEU30EP360           Used in Switzerland.\r\n\r\nThe actual-360 convention, ACT360, is used in money and swap (floating leg) markets.\r\n\r\nThe actual-365 conventions, ACT365 and ACTNL365, are used in Norway, Canada, and Japan.",
          "enum" : [ "Default", "30E/360", "30/360 (Feb)", "30/360 (Def)", "30US/360", "Actual/365", "365/365", "Actual/Actual", "Actual/360", "Actual+1/365", "Actual/Actual (US)", "30E/365", "30/360", "30E/Actual", "30US/365", "30US/Actual", "Actual+1/Actual", "Actual+1/360", "30/360+1 (Italian BTP)", "ACTACT", "ACTLEAP", "ACTAFB", "ACTEUROBOND", "ACTFRF", "EU30360", "EU30E360", "EU30E365", "US30360", "US30E360", "ACT365", "ACTNL365", "ACT360", "EU30EP360", "BUS252" ]
        },
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Financial Instrument. If a Financial Instrument is inactive (active_f=0), it is not displayed in the default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date at which the Instrument exists or is issued. This attribute is purely informational for some Instruments. For bonds, it generally corresponds to the issue date. For Options, it specifies the date from which an option can be exercised. The option style is used in functions to distinguish between European and American Options.\r\nIf necessary, information on an Issue, particularly if it is in the future or if it is partial, can be stored in an Issue_or_Redemption Event."
        },
        "capTaxRateP" : {
          "type" : "number",
          "description" : "Specifies the amount of capital gains applied to a position in this security."
        },
        "code" : {
          "type" : "string",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc."
        },
        "complexityF" : {
          "type" : "boolean",
          "description" : "This field is used to specify the complexity of an instrument. \r\nIt could be initialised by a default value based on other attributes of the instruments such as the nature, the risk-nature, the currency, the market..."
        },
        "contractNatE" : {
          "type" : "string",
          "description" : "Specifies the default characteristics of a Futures contract for calculating conversion factors.",
          "enum" : [ "<None>", "CBOT futures 2 yr & 5 yr notes", "LIFFE long gilt contract", "MATIF French bond contract", "TSE Japanese bond contract", "LIFFE bond contract", "LIFFE Italian BTP contract", "Montreal Canadian contract", "MEFF Spanish 10 yr contract", "MEFF Spanish 3 yr contract", "LIFFE Spanish Bono contract", "CBOT fut. US bond & 10 yr note" ]
        },
        "contractSizeN" : {
          "type" : "number",
          "description" : "The size of one contract. The general practice in option dealing is to trade contracts that cover a fixed quantity of underlying instruments, e.g. 3 option contracts to buy 100 IBM stock at 145 USD. The quantity for the above example is stored in the database as 300. The contract size is 100. The quantity displayed or entered by the user is 3 (quantity/contract size). \r\nThe default value is 1."
        },
        "cutoffFixTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time between 00:00 and 23:59"
        },
        "cutoffTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Cut-off time is the deadline mutual fund company sets for investors to enter orders on this fund. \r\nWhen trade occurs after this time, the fund will be based on another net asset value.\r\nThe time format must be 24h. Example, enter 14:30 for 2:30 pm."
        },
        "cutoffTimezoneCode" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "cutoffTimezoneName" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence (see the documentation on the multi-lingual features for information on changing languages)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date at which the Instrument ceases to exist. In theory, there must be no positions in this Instrument after the end date. In practice, however, due to possible administrative or financial delays, this may not always be the case. This field is not mandatory but if completed it must be greater than or equal to the Begin Date."
        },
        "exerQuoteN" : {
          "type" : "number",
          "description" : "Identifies the exercise quote (strike) applicable to the underlying instrument when the redemption quote is applicable to the instrument. It is used for structured products that embed terms and conditions relative to an underlying with a strike.\r\n\r\nApplicable for structured product definition management."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the instrument.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpoSubscriptionF" : {
          "type" : "boolean",
          "description" : "Indicator to show that the IPO subscriptions are possible in the instrument. It is determined by the way of comparing the current date and if it is later than the subscription begin date and earlier than the date specified as cut-off date for the IPO subscription. \r\n0=Indicates that the IPO subscription is not enabled for the instrument (current date earlier than subscription begin date or later than cut off date)\r\n1=Indicates that the IPO subscriptions are possible for the instrument(current date later than subscription begin date and earlier than cut off date)"
        },
        "extIsinSynC" : {
          "type" : "string",
          "description" : "ISIN\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIN code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_ISIN_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extLastPriceN" : {
          "type" : "number",
          "description" : "Last Price\r\n\r\nThis is the last price of the instrument based on the system date. The INSTR_PRICE() keyword is used to display the value.\r\n\r\nThis extended attribute cannot be edited by the user and requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). The attribute is used only for the Web Packaging."
        },
        "extOngoingIpoF" : {
          "type" : "boolean",
          "description" : "Indicator to show if the instrument, which came up with an IPO, is listed in the secondary market or not. \r\n0=Indicates that the IPO instrument is listed in the market (current date later than first dealing date)\r\n1=1.\tIndicates that the IPO instrument is not yet listed in the market (current date earlier than first dealing date)"
        },
        "extRatingC" : {
          "type" : "string",
          "description" : "Rating\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the rating of the instrument.\r\nThe definition of the rating's code, to be used, has to be set through the parameter DS_RATING_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSectorC" : {
          "type" : "string",
          "description" : "Sector\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIC code of the instrument's sector.\r\nThe definition of the sector's code, to be used, has to be set through the parameter DS_SECTOR_INSTRUMENT\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTelekursSynC" : {
          "type" : "string",
          "description" : "Telekurs\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the Telekurs code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_TELEKURS_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faceValueN" : {
          "type" : "number",
          "description" : "The smallest nominal value unit for a bond or face value of a share, expressed in the Currency of the Financial Instrument."
        },
        "firstCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Specifies the date at which the first coupon is paid."
        },
        "fixD" : {
          "type" : "string",
          "format" : "date",
          "description" : "For structured products, it is the date at which the underlying price is determined to define the pay off of the instrument depending on the terms and conditions. \r\n\r\nApplicable for structured product definition management."
        },
        "fundIncomeStyleE" : {
          "type" : "string",
          "description" : "Indicates, how earnings from the funds' constituents are handled by the fund management.",
          "enum" : [ "<None>", "Growth", "Dividend" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "interestRateP" : {
          "type" : "number",
          "description" : "The interest rate of income to be paid. The payment is always in the currency of the Instrument. This field is also used to indicate the nominal interest rate of a notional instrument (deliverable) that underlies a bond futures contract."
        },
        "issueQtyN" : {
          "type" : "number",
          "description" : "The actual number of Financial Instruments issued to the market.\r\nNote that this is NOT the amount traded on the market."
        },
        "issueQuoteN" : {
          "type" : "number",
          "description" : "Specifies the quote at which the instrument was issued."
        },
        "issuerThirdCode" : {
          "type" : "string",
          "description" : "Specifies the third party that issued the instrument."
        },
        "lastCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "For bonds, date at which the last coupon is paid."
        },
        "lastPriceN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "lastQuoteN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "marketThirdCode" : {
          "type" : "string",
          "description" : "Specifies the main market in which the instrument is quoted.\r\nThis market is used in the default process for retrieving prices."
        },
        "minTradeQtyN" : {
          "type" : "number",
          "description" : "The minimum quantity of an instrument that may be traded. This field may be used in conjunction with the odd lot quantity.\r\n\r\nFor example, for a particular instrument, the minimum trade size may be 5000 units (minimum trade quantity) and then available in increments of 1000 (odd lot) thereafter."
        },
        "minTradingAmtM" : {
          "type" : "number",
          "description" : "Defines the Minimum Trading Amount of an instrument below which trades are not executed at the market price."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "negociableF" : {
          "type" : "boolean",
          "description" : "Specifies if the instrument is directly negotiable or not, e.g. a notional bond or an instrument that is generated for risk exposure purposes may not be negotiable."
        },
        "oddLotQtyN" : {
          "type" : "number",
          "description" : "Minimum quantity of the instrument below which trades are not executed at the market price."
        },
        "optStyleE" : {
          "type" : "string",
          "description" : "Specifies when the Option can be exercised.",
          "enum" : [ "<None>", "American", "European", "Bermudan" ]
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Specifies if the holder of an Option has the right to buy or sell the underlying.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "payFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "For Bonds, this field specifies the number of payment frequency units between two payments.\r\nFor Stocks and Fund Shares, specifies the frequency of dividend payments.\r\nFor Options, specifies the frequency. \r\nFor Rates whose subtype is set to Par yield, specifies the frequency of payoffs if the rate is a security with payoffs. Typically, this is used for rates that underly floating rate indexes, and CMT and CMS swaps where the underlying is a par yield rate of a 5-year Treasury."
        },
        "payFreqUnitE" : {
          "type" : "string",
          "description" : "Specifies the unit of the Payment Frequency.\r\nSee the description of the Payment Frequency attribute.\r\nThis attribute is complemented by the Frequency attribute that specifies the number of units, e.g. 1 week, 2 weeks, 4 months. The permitted values are:\r\n0. No periodicity\r\n4. Monthly\r\n5. Quarterly\r\n6. Semi-annually\r\n7. Annually",
          "enum" : [ "<None>", "Day", "Business Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioStatusE" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "portfolioThirdCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "priceCalcRuleE" : {
          "type" : "string",
          "description" : "Specifies the default method for obtaining the price from the quote of a financial instrument.",
          "enum" : [ "<None>", "Quote", "Quote/100", "Partially Paid Stocks", "Partially Paid Bonds", "Stocks Quoted in %", "Bonds Quoted in Unit", "Actuarial Yield", "Discount Rate", "Add-On Rate", "Quoted with AI", "Quoted in Unit with AI", "TCN", "Annualised Rate", "Quote Life", "Euro-Futures", "FRA", "Australian Future", "Part. Paid Bonds in Unit", "Part. Paid Stocks in Prct", "Price calculation Factor", "Discount Yield", "Basis Points", "Quote in Unit", "Australian Future (flexible)", "NPV", "Chilean Bond (TERA)", "Portfolio Specific Price" ]
        },
        "redempCodeE" : {
          "type" : "string",
          "description" : "Specifies if the Redemption data for this financial instrument is stored in the financial Instrument or the Issue_or_Redemption Events table.",
          "enum" : [ "Final Redemption in instrument", "Final Redm only in instrument", "All data in iss_redm_event" ]
        },
        "redempQuoteN" : {
          "type" : "number",
          "description" : "Market quotation of the exercise of a term contract expressed in a specific currency via a relationship. Can also be the market quotation of the redemption quote.\r\nNB. Default price calculation rule of the underlying financial instrument."
        },
        "refCurrCode" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "refCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "reinvestmentAllowedF" : {
          "type" : "boolean",
          "description" : "Indicates if the fund offers a choice for the investor to decide, whether the dividends of the fund should be paid out or re-invested.\r\nThis field can only be set for instrument with fund_income_style_e set to Dividend."
        },
        "riskCurrCode" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskGeoDenom" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskLevelN" : {
          "type" : "number",
          "description" : "This field is used in conjunction with the investment profile risk level in order to check whether the instrument does not excess the risk level tolerated by the investment profile."
        },
        "riskNatureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the risk incurred by this instrument. The general processing of instruments attempts to mirror an instrument with \"building block\" instruments whose risk nature is 1, 2, 3 or 4.",
          "enum" : [ "<None>", "Equity", "Interest", "Commodity", "Currency", "Hybrid", "Real Estate" ]
        },
        "roundLotAmtM" : {
          "type" : "number",
          "description" : "Defines the Round Lot Amount of an instrument that may be traded. This field may be used in conjunction with Minimum Trading Amount. \r\n\r\nFor example, the minimum Trading Amount can be 5000 EUR for a particular instrument and then, available only in increments of 1000 EUR (Round Lot Amount) thereafter."
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "switchOrderAmtF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in amount"
        },
        "switchOrderPercF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in percentage"
        },
        "switchOrderUnitF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in units"
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxGeoName" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxRateP" : {
          "type" : "number",
          "description" : "Specifies the withholding tax applied in the payment of a coupon or dividend."
        },
        "tickSizeN" : {
          "type" : "number",
          "description" : "Specifies the valid increment or decrement in the price of a financial instrument. The tick size amount can be defined using the script language if it is part of a more complex calculation."
        },
        "tradeNatureE" : {
          "type" : "string",
          "description" : "Specifies the Instrument Trade Nature.\r\n\r\nIt is useful for users who want to buy an instrument in the denomination of \"Amount\" (e.g., 1,000 EUR, 2,000 EUR, etc.)\r\n\r\nPermitted values (Nature) - Name:\r\n- 0 = <Default>\r\n- 1 = Quantity\r\n- 2 = Amount",
          "enum" : [ "default", "quantity", "amount" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrName" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrNatureE" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "usageNatureE" : {
          "type" : "string",
          "description" : "To specify usage nature that is applied for the instrument. Instrument usage can be listed, unlisted instrument or OTC instrument template. Default value is listed instrument.",
          "enum" : [ "None", "Unlisted Instrument", "Structured Notes Template", "OTC Derivatives Template", "Structured Product Template", "OTC Currency Derivatives Template", "Fiduciary Deposit Template", "Term Deposit Template" ]
        },
        "valRuleE" : {
          "type" : "string",
          "description" : "Specifies if and how this Financial Instrument is evaluated. If not quoted, the LAST PRICE DATE is null.",
          "enum" : [ "Quoted", "Price=0", "Price=1", "Composite", "Theoretical", "Reference Instrument", "Script", "Parent Price", "Simple Script" ]
        },
        "wrapEligibleF" : {
          "type" : "boolean",
          "description" : "This field indicates if the instrument is eligible for wrap services. \r\n\r\nWrap service is a means of consolidating various fees (administrative expenses, management expenses, commissions for trading, investment advice etc.,) into a single fee for all the services provided. \r\n\r\nAn instrument eligible for a wrap service implies that the various fees on that instrument can be wrapped into a single fee."
        }
      }
    },
    "createInstrumentsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InstrumentWithPermValues"
        }
      }
    },
    "createInterestCondInput" : {
      "type" : "object",
      "required" : [ "code", "natureE", "subNatE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Most common reference number used for this financial \r\ninstrument e.g. Telekurs Number, Cedel, ISIN, etc."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        }
      }
    },
    "createInterestCondSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InstrumentSubNatWithPermValues"
        }
      }
    },
    "createIssuerInput" : {
      "type" : "object",
      "required" : [ "activeF", "code", "issuerF", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "issuerF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the issuer selection list."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "createIssuerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/IssuerWithPermValues"
        }
      }
    },
    "createManagerInput" : {
      "type" : "object",
      "required" : [ "activeF", "code", "name", "wuiProfileE", "wuiRoleE" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Flag that indicates if a Manager is active or not."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier as seen by the user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, mainly used for reporting purpose.\r\nThis optional information is used as a default when there is no related occurrence in the 'denomination' table in a required language."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address (optional) of the manager."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the manager.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This information does not have to be unique."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Phone number of a manager."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier referencing one user occurrence.\r\nThe association with a user applies to the Web User Interface.\r\nThe associated user should be declared as a WUI user."
        },
        "wuiProfileE" : {
          "type" : "string",
          "description" : "This field holds information on the manager profile for the Triple'A Web User Interface (i.e. which screens he has access to). We deliver a few standard profiles (some of which are only used within the Advisor context).",
          "enum" : [ "Default", "RelationshipManager", "MarketingOfficer", "FinancialAnalyst", "Developer", "CdmSo", "PmAdmin", "RetailManager", "Audit", "Admin", "PortfolioManagerForT24", "PortfolioManager" ]
        },
        "wuiRoleE" : {
          "type" : "string",
          "description" : "This flied hold information on the manager profile for the Triple'A Web User Interface (i.e. what action he can do). We deliver in standard two roles (used only within the Advisor context).",
          "enum" : [ "Assistant", "HeadManager", "RlsAdmin", "AlertAdmin" ]
        }
      }
    },
    "createManagerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ManagerWithPermValues"
        }
      }
    },
    "createMarketSegmentInput" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "Long name of a market segment. Used for reporting purpose."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the market segment.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurence."
        }
      }
    },
    "createMarketSegmentSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/MarketSegmentWithPermValues"
        }
      }
    },
    "createModelConstraintElementInput" : {
      "type" : "object",
      "required" : [ "applicationFieldE", "constrBoundNatE", "constrTreatE", "creationModeE", "criticalnessE", "fixedCellF", "ignoreMarginF", "instrumentCode", "modelConstraintId", "natureE", "rightToRunF", "tradingOrderNatE" ],
      "properties" : {
        "applicationFieldE" : {
          "type" : "string",
          "description" : "For constraints defined on a list of instruments, this field indicates whether the constraint applies to each instrument of the list taken individually or whether the constrains applyy to the sum of the instrument contained in the list.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Single Instrument", "Sum of Instruments" ]
        },
        "calcMaxWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the maximum weight in per cent for the given constraint. If this weight is equal to y, you will have the constraint \"<= y %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "calcMinWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the minimum weight in per cent for the given constraint. If this weight is equal to x, you will have the constraint \">= x %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundCurrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For constraints in Amount (constr_bound_nat_e = 1) the field indicates the currency in which the amount is expressed.\r\n\r\nPlease note that this attribute is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundNatE" : {
          "type" : "string",
          "description" : "Indicates the unit value in which min_weight_n and max_weight_n are expressed.\r\n\r\nPlease note that some bound natures are only used in the context of Odyssey Components Suite and have no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Amount", "Percentage", "Quantity" ]
        },
        "constrNatE" : {
          "type" : "string",
          "description" : "Calculated attribute containing the constraint nature.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "constrTreatE" : {
          "type" : "string",
          "description" : "Indicates how the constraint has to be handled by the derivation process.\r\nUncovered Out Locking. A mandatory Security Out constraint is defined for a portfolio that does not hold the quantity in the constraint. This exception is not raised if the constraint processing has been set to optional.",
          "enum" : [ "<None>", "Mandatory", "Optional", "Check Only" ]
        },
        "creationModeE" : {
          "type" : "string",
          "description" : "This attribute is used to define how the modelling constraint (element) was created.",
          "enum" : [ "Triple A", "Dynamic" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "That field can be used to enter text information. For example you can describe the meaning of the constraint."
        },
        "dimInstrDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it tells whether the constraint element applies to a list of instruments or to a single instrument."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date specifying the end of validity of the modelling constraint element."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (element).\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (element) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (element) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (element) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fixedCellF" : {
          "type" : "boolean",
          "description" : "This field only applies to modelling constraints of nature Allocation.\r\nIf it is set to 'yes' it means that the derived weight should be equal to the weight of the asset allocation.\r\n\r\nIt is important to note that, if this flag is set to 1 (yes), you cannot define minimum or maximum weights."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "ignoreMarginF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Fluctuation Margin is ignored or not"
        },
        "instrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the list of instruments or the instrument to which the constraint element applies."
        },
        "instrumentCode" : {
          "type" : "string",
          "description" : "In the case of an element associated to a single instrument that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the instrument to which the constraint element is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For Modelling Constraint of nature Allocation: information to which market segment the constraint applies."
        },
        "maxWeightN" : {
          "type" : "number",
          "description" : "Indicates the maximum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to y, you will have the constraint <= y \"constr_bound_nat_e\".\r\n\r\nSee also min_weight_n anf fixed_cell_f."
        },
        "minWeightN" : {
          "type" : "number",
          "description" : "Indicates the minimum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to x, you will have the constraint >= x \"constr_bound_nat_e\".\r\n\r\nSee also max_weight_n anf fixed_cell_f."
        },
        "modelConstraintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the modelling constraint (set) to which the element is attached."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the type of constraint we are dealing with.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the priority with which the constraint has to be treated. Smallest values are treated first.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "tradingOrderNatE" : {
          "type" : "string",
          "description" : "Indicates the operation natures to which a Trading constraint applies.\r\n\r\nPlease note that this field only applies to modelling constraints of nature Trading in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Buy", "Sell", "Buy / Sell" ]
        }
      }
    },
    "createModelConstraintElementSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ModelConstraintElementWithPermValues"
        }
      }
    },
    "createModelConstraintInput" : {
      "type" : "object",
      "required" : [ "beginD", "compositeF", "criticalnessE", "natureE", "portObject", "portfolioCode", "portfolioName", "rightToRunF", "roundUnitE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This date tells when the constraint begins to apply."
        },
        "compositeF" : {
          "type" : "boolean",
          "description" : "Tells if a constraint portfolio should be put out of its composite because of the constraint"
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates to which type of object the constraint set applies.\r\n\r\nThe permitted values, which correspond to entities defined in the 'meta-dictionnary', are:\r\n\r\n- Portfolio\r\n- Portfolio List\r\n\r\nPlease note that the value Portfolio List is only used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Tells when the constraints stops to be active."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (set).\r\nDenomination is displayed in user's language, but if it is not available then the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (set) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (set) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (set) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastConstraintD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The last date when the constraint was modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxConstrainedGridN" : {
          "type" : "number",
          "description" : "Not Used."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the modelling constraint. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of a Portfolio or a List of Portfolios.\r\n\r\nThis field contains the ID of an occurrence in the table defined by the 'dim_port_dict_id' field (if not NULL).\r\n\r\nPlease note that a Portfolio List can only be used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roundUnitE" : {
          "type" : "string",
          "description" : "Not Used.",
          "enum" : [ "<None>", "0.001", "0.005", "0.01", "0.05", "0.1", "0.5", "1", "5", "10" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "createModelConstraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ModelConstraintWithPermValues"
        }
      }
    },
    "createNotepadInput" : {
      "type" : "object",
      "required" : [ "entitySqlnameC", "noteD", "object", "typeCode", "userCode" ],
      "properties" : {
        "entitySqlnameC" : {
          "type" : "string",
          "description" : "Reference to the table, to which the object (or occurrence) belongs, a notepad is associated to. \r\nThe authorised entity types, in this case, are the following: \r\nacc_plan, currency, deposit, format, format_element, ft_convention, ft_rate, ft_rate_history, geographic, instrument, list, manager, model_constr_elt, model_constraint, portfolio, sector, standing_instruction, strategy, strategy_history, third_party, trading_constraint, val_rule, val_rule_element"
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "noteC" : {
          "type" : "string",
          "description" : "Text of a notepad."
        },
        "noteD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time when the note was entered."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the occurrence to which a notepad is associated. This object belongs to the table referenced by its 'entity_dict_id'."
        },
        "titleC" : {
          "type" : "string",
          "description" : "Title of the notepad.\r\nUsed for selection purposes."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a notepad."
        },
        "userCode" : {
          "type" : "string",
          "description" : "Reference to the user who is the issuer of a notepad."
        }
      }
    },
    "createNotepadSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotepadWithPermValues"
        }
      }
    },
    "createPortfolioInput" : {
      "type" : "object",
      "required" : [ "activeF", "adminMgrName", "code", "commMgrCode", "commMgrName", "currencyCode", "currentWithdreqStatusE", "languageCode", "lastRebalancingStatusE", "name", "serviceTypeE", "statusE", "taxLotMngtE", "thirdCode", "thirdName" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Specifies whether the portfolio is active or not. This information is used in the Portfolio Selection screen which, by default, only proposes the active portfolios to the user."
        },
        "adminMgrName" : {
          "type" : "string",
          "description" : "Reference to the administrative manager of a portfolio."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique business identifier of the portfolio (i.e., is displayed to the end user). This field is mandatory."
        },
        "commMgrCode" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "commMgrName" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to the currency of the portfolio."
        },
        "currentWithdreqStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the current withdrawal request for the selected portfolio. It can be used by front-ends to show this information, by automatic rebalancing batches to avoid rebalancing portfolio with pending or failed requests and for defining alerts.",
          "enum" : [ "No Pending Request", "Partial Withdrawal Pending", "Full Liquidation Pending", "Partial Withdrawal Failed", "Full Liquidation Failed", "Full Liquidation Completed" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Portfolio denomination (not necessarily unique). This field is optional."
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is is a business indicator used on the portfolio dashboard. If the cash percentage in the portfolio is greater than a defined threshold, the indicator is set 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_CASH_PERCENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Not Constraints Compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the constraints are not compliant.\r\nWith Case Management: Set if the constraints are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. \r\nIf the number of days since the last operation ext_days_operation is higher than a defined threshold, the value is set to 1.\r\nThe threshold is defined with the parameter DS_DBOARD_PTF_DAYS_OPERATION.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiGoalNotCompliant" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates if the goal based portfolio is compliant with its objective or not.\r\nEquals to 1 if the goal is a risk, 0 otherwise."
        },
        "extBiInvalidIp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the portfolio investment profile is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiIpPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the investment profile review of the portfolio is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. If the market value change defined by ext_change_mkt_val_p has dropped below a defined threshold, the value is set to 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_MKT_VAL_DROP.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives Not Met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the objectives are not met.\r\nWith Case Management: Set if the objectives are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiReturn" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Return Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. It is, in fact, the same value as ext_ptf_threshold. A new format element has been created to clearly indicate that a dashboard indicator exists for this variable.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Percentage of Cash\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the percentage of cash, related to the portfolio's current market value, less the advances in cash.\r\nThe definition of cash is available in a constrained list on instruments (PCK_DS_CASH), which is set through the parameter DS_QUERY_LIQUIDITY.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Variation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the variation, in percentage, between the portfolio's current market value and its market value one year ago, related to the market value one year ago.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the date of the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt idicates the number of days between the current date and the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the portfolio.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extGoalComplianceStatusE" : {
          "type" : "string",
          "description" : "This attribute defines the compliance status of a goal based portfolio and can have the following permitted values:\r\n0 â€“ None \r\n1 â€“ On track, the goal based portfolio is on track based on its objective and time horizon. \r\n2 â€“ At risk, the goal based portfolio is at risk and may not achieve its objective in the defined time horizon.\r\n3 â€“ Completed, the goal based portfolio is completed.",
          "enum" : [ "None", "On track", "At risk", "Completed" ]
        },
        "extInvestProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute indicates the investment profile currently linked to the portfolio via a strategy link. If no investment profile is currently linked to the portfolio then this attribute's value will be empty.\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no investment profile defined yet\r\n2 â€“ Valid, the current investment profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current investment profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extIpExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current investment profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpName" : {
          "type" : "string",
          "description" : "Investment Profile Name\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the name of the investment profile containing the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpRiskLevelN" : {
          "type" : "number",
          "description" : "Indicates the investment profile risk level; the risk level of the investment profile that contains the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty. (See also ext_ip_name.)\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extIpRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non-compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extObjMeanDiff" : {
          "type" : "number",
          "description" : "Strategy Deviation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the medium values of all differences between the actual weight and the objective's weight with its margins of all investment structure elements (positions and market segments).\r\nA complete explanation of the computation can be found in section Strategy Deviation Computation of the Triple'A Plus Web Packaging Reference Guide\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extOneYearPtfRet" : {
          "type" : "number",
          "description" : "Portfolio return over the last 12 months\r\n\r\nThis is the return of the portfolio over the last 12 months (with adaptation to month end).\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extOpenOrders" : {
          "type" : "boolean",
          "description" : "Indicates whether orders are pending on the market for this portfolio. Orders are considered to be pending in the market if their status is between (including) the values as defined in the system parameters SYS_OPSTATUS_SENT and SYS_OPSTATUS_EXECUTED.\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide)."
        },
        "extOverUnderPerf" : {
          "type" : "number",
          "description" : "Ptf/Bench Over/Under Performance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the portfolio's return and its benchmark's return, if benchmark's return is available.\r\n\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPlPercent" : {
          "type" : "number",
          "description" : "Portfolio P&L (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the market value and the cost value of the portfolio, expressed in percentage of cost value.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfCur" : {
          "type" : "string",
          "description" : "Portfolio Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the portfolio's currency, which is a synonym's value. If it is not available, the portfolio's currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfHierLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). It defines the hierarchy level of the portfolio.\r\n\r\nThis attribute is used only for the Web Packaging.\r\n\r\nPossible values are:\r\n0 - Parent and not child\r\n1 - Parent and child\r\n2 - Not parent, but child\r\n3 - Not parent and not child"
        },
        "extRedemEndD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Fixed Income nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD2" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Derivative nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD3" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Money Market nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD4" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Forwards nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the portfolio in system currency.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extYtdPtfReturn" : {
          "type" : "number",
          "description" : "Portfolio year-to-date return\r\n\r\nThis is the return of the portfolio since the beginning of the year up to the current day.\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. The possible values are set by OAMS and cannot be modified."
        },
        "lastRebalancingD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date the portfolio was rebalanced."
        },
        "lastRebalancingStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the last rebalancing performed on the portfolio. It can contain either the last automatic rebalancing (batch) or manual process. However, for manual processes, only rebalancing performed with the publishing option is automatically handled. Otherwise, each front-end has the responsability to make this attribute up-to-date.",
          "enum" : [ "<None>", "Pending", "Completed", "Failed" ]
        },
        "managTypeExtDenomination" : {
          "type" : "string",
          "description" : "Management Type"
        },
        "mgtBeginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Management begin date (for information purposes only)."
        },
        "name" : {
          "type" : "string",
          "description" : "Portfolio name (not necessarily unique). This field is mandatory."
        },
        "parentPortId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the parent portfolio. This reference makes it possible to define a hierarchy of portfolios. To include a hierarchy when you use the financial functions, select the No Hierarchy checkbox on the Domain screen's Parameters tab. The checkbox label changes to Load Hierarchy, indicating that the hierarchy, if there is one, will be loaded."
        },
        "serviceTypeE" : {
          "type" : "string",
          "description" : "This field is used to specify the portfolio service type, meaning the manner a portfolio is managed by the bank (which services are provided).\r\n\r\nThis data is used in front-ends including in each input control applied in a context of a Suitability and Appropriateness tests.",
          "enum" : [ "<None>", "Discretionary", "Advisory", "Execution only", "Others", "Robo-advisor", "Goal-based" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the portfolio.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "taxLotMngtE" : {
          "type" : "string",
          "description" : "Specifies if tax lot are managed on the portfolio.\r\nNot yet implemented.",
          "enum" : [ "No", "Yes" ]
        },
        "thirdCode" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "thirdName" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Reference to the type of the portfolio."
        }
      }
    },
    "createPortfolioListInput" : {
      "type" : "object",
      "required" : [ "code", "currencyCode", "dataSecuProfCode", "masterOnlyF", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to a currency.\r\nThis reference is useful for portfolio list where it can be used to determine the default currency used to perform a financial function (e.g. a valuation)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "masterOnlyF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt determines if the list composition is to be shared by all business entities vs. being specific to each one. The system expects to find the composition of â€œMaster onlyâ€� list defined once; in the master business entity. Other lists that are not â€œMaster onlyâ€� have their compositions defined in each business entity.\r\nPlease note that list of portfolio cannot be master only in the multi-entity context. No portfolio can be defined in master."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        }
      }
    },
    "createPortfolioListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioListWithPermValues"
        }
      }
    },
    "createPortfolioStrategyLinkInput" : {
      "type" : "object",
      "required" : [ "beginD", "portfolioCode", "strategyCode", "strategyNatureE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin date of the link between an Object and a Strategy."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End Date of the link between an object and a strategy.\r\nNo NULL value can be inserted in this field. A NULL value, which means no end to the link between a strategy and an object, must be replaced by a date somewhen in the future."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "createPortfolioStrategyLinkSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioStrategyLinkWithPermValues"
        }
      }
    },
    "createPortfolioSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioWithPermValues"
        }
      }
    },
    "createPortfoliotListCompoInput" : {
      "type" : "object",
      "required" : [ "portfolioCode", "rankN" ],
      "properties" : {
        "portfolioCode" : {
          "type" : "string",
          "description" : "Reference to 'code' of portfolio"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for display purposes in which order the enumerated list occurrences appear on screens."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Indicates the validity date of the belonging of an object to a list. This field is optional and currently not maintained."
        }
      }
    },
    "createPortfoliotListCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioListCompoWithPermValues"
        }
      }
    },
    "createStrategyCompoInput" : {
      "type" : "object",
      "required" : [ "linkNatE", "object", "strategyHistoryId", "weightNatureE" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkNatE" : {
          "type" : "string",
          "description" : "This nature allows to specify which kind of link relates a strategy to an object.",
          "enum" : [ "Strategy", "Benchmark", "Strat&Bench", "Strategy (Check only)", "Constraint", "Cash Management", "Performance Fees" ]
        },
        "minBuyAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minBuyPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates the occurrence of the corresponding object type that belongs to the composition of the \"Benchmark\" or \"Investment Profile\"."
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the relative inportance of a strategy for a portfolio or list of portfolios.\r\n\"1\" is the most important. <NULL> are processed at least importance."
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'Strategy History' to which a 'Strategy Composition' necessarily belongs."
        },
        "weightN" : {
          "type" : "number",
          "description" : "This attribute allows defining the percentage of the strategy defined in the composition of a strategy with \"Composite\" nature. This is used when we want to define a Core-Satellite strategy structure.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations"
        },
        "weightNatureE" : {
          "type" : "string",
          "description" : "Describes how the Weight is computed.",
          "enum" : [ "<None>", "Relative", "Absolute", "Computed by Difference" ]
        }
      }
    },
    "createStrategyCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyCompoWithPermValues"
        }
      }
    },
    "createStrategyElementInput" : {
      "type" : "object",
      "required" : [ "complianceChronoCompNatE", "complianceChronoNatE", "constraintTemplateCode", "criticalnessE", "instrCode", "limitNatE", "natureE", "objTrackErrorCheckE", "recomNatE", "strategyHistoryId" ],
      "properties" : {
        "actTrackErrN" : {
          "type" : "number",
          "description" : "Current's value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "benchAnalysisObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an object (which entity depends on the value of the attribute bench_analysis_entity_id) which could be used to define a second type of benchmark for a particular strategy. \r\n\r\nNote that in the benchmark storage function, we test whether the user decided to use this new type of benchmark to build up his strategy. We assume that if at least one bench_analysis_object_id is not NULL, the strategy benchmark will take reference on this attribute."
        },
        "benchDimensionE" : {
          "type" : "string",
          "description" : "This attribute is used only for the Web Packaging.\r\n\r\nDimension of benchmark related to the strategy's objective. This attribute is directly related to the attribute [bench_entity_dict_id]",
          "enum" : [ "<None>", "Portfolio", "Instrument", "Strategy" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy nature such as 'allocation', 'model portfolio'."
        },
        "complianceChronoCompNatE" : {
          "type" : "string",
          "description" : "Indicates the type of Compliance Chrono nature.",
          "enum" : [ "None", "Measure", "Indicator" ]
        },
        "complianceChronoNatE" : {
          "type" : "string",
          "description" : "Indicates the Compliance Chrono nature.",
          "enum" : [ "None", "VaR Percent", "Volatility Percent", "Tracking Error Percent", "Expected Shortfall Percent", "Diversification Effect Percent", "Marginal VaR Percent", "VaR Amount", "Expected Shortfall Amount", "Marginal VaR Amount", "Diversification Effect Amount", "Risk Grade", "Volatility Amount", "Tracking Error Amount", "Shortfall Probability Percent", "Shortfall Probability Amount", "Marg. Volatility Percent", "Marg. Volatility Amount", "Marg. Tracking Error Percent", "Marg. Tracking Error Amount", "Marg. Expected Shortfall Percent", "Marg. Expected Shortfall Amount", "EVaR Percent", "EVaR Amount", "Marginal EVaR Percent", "Marginal EVaR Amount", "TVaR Percent", "TVaR Amount", "Marginal TVaR Percent", "Marginal TVaR Amount", "Beta", "Super Hedging Price", "Information Ratio", "Sharpe Ratio", "Treynor Ratio", "Jensen's Alpha", "Risk Level", "Expected Return Percent", "Expected Return Amount", "Product Risk Class" ]
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute returns the severity set at Strategy & Constraint level.\r\n\r\nActivating the Case Management Component, the severity is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nthe case's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nthe case's severity determines what are Cases that must be clarified.\r\n\r\nUsing the Constraint Breach facility, this attribute determines the level to which a constraint is blocking when passing an Order into an Order Session (Order Entry, Allocate Order and Strategy Reconciliation).\r\n\r\nSee Orders & Productivity Guide.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Description of the strategy element. Useful for \"unstructured constraint\" strategy element."
        },
        "effTrackErrN" : {
          "type" : "number",
          "description" : "Effective's Value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "In case of an objective which is described in tem of a reference to an other object, an additive (positive or negative) margin can be applied to it."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrCode" : {
          "type" : "string",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "instrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "limitNatE" : {
          "type" : "string",
          "description" : "Defines thetype of limit for the strategy objective. This information is significant only in the case of an 'allocation constraint' strategy.\r\n\r\nThe value of the limit is stored in the 'value_n' filed. \r\nFor instance, if the objective is 20% (Nature = Percentage) invested in the Swiss stock market (market segment). the lower limit could be 3%.\r\nTo interpret this figure, the nature of the objective has also to be taken into account.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Used only to be associated to a 'strategy element' belonging to an 'allocation' or an 'allocation constraint set'.\r\nIt contains a market segment identifier of the 'grid' associated to the strategy."
        },
        "maxN" : {
          "type" : "number",
          "description" : "Maximum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "minN" : {
          "type" : "number",
          "description" : "Minimum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "A mandatory \"hard-coded\" classifying attribute for distinctive processing.",
          "enum" : [ "Weight", "Minimum Weight", "Maximum Weight", "Modified Duration", "Modified Duration Contribution", "Beta", "Beta Contribution", "Current Return", "Current Return Contribution", "Minimum Rating", "Tracking Error", "Model Item", "Recommendation", "Constraint", "Model", "Contrib Model", "Contrib Model Item", "Reference Weight", "Surveyed Securities List", "Risk" ]
        },
        "objTrackErrMarginN" : {
          "type" : "number",
          "description" : "Objective's Margin linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrN" : {
          "type" : "number",
          "description" : "Objective linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrorCheckE" : {
          "type" : "string",
          "description" : "Indicates if the Objective's Tracking Error is checked or not.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return.\r\n\r\nPermitted values are:\r\n\r\n0: not checked\r\n1: checked",
          "enum" : [ "Not Checked", "Checked" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The instrument or market segment priorities are used to define, in the case of purchases, the order the instruments are processed for buys. Two or more instruments having the same priorities shall be purchased as to correct the highest deficits first, as currently done.\r\nIn the case of recommendation lists, under the MARKET_SEGMENT_RANK system parameter set, the priority_n shall play the role of the rank_n, relegated in this context to a display role only."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The rank is part of the logical indentifier of the strategy element. It will be used for display purposes."
        },
        "recomNatE" : {
          "type" : "string",
          "description" : "This information is useful for 'model portfolio' or 'recommendation list'.",
          "enum" : [ "<None>", "Buy", "Increase", "Keep", "Reduce", "Sell", "Neutral" ]
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'strategy history' to which a 'strategy element' necessarily belongs to."
        },
        "valueN" : {
          "type" : "number",
          "description" : "Defines the value of  the strategy objective.\r\nFor instance, the objective could be 20% (Nature = Percentage)  invested in the Swiss stock market (market segment), or a Beta of 1 (Nature = Beta) for the overall portfolio."
        }
      }
    },
    "createStrategyElementSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyElementWithPermValues"
        }
      }
    },
    "createStrategyHistoriesInput" : {
      "type" : "object",
      "required" : [ "beginD", "strategyCode" ],
      "properties" : {
        "applicD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Strategy application date: it allows to distinguish the validity date from the application date.\r\nIn R3.50, just for information purpose."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin Date of a 'Strategy History'. This date is part of the 'Strategy History' primary key.\r\nThis information is combined with the 'End Date' to check that, for the same 'Strategy', there is no overlapping of occurrences in 'Strategy History'."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see the 'Denomination' table)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of a 'Strategy History'.\r\nThis parameter is optional. No end date provided means no end to the link between a strategy and an object."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy history.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy history in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy history in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy history in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Reference of the strategy to which a strategy history necessarily belongs to."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "createStrategyHistoriesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyHistoryWithPermValues"
        }
      }
    },
    "createStrategyInput" : {
      "type" : "object",
      "required" : [ "benchFreqUnitE", "code", "complianceFreqUnitE", "criticalnessE", "heartUploadE", "irregularF", "name", "natureE", "relativeMarginF", "retDetLevE", "rightToRunF", "riskF", "subNatureE" ],
      "properties" : {
        "benchFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of unit of bench_freq_unit_e. See this attribute for more information."
        },
        "benchFreqUnitE" : {
          "type" : "string",
          "description" : "Used in conjunction with bench_freq_n, it indicates the \"logical\" rebalancing frequency, strating on the strat_rebal_d. This information is used during the Benchmark Storage process: if the frequency of rebalancing AND the strat_rebal_d are not void, the strategy will be rebalanced at regular dates, ie. the current physical weights are stored instead of the dynamic weight.\r\n\r\nExample : Benchmark Storage, on a monthly basis, starting on 31/12/01, ending on 31/03/02, with a strat_rebal_d=18/11/00 and logical frequency of 1 month, the storage will be done on the following dates :\r\n\r\n1. 31/12/01 - 18/01/02\r\n2. 18/01/02 - 31/01/02\r\n3. 31/01/02 - 18/02/02\r\n4. 18/02/02 - 28/02/02\r\n5. 28/02/02 - 18/03/02\r\n6. 18/03/02 - 31/03/02",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy natures such as 'allocation' or 'model portfolio'."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence as seen by the user."
        },
        "complianceFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the Risk Strategy required frequency update.\r\nThe compliance frequency unit is defined by day, week, month, quarter, semester, year."
        },
        "complianceFreqUnitE" : {
          "type" : "string",
          "description" : "The compliance frequency is defined as number of frequency unit.",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nusing Case Management Component, this value determines what are Cases that must be clarified.\r\n\r\nUsed for Asset Allocation, Model Portfolio and Constraint Set.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long Name for a strategy."
        },
        "dimGridDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "It allows you to assign a grid or a grid list to a strategy."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "Allows to specify for a model portfolio the global fluctuation margin that is applied to each financial instrument composing the model portfolio when  compared to the real portfolio."
        },
        "gridObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Allows users to assign a grid list or a grid to a strategy.\r\nMoreover, the user can assign a grid/grid list to model portfolios or recommendation lists. \r\nPlease refer to the Triple'A Orders and Productivity Guide for more details on this feature."
        },
        "heartUploadE" : {
          "type" : "string",
          "description" : "Only used if you implement the Triple'A - HEART interface. This attribute tells whether or not the strategy is uploaded in HEART.",
          "enum" : [ "No", "Yes", "To Delete" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "invProfRiskLevelN" : {
          "type" : "number",
          "description" : "This field stores the level of the risk that the Investment Profile can take."
        },
        "irregularF" : {
          "type" : "boolean",
          "description" : "Benchmark Storage process definition flag. It indicates for a storage period whether only the current - at from date - strategy history weights are used for computation or any new strategy history weights found between the from date and the till date are taken into account."
        },
        "lastComplianceUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date on which the Risk Strategy has been updated."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastStoredBenchD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A non-editable date at which the instrument has been stored the last time. Update by the Benchmark Storage function process."
        },
        "lastUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last update of the strategy. For information only."
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a 'market segment'.\r\nA 'model portfolio' or a 'recommendation list' strategy may be restricted to a particular 'market segment'."
        },
        "name" : {
          "type" : "string",
          "description" : "Short Name for a strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'. \r\nFor more information please see the Orders and Productivity Guide, and the Performance Analysis Reference Guide.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        },
        "parentStrategyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Technical identifier for a strategy. This field is normally not seen by the user.\r\nThis relation allows to indicates that a strategy is a 'sub-strategy' of a strategy of a higher level.\r\nFor instance, an asset allocation may have one model per market segment as sub-strategy."
        },
        "relativeMarginF" : {
          "type" : "string",
          "description" : "It defines how Margins are computed.\r\n\r\nExample:\r\nConsider an Investment Profile (Asset Allocation, with an objective weight = 10% on Chemicals, and a Model Portfolio with two Instruments, 50% Novartis & 50% Roche). \r\nThe Fluctuation Margin is defined as equal as 1% into Model Portfolio.\r\n\r\nStock\r\n  Stock/CHF\r\n    Chemicals                  Objve: 10%\r\n       Novartis                        5%\r\n       Roche                           5%\r\n\r\nThe computation of Fluctuation Margin is as follows:\r\nAbsolute: 1% * 10% = +/- 0.10%\r\nRelative: 1% * 5% = +/- 0.05%\r\nUnweighted Absolute: +/- 1%.",
          "enum" : [ "Absolute", "Relative", "Unweighted absolute" ]
        },
        "retDetLevE" : {
          "type" : "string",
          "description" : "Benchmark Storage detail level:\r\n1. Global\r\n2. Grid\r\n3. Instrument",
          "enum" : [ "Global", "Grid", "Instrument", "Use PSP" ]
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "riskF" : {
          "type" : "boolean",
          "description" : "Indicates whether a strategy is defined in term of risks exposure or not.\r\nThis information is used when comparing a portfolio to a strategy. If the flag is 'Yes', the 'risk exposure' valuation of the portfolio will be taken into account in the comparison process."
        },
        "stratRebalD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Benchmark Storage process definition date. Used in conjunction with bench_freq_n and bench_freq_unit_e. See this latter attribute for more information."
        },
        "subNatureE" : {
          "type" : "string",
          "description" : "A strategy sub-nature.",
          "enum" : [ "<None>", "Constant Weight", "Load Ratio", "Dummy Portfolio" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "createStrategySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyWithPermValues"
        }
      }
    },
    "createThirdCategoryInput" : {
      "type" : "object",
      "required" : [ "categoryCode", "categoryDenom", "thirdPartyCode" ],
      "properties" : {
        "categoryCode" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "categoryDenom" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Primary Key."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Code of the third party."
        }
      }
    },
    "createThirdCategorySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ThirdCategoryWithPermValues"
        }
      }
    },
    "createThirdPartyInput" : {
      "type" : "object",
      "required" : [ "activeF", "bestExecE", "cliClassifE", "clientF", "code", "commodDerivKnowE", "complexInstrKnowF", "creditDerivKnowE", "currDerivKnowE", "currencyCode", "economicStatKnowE", "educationLevelE", "gdprChildF", "gdprInscopeF", "gdprProcessRestrictionF", "indiceDerivKnowE", "intDerivKnowE", "languageCode", "legalEntityStatusE", "legalEntityTypeE", "managerCode", "managerName", "name", "otherComplexKnowE", "residGeoCode", "riskGeoCode", "secDerivKnowE", "statusE", "taxGeoCode" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is the date when the third party is foreseen as active"
        },
        "bestExecE" : {
          "type" : "string",
          "description" : "This field indicates whether the Best Execution Policy is signed or not.",
          "enum" : [ "None", "Not Defined", "Not Signed", "Signed", "Pending", "Missing" ]
        },
        "cliClassifE" : {
          "type" : "string",
          "description" : "Manages the client's categorisation. By default, it is set to None. \r\n\r\nThis field may be modified by authorised users if a professional client requests to be treated as a retail client for the Mifid compliance.",
          "enum" : [ "None", "Retail", "Professionnal Per Se", "Professionnal on Request", "Eligible Counterparty", "Institutional" ]
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "commodDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for commodities derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "complexInstrKnowF" : {
          "type" : "boolean",
          "description" : "This flag is used to specify whether the client knows complex instruments."
        },
        "creditDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for credit derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for currency derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the third party."
        },
        "economicStatKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for economic statistics.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "educationLevelE" : {
          "type" : "string",
          "description" : "This field is used to specify the level of education of the client. This could be one argument used to check if the client has the right level of knowledge in complex instruments.",
          "enum" : [ "None", "Not Defined", "High School", "Graduate", "Post-Graduate" ]
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the cash ratio business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCategory" : {
          "type" : "string",
          "description" : "The client category.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a field used for the client dashboard. It contains the client type.\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Constraints compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the constraints business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last operation.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the days since last operation business indicator fpr any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last proposal.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the number of days since the last proposal is larger than a defined threshold. The threshold is defined using parameter DS_DBOARD_CLIENT_DAYS_PROPOSAL.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiInvalidMifid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile of the client is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMifidPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile review of the client is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the market value drop business indicator for any of client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business inidcator used on the client dashboard.\r\nSet to 1 if the objectives met business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiProposalPending" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If there are proposals, which are in status \"Sent for Validation\", for the client's proposals, and the number of days between the last modifiction date for the oldest of these proposals, and the current date exceeds the value of the system paramter DS_DBOARD_CLIENT_PENDING_PROP, the value is set to 1.\r\n\r\nThis attribute can then be evaluated for the definition of pre-defined queries and alerts.  \r\n\r\n\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates whether at least one of the portfolios related to the client has an advisory service.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest cash percentage of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest drop in market value (expressed in %) of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last operation performed on all portfolios related to the client.\r\nIt is the most recent date of all Last Operation Date (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the Instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDateProposal" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Proposal Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last operation performed on all portfolios related to the client.\r\nIt is the minimum value of all Last Operation (in days) (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Proposal (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extMifidCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no MiFID profile defined yet\r\n2 â€“ Valid, the current MiFID profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current MiFID profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extMifidExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current MiFID profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extMifidRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non- compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated:It was impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency, which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extRiskCompliance" : {
          "type" : "string",
          "description" : "Risk Compliance is an extended attribute that cannot be edited by the user but requires a data pre-computation. In the standard packaging, this attribute is built from the results of the worst risk indicators of VaR %, Volatility %, Tracking Error %, Expected Shortfall %, Diversification Effect %, VaR amount, Expected Shortfall amount, Diversification Effect amount, Risk Grade, Volatility amount, Tracking Error amount, Shortfall Probability %, and Shortfall Probability amount.\r\n\r\nFor each indicator, the compliance is calculated as follows:\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Risk Compliant: Some risk objectives are reached. \r\n- Not Evaluated: No risk values calculated.\r\n\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Compliant â€“ High: Some risk objectives are reached and are based on severities     that are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some risk objectives are reached and are based on severities that are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some risk objectives are reached and are based on severities that are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Evaluated: No risk values calculated.\r\n\r\nThis attribute is used only for the web packaging.",
          "enum" : [ "No Risk Objective defined", "Risk Objective not evaluated", "Risk Compliant", "Not Risk Compliant - Low", "Not Risk Compliant - Medium", "Not Risk Compliant - High", "Not Compliant" ]
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the client in system currency. It is the total market value, in system currency, of all portfolios related to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "The fax number of the third party."
        },
        "gdprChildF" : {
          "type" : "boolean",
          "description" : "Considered as child for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprInscopeF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprProcessRestrictionF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "indiceDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for index derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "intDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for interest rate derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and  cannot be modified."
        },
        "lastContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of last contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "legalEntityStatusE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity status. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field can be extended by adding new permitted values (no overwrite of the standard ones).",
          "enum" : [ "None", "Prospect - New", "Client", "Ex-client", "Active", "Business Affiliate", "Business Associate", "Client Advisor", "Client Associated", "Client Related", "Inactive", "Other", "Prospect - Qualified", "Prospect - Opportunity", "Prospect - Lost", "Client-Related (user defined)", "Referrer", "Suspect", "Unknown", "Ex-Client Associated", "Ex-Client Related" ]
        },
        "legalEntityTypeE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity type. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field cannot be extended.",
          "enum" : [ "None", "Customer", "Person", "Organization", "Economic Group" ]
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "managerName" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "mifidLastModifD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This field is used to persist the date when the client data have been last modified."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "nextContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Planned date for next contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "otherComplexKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for other complex instruments.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "The telephone number of the third party."
        },
        "residGeoCode" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "residGeoExtDenomination" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "riskGeoExtDenomination" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "secDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for securities.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of a third party.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "In Progress", "Inactive" ]
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "taxGeoExtDenomination" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "telexC" : {
          "type" : "string",
          "description" : "The mask number of the third party."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Not used."
        }
      }
    },
    "createThirdPartyListInput" : {
      "type" : "object",
      "required" : [ "code", "dataSecuProfCode", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the list\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "queryDefinition" : {
          "type" : "string",
          "description" : "This attribute is only used for the Web packaging.\r\nThis Field contains the query definition used by the dynamic search."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        },
        "validityPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days after the last reconstruction of a constrained list according to constraint definition, for which the enumerated list is deemed valid.\r\n\r\nSpecial values:\r\nNULL - The list is rebuilt every time it is used\r\n0    - The list is rebuilt only if any object from one of the underlying entity (portfolio, instrument etc...) was modified. The system performs a check using all entities listed in the constraint definition.\r\n\r\nE.g. a portfolio group is defined as all portfolios managed by 'Smith' and with a reference currency equal to USD. For performance reasons this list instead of being systematically recomputed at request, is in fact stored as an enumerated list (although the definition is also associated to the list occurrence). Manager 'Smith' specifies however that the composition of the list should never be older than 7 days. When a request to use this list is made, the system checks that the last reconstruction date is not older than the current date less the validity period."
        }
      }
    },
    "createThirdPartyListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ListWithPermValues"
        }
      }
    },
    "createThirdPartySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ThirdPartyWithPermValues"
        }
      }
    },
    "createTradingConstraintInput" : {
      "type" : "object",
      "required" : [ "beginD", "code", "constraintTemplateCode", "criticalnessE", "name", "natureE", "portObject", "portfolioCode", "portfolioListCode" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the begin of validity of the trading constraint."
        },
        "code" : {
          "type" : "string",
          "description" : "Code of the trading constraint."
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This critical level lets you decide the degree to which a constraint is blocking when a portfolio manager wants to pass orders. You can access this feature from the order entry function when you run a compliance check. It is also accessible from the allocate order and strategy reconciliation functions.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the trading constraint."
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "dimPortName" : {
          "type" : "string",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the end of validity of the trading constraint ."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the trading constraint."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the trading constraint, not yet used.",
          "enum" : [ "Trading Constraint" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the portfolio or list of portfolios the trading constraint is linked to."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListCode" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListDenom" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "createTradingConstraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/TradingConstraintWithPermValues"
        }
      }
    },
    "createTypeInput" : {
      "type" : "object",
      "required" : [ "code", "instrNatE", "name", "operNatE", "rankN" ],
      "properties" : {
        "attributeDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeEntityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeName" : {
          "type" : "string",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "code" : {
          "type" : "string",
          "description" : "'Business' identifier of an occurrence. The combination of the 'code' and the 'attribute_dict_id' constitutes a unique key."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the type.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrNatE" : {
          "type" : "string",
          "description" : "Contains the instrument nature of the type. Is used mainly for selection purposes. It is possible to associate a type to an instrument with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence."
        },
        "operNatE" : {
          "type" : "string",
          "description" : "Indicates the nature of the operation related to this type. It is possible to associate a typeto an operation with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Buy", "Sell", "Income", "Investment", "Withdrawal", "Fees & Taxes", "Adjustment", "Unit Issue", "Unit Redemption", "Transfer", "BP Transfer", "Locking", "Portfolio Transfer", "Book Value Adjustment", "Init", "Combined" ]
        },
        "parentTypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the Parent Type (Type entity also). If the Parent Type is indicated, it's actually a sub type."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for types of intrument price and types of exchange rate the order in which the prices are taken when determining the \"default\" price for the day, e.g. close, bid, or ask.\r\nInstrument price or exchange rate types that  have a rank of 0 are not included in the default price process, e.g. fiscal prices."
        }
      }
    },
    "createTypeSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/TypeWithPermValues"
        }
      }
    },
    "getAddressSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Address"
        }
      }
    },
    "getAllRiskStrategySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - Risk Strategy",
          "items" : {
            "type" : "object",
            "properties" : {
              "selectedLanguage" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Selected Language"
              },
              "strategyHistory" : {
                "type" : "integer",
                "format" : "int64"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "complianceChronoNatE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Risk Indicators"
              },
              "criticalnessE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Severity"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "SERVER_FILTER"
              },
              "leaf" : {
                "type" : "boolean",
                "description" : "Is a leaf"
              },
              "rowOfId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of the row in the results returned by the format"
              },
              "strategyEltId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "minN" : {
                "type" : "number",
                "description" : "Min"
              },
              "complianceChronoNatL" : {
                "type" : "string",
                "description" : "Risk Indicators"
              },
              "strategyEltNatureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature of the strategy element"
              },
              "treeId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "criticalnessL" : {
                "type" : "string",
                "description" : "Severity"
              },
              "stratFilter" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "strategy filter"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "nature"
              },
              "treeParentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : " Tree parent id"
              },
              "objTrakErrN" : {
                "type" : "number",
                "description" : "Obj Track Err N"
              },
              "maxN" : {
                "type" : "number",
                "description" : "Max"
              },
              "strategyCode" : {
                "type" : "string"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "dataTypeE" : {
                "type" : "number",
                "description" : "Date Type of Risk indicator"
              }
            }
          }
        }
      }
    },
    "getAllStrategyRiskSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Risk measures on IP Strategy",
          "items" : {
            "type" : "object",
            "properties" : {
              "mainRiskStratMeasureP" : {
                "type" : "number",
                "description" : "Risk measure"
              },
              "mainRiskIndicatorE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Main risk Indicator"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "Server Filter"
              },
              "strategy" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "strategy"
              },
              "rowOfId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Row of Id"
              }
            }
          }
        }
      }
    },
    "getAllocationConstraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Allocation Constraints",
          "items" : {
            "type" : "object",
            "properties" : {
              "modelConstrEleId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Model Constraint Element Identifier"
              },
              "selectedLanguage" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Language"
              },
              "minWeightN" : {
                "type" : "number",
                "description" : "Minimum Weight"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "mainAssetAllocStrategyF" : {
                "type" : "boolean",
                "description" : "Main Asset Allocation Strategy Falg"
              },
              "criticalnessE" : {
                "type" : "string",
                "description" : "Criticalness"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "Filter"
              },
              "leaf" : {
                "type" : "boolean",
                "description" : "Is Leaf?"
              },
              "constrNatureE" : {
                "type" : "string",
                "description" : "Constraint Nature"
              },
              "rowOfId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Row of Id"
              },
              "marketSegmentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Market Segment Identifier"
              },
              "typeE" : {
                "type" : "string",
                "description" : "Type"
              },
              "treeId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Tree Id"
              },
              "modelConstraintId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Model Constraint Id"
              },
              "strategyDomainId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Domain Strategy ID"
              },
              "treeParentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Parent Tree Id"
              },
              "structureDenom" : {
                "type" : "string",
                "description" : "Structure Denom"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Strategy Id"
              },
              "stratHistId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Strategy History Id"
              },
              "maxWeightN" : {
                "type" : "number",
                "description" : "Max Weight"
              },
              "marketSegment" : {
                "type" : "string",
                "description" : "Market Segment"
              }
            }
          }
        }
      }
    },
    "getBalancePosTypeSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BalancePosType"
        }
      }
    },
    "getBusinessEntitiesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntity"
        }
      }
    },
    "getBusinessEntityAddressSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntityAddresses"
        }
      }
    },
    "getBusinessEntityUserComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntityUserCompo"
        }
      }
    },
    "getCategoriesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Category"
        }
      }
    },
    "getConstraintTemplatesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ConstraintTemplate"
        }
      }
    },
    "getContraintParametersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ConstraintParameter"
        }
      }
    },
    "getCurrenciesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Currencies"
        }
      }
    },
    "getCurrencySummarySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Currency List",
          "items" : {
            "type" : "object",
            "properties" : {
              "EXCH_RATE_OLD" : {
                "type" : "number",
                "description" : "Exchange Rate Yesterday"
              },
              "CHANGE_PERC" : {
                "type" : "number",
                "description" : "Change Percent"
              },
              "SERVER_FILTER" : {
                "type" : "boolean",
                "description" : "SERVER_FILTER"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "CCY" : {
                "type" : "string",
                "description" : "Currency"
              },
              "CHANGE_ABS" : {
                "type" : "number",
                "description" : "abs. Change"
              },
              "TREND" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Trend"
              },
              "UNDERL_CCY" : {
                "type" : "string",
                "description" : "Underlying Currency"
              },
              "EXCH_RATE" : {
                "type" : "number",
                "description" : "Exchange Rate"
              }
            }
          }
        }
      }
    },
    "getDisplayChronoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Currency Chrono",
          "items" : {
            "type" : "object",
            "properties" : {
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "DATE_D" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Date"
              },
              "CCY" : {
                "type" : "string",
                "description" : "Currency"
              },
              "portfolio_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "portfolio_id"
              },
              "UNDERL_CCY" : {
                "type" : "string",
                "description" : "Underlying Currency"
              },
              "EXCH_RATE" : {
                "type" : "number",
                "description" : "Exchange Rate"
              }
            }
          }
        }
      }
    },
    "getFourEyesBusinessEntitySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - View the current and proposed values of BE in Change Set",
          "items" : {
            "type" : "object",
            "properties" : {
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose (OData mandatory element)"
              },
              "currentType" : {
                "type" : "string",
                "description" : "Current value of the Business Entity type"
              },
              "currMainBusEntityF" : {
                "type" : "boolean",
                "description" : "Current flag to identify if this is the main business entity"
              },
              "propDefaultLoginF" : {
                "type" : "boolean",
                "description" : "Proposed flag to identify if this business entity is the default login"
              },
              "currentCode" : {
                "type" : "string",
                "description" : "Current value of the Business entity code"
              },
              "proposedType" : {
                "type" : "string",
                "description" : "Proposed value of the Business entity type"
              },
              "currDefaultLoginF" : {
                "type" : "boolean",
                "description" : "Current Flag to identify if this Business entity is the default login"
              },
              "userCode" : {
                "type" : "string",
                "description" : "User code "
              },
              "proposedCode" : {
                "type" : "string",
                "description" : "Proposed value of the Business Entity code"
              },
              "proposedDenom" : {
                "type" : "string",
                "description" : "Proposed value of the Business entity denom"
              },
              "changeSetCode" : {
                "type" : "string",
                "description" : "Code of the changeSet"
              },
              "currentDataProfile" : {
                "type" : "string",
                "description" : "Current value of the Business entity data profile"
              },
              "proposedRole" : {
                "type" : "string",
                "description" : "Proposed value of the Business entity role"
              },
              "currentDenom" : {
                "type" : "string",
                "description" : "Current value of the Business entity denom"
              },
              "propMainBusEntityF" : {
                "type" : "boolean",
                "description" : "Proposed flag to identify if this is the main business entity"
              },
              "currentRole" : {
                "type" : "string",
                "description" : "Current value of the Business Entity role"
              },
              "proposedDataProfile" : {
                "type" : "string",
                "description" : "Proposed value of the Business Entity data profile"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the Business entity"
              },
              "updateType" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Provides the type of the update to the Business Entity"
              }
            }
          }
        }
      }
    },
    "getFourEyesManagerFieldsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - View the current and proposed values of manager in Change Set",
          "items" : {
            "type" : "object",
            "properties" : {
              "currentPhone" : {
                "type" : "string",
                "description" : "Current values of Manager phone number"
              },
              "code" : {
                "type" : "string",
                "description" : "Manager Code"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose (OData mandatory element)"
              },
              "proposedEmail" : {
                "type" : "string",
                "description" : "Proposed values of Manager email"
              },
              "proposedCcy" : {
                "type" : "string",
                "description" : "Proposed value of Manager currency"
              },
              "changeSetCode" : {
                "type" : "string",
                "description" : "Code of the changeSet"
              },
              "proposedRole" : {
                "type" : "string",
                "description" : "Proposed value of Manager role"
              },
              "currentLanguage" : {
                "type" : "string",
                "description" : "Current value of Manager language"
              },
              "proposedName" : {
                "type" : "string",
                "description" : "Proposed value of Manager name"
              },
              "proposedLanguage" : {
                "type" : "string",
                "description" : "Proposed value of Manager language"
              },
              "currentName" : {
                "type" : "string",
                "description" : "Current values of the Manager name"
              },
              "proposedPhone" : {
                "type" : "string",
                "description" : "Proposed value of Manager phone number"
              },
              "currentCcy" : {
                "type" : "string",
                "description" : "Current value of Manager currency"
              },
              "currentRole" : {
                "type" : "string",
                "description" : "Current value of Manager role"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the manager"
              },
              "currentEmail" : {
                "type" : "string",
                "description" : "Current value of Manager email"
              }
            }
          }
        }
      }
    },
    "getFourEyesModelContraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Lists in-progress constraints",
          "items" : {
            "type" : "object",
            "properties" : {
              "validateRightF" : {
                "type" : "boolean",
                "description" : "Right to validate"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose"
              },
              "endDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "End Date"
              },
              "wfStatusE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Workflow status of the change set"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "Server Filter"
              },
              "shActionE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Action on Model Constraint"
              },
              "subTypeId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the change set"
              },
              "beginDate" : {
                "type" : "string",
                "format" : "date",
                "description" : "Begin Date"
              },
              "shActionL" : {
                "type" : "string",
                "description" : "Action Label"
              },
              "lastUpdateD" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Date of last update"
              },
              "changeSetCode" : {
                "type" : "string",
                "description" : "Code of the change set"
              },
              "updateRightF" : {
                "type" : "boolean",
                "description" : "Right to Update"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature"
              },
              "assignedManager" : {
                "type" : "string",
                "description" : "Assigned Manager "
              },
              "typeId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the change set"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier"
              },
              "portfolioCode" : {
                "type" : "string",
                "description" : "Portfolio Code"
              },
              "portfolioName" : {
                "type" : "string",
                "description" : "Portfolio Name"
              },
              "changeSetId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the change set"
              }
            }
          }
        }
      }
    },
    "getFourEyesStrategyHistorySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - Strategies  History from draft & to validate  - Change Set",
          "items" : {
            "type" : "object",
            "properties" : {
              "beginD" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Begin date of the strategy History"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "wfStatusE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Status of the OUS"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "SERVER_FILTER"
              },
              "shActionE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Action on strategy"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              }
            }
          }
        }
      }
    },
    "getFourEyesStrategySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - Strategies from draft & to validate - Change Set",
          "items" : {
            "type" : "object",
            "properties" : {
              "extManagerId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "External Investment Manager Id"
              },
              "selectedLanguage" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Selected Language"
              },
              "code" : {
                "type" : "string",
                "description" : "Code of the strategy"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "server filter"
              },
              "shActionE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Action on strategy"
              },
              "type" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Strategy Type"
              },
              "denomination" : {
                "type" : "string",
                "description" : "Denomination of the strategy"
              },
              "criticalnessL" : {
                "type" : "string",
                "description" : "criticalness of strategy"
              },
              "rankN" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Rank for sorting"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "validateRightF" : {
                "type" : "boolean",
                "description" : "Right to validate"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "internalManagerId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Internal Investment Manager Id"
              },
              "wfStatusE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Status of the Change Set"
              },
              "maxInvestmentAmount" : {
                "type" : "number",
                "description" : "Maximum Investment Amount"
              },
              "minInvestmentAmount" : {
                "type" : "number",
                "description" : "Minimum Investment Amount"
              },
              "investmentNature" : {
                "type" : "string",
                "description" : "Investment Nature"
              },
              "allocationNatureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Strategic / Tactical"
              },
              "lastUpdateD" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Date of the last strategy update"
              },
              "shActionL" : {
                "type" : "string",
                "description" : "Action on strategy"
              },
              "changeSetCode" : {
                "type" : "string",
                "description" : "Code of the Change Set"
              },
              "investmentCurrency" : {
                "type" : "string",
                "description" : "Investment Currency"
              },
              "updateRightF" : {
                "type" : "boolean",
                "description" : "Right to update"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "nature"
              },
              "intManagerCode" : {
                "type" : "string",
                "description" : "Internal Investment Manager Code"
              },
              "assignedManager" : {
                "type" : "string",
                "description" : "Assigned Manager "
              },
              "name" : {
                "type" : "string",
                "description" : "Name of the strategy"
              },
              "invProfRiskLevelN" : {
                "type" : "number",
                "description" : "Risk level of the Investment Profile"
              },
              "extManagerCode" : {
                "type" : "string",
                "description" : "External Investment Manager Code"
              },
              "subType" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sub Type"
              },
              "investmentType" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Investment Type"
              },
              "investmentSubType" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Investment Sub Type"
              },
              "changeSetId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the Change Set"
              }
            }
          }
        }
      }
    },
    "getFourEyesTradingConstraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Lists in-progress trading constraints",
          "items" : {
            "type" : "object",
            "properties" : {
              "beginD" : {
                "type" : "string",
                "format" : "date",
                "description" : "Displays begin date of the trading constraint"
              },
              "code" : {
                "type" : "string",
                "description" : "Displays code of trading constraint"
              },
              "listCode" : {
                "type" : "string",
                "description" : "Code of list"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "Server Filter"
              },
              "shActionE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Action on trading constraint"
              },
              "portfolioDenom" : {
                "type" : "string",
                "description" : "Portfolio Denomination"
              },
              "criticalnessL" : {
                "type" : "string",
                "description" : "Criticalness of Trading Constraint"
              },
              "onObjectName" : {
                "type" : "string",
                "description" : "Displays dimension concatenated with object name."
              },
              "dimPortDictId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Portfolio dimension id"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier"
              },
              "denom" : {
                "type" : "string",
                "description" : "Denomination"
              },
              "portfolioListDenom" : {
                "type" : "string",
                "description" : "Portfolio List - Denomination"
              },
              "constTemplateDenom" : {
                "type" : "string",
                "description" : "Constraint template denomination"
              },
              "objectId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Portfolio or List ID"
              },
              "validateRightF" : {
                "type" : "boolean",
                "description" : "Right to validate"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose"
              },
              "constraintTemplateCode" : {
                "type" : "string",
                "description" : "Code of Constraint Template"
              },
              "wfStatusE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Workflow status of the change set"
              },
              "subTypeId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "shActionL" : {
                "type" : "string",
                "description" : "Action Label"
              },
              "changeSetCode" : {
                "type" : "string",
                "description" : "Code of change set"
              },
              "updateRightF" : {
                "type" : "boolean",
                "description" : "Right to update"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature"
              },
              "name" : {
                "type" : "string",
                "description" : "Displays name of the trading constraint"
              },
              "assignedManager" : {
                "type" : "string",
                "description" : "Assigned checker"
              },
              "constraintTemplateId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "typeId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "portfolioCode" : {
                "type" : "string"
              },
              "changeSetId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the Change Set"
              }
            }
          }
        }
      }
    },
    "getGeographicSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Geographic"
        }
      }
    },
    "getGridMarketStructureSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Connect - Market Segment s from Grid",
          "items" : {
            "type" : "object",
            "properties" : {
              "selectedLanguage" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Selected Language"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "criticalnessE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Criticalness"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "SERVER_FILTER"
              },
              "leaf" : {
                "type" : "boolean",
                "description" : "Is a leaf"
              },
              "marketStructureSort" : {
                "type" : "string",
                "description" : "Market structure sort"
              },
              "marketSegmentName" : {
                "type" : "string",
                "description" : "Name of market segment"
              },
              "fluctMarginN" : {
                "type" : "number",
                "description" : "Margin"
              },
              "treeId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "nature"
              },
              "treeParentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : " Tree parent id"
              },
              "grid" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of GRID"
              },
              "valueN" : {
                "type" : "number",
                "description" : "Objective"
              },
              "marketSegment" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of market segment"
              },
              "marketSegmentDenom" : {
                "type" : "string",
                "description" : "Market Segment Denomination"
              }
            }
          }
        }
      }
    },
    "getGridSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Grid"
        }
      }
    },
    "getIndicesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Index List",
          "items" : {
            "type" : "object",
            "properties" : {
              "QUOTE" : {
                "type" : "number",
                "description" : "Quotation"
              },
              "CHANGE_PERC" : {
                "type" : "number",
                "description" : "Change %"
              },
              "QUOTE_OLD" : {
                "type" : "number",
                "description" : "Quotation yesterday"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "portfolio_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Portfolio id for precomputed data"
              },
              "CHANGE_ABS" : {
                "type" : "number",
                "description" : "Change absolut"
              },
              "INSTR_NAME" : {
                "type" : "string",
                "description" : "Instrument standardised name"
              },
              "TREND" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Trend"
              },
              "INSTR_DENOM" : {
                "type" : "string",
                "description" : "Instrument standardised name"
              },
              "INSTR_CODE" : {
                "type" : "string",
                "description" : "Code of instrument"
              }
            }
          }
        }
      }
    },
    "getInstrDisplayChronoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Instrument Chrono",
          "items" : {
            "type" : "object",
            "properties" : {
              "QUOTE" : {
                "type" : "number",
                "description" : "Quotation"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "PRICE" : {
                "type" : "number",
                "description" : "Price"
              },
              "DATE_D" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Date"
              },
              "CCY" : {
                "type" : "string",
                "description" : "Currency"
              },
              "portfolio_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Portfolio id for precomputed data"
              },
              "INSTR_NAME" : {
                "type" : "string",
                "description" : "Instrument standardised name"
              },
              "INSTR_DENOM" : {
                "type" : "string",
                "description" : "Instrument standardised name"
              },
              "INSTR_CODE" : {
                "type" : "string",
                "description" : "Code of instrument"
              }
            }
          }
        }
      }
    },
    "getInstrumentListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/List"
        }
      }
    },
    "getInstrumentListSummarySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Watch List",
          "items" : {
            "type" : "object",
            "properties" : {
              "QUOTE" : {
                "type" : "number",
                "description" : "Quotation"
              },
              "CHANGE_PERC" : {
                "type" : "number",
                "description" : "Change %"
              },
              "QUOTE_OLD" : {
                "type" : "number",
                "description" : "Quotation yesterday"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "CHANGE_ABS" : {
                "type" : "number",
                "description" : "Change absolut"
              },
              "ExtOngoingIPO" : {
                "type" : "boolean",
                "description" : "ExtOngoingIPO"
              },
              "InstrSubnature" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Instrument Subnature"
              },
              "CCY" : {
                "type" : "string",
                "description" : "Currency"
              },
              "portfolio_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Portfolio id for precomputed data"
              },
              "INSTR_NAME" : {
                "type" : "string",
                "description" : "Instrument standardised name"
              },
              "TREND" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Trend"
              },
              "INSTR_DENOM" : {
                "type" : "string",
                "description" : "Instrument standardised name"
              },
              "INSTR_CODE" : {
                "type" : "string",
                "description" : "Code of instrument"
              },
              "ExtIPOSubscription" : {
                "type" : "boolean",
                "description" : "ExtIPOSubscription"
              }
            }
          }
        }
      }
    },
    "getInstrumentsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Instrument"
        }
      }
    },
    "getInterestCondSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InstrumentSubNat"
        }
      }
    },
    "getInvestmentProfileStrategyDetailSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Management of IP that display AA market segments and linked MPs and RLs",
          "items" : {
            "type" : "object",
            "properties" : {
              "selectedLanguage" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Selected Language"
              },
              "mainAssetAllocStrategyF" : {
                "type" : "boolean",
                "description" : "Main Asset Allocation Strategy Falg"
              },
              "criticalnessE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Severity"
              },
              "linked_strat_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "id of linked strategies MP RL"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "SERVER_FILTER"
              },
              "linkedStratNatureL" : {
                "type" : "string",
                "description" : "Nature of the linked strategy"
              },
              "marketStructureSort" : {
                "type" : "string",
                "description" : "Market structure sort"
              },
              "marketSegmentName" : {
                "type" : "string",
                "description" : "Name of market segment"
              },
              "strategyEltId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "instrumentDenom" : {
                "type" : "string",
                "description" : "Denom of instrument"
              },
              "criticalnessL" : {
                "type" : "string",
                "description" : "Severity"
              },
              "linkedStratNature" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature of the linked strategy"
              },
              "treeParentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : " Tree parent id"
              },
              "rankN" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Rank"
              },
              "instr" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "instrument"
              },
              "valueN" : {
                "type" : "number",
                "description" : "Weight"
              },
              "linkedStratDenom" : {
                "type" : "string",
                "description" : "Denomination of the linked strategy"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "marketSegment" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "id of market segment"
              },
              "linkedStratCode" : {
                "type" : "string",
                "description" : "Code of the linked strategy"
              },
              "strategyHistory" : {
                "type" : "integer",
                "format" : "int64"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "leaf" : {
                "type" : "boolean",
                "description" : "Is a leaf"
              },
              "priorityN" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Priority"
              },
              "rowOfId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of the row in the results returned by the format"
              },
              "instrumentCode" : {
                "type" : "string",
                "description" : "Code of instrument"
              },
              "strategyEltNatureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature of the strategy element"
              },
              "fluctMarginN" : {
                "type" : "number",
                "description" : "Margin"
              },
              "treeId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "instrumentName" : {
                "type" : "string",
                "description" : "Name of instrument"
              },
              "stratFilter" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "strategy filter"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "nature"
              },
              "recomNatE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Recommendation Nature"
              },
              "strategyCode" : {
                "type" : "string"
              },
              "structureDenom" : {
                "type" : "string",
                "description" : "Name of market segment OR instrument code"
              },
              "linkedStratName" : {
                "type" : "string",
                "description" : "Name of the linked strategy"
              },
              "recomNatL" : {
                "type" : "string",
                "description" : "Recommendation Nature"
              },
              "marketSegmentDenom" : {
                "type" : "string",
                "description" : "Market Segment Denomination"
              }
            }
          }
        }
      }
    },
    "getInvestmentProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Investment Profile Information",
          "items" : {
            "type" : "object",
            "properties" : {
              "portfolio_code" : {
                "type" : "string",
                "description" : "Portfolio code"
              },
              "ext_ip_name" : {
                "type" : "string",
                "description" : "Investment profile name"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "seqno"
              },
              "ext_ip_rvw_status" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Invest. profile review status"
              },
              "ext_bi_ip_pnd_val" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Invest profile rvw pending val"
              },
              "ip_start_validity_d" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Investment profile start validity date"
              },
              "invest_profile_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Investment profile id"
              },
              "ext_ip_expiry_d" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Investment profile expiry date"
              },
              "ext_ip_risk_level_n" : {
                "type" : "number",
                "description" : "Investment profile - risk level"
              },
              "ext_bi_invalid_ip" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Investment profile invalid"
              },
              "PersonalisedStrategy" : {
                "type" : "boolean",
                "description" : "Personlised Strategy"
              },
              "ext_ip_cur_status" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Current invest profile status"
              }
            }
          }
        }
      }
    },
    "getIssuerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Issuer"
        }
      }
    },
    "getLanguageSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Language"
        }
      }
    },
    "getManagersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Manager"
        }
      }
    },
    "getMarketSegmentSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/MarketSegment"
        }
      }
    },
    "getMarketStructureSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - Market Segment s from Asset Allocation",
          "items" : {
            "type" : "object",
            "properties" : {
              "selectedLanguage" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Selected Language"
              },
              "minWeightN" : {
                "type" : "number",
                "description" : "Min Weight"
              },
              "mainAssetAllocStrategyF" : {
                "type" : "boolean",
                "description" : "Main Asset Allocation Strategy Falg"
              },
              "criticalnessE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Severity"
              },
              "linked_strat_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "id of linked strategies MP RL"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "SERVER_FILTER"
              },
              "instrId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "instrument"
              },
              "linkedStratNatureL" : {
                "type" : "string",
                "description" : "Nature of the linked strategy"
              },
              "marketStructureSort" : {
                "type" : "string",
                "description" : "Market structure sort"
              },
              "marketSegmentName" : {
                "type" : "string",
                "description" : "Name of market segment"
              },
              "strategyEltId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "Result" : {
                "type" : "string",
                "description" : "Result"
              },
              "instrumentDenom" : {
                "type" : "string",
                "description" : "Denom of instrument"
              },
              "criticalnessL" : {
                "type" : "string",
                "description" : "Severity"
              },
              "max_Value" : {
                "type" : "number",
                "description" : "Max Value"
              },
              "linkedStratNature" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature of the linked strategy"
              },
              "treeParentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : " Tree parent id"
              },
              "rankN" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Rank"
              },
              "min_Value" : {
                "type" : "number",
                "description" : "Min Value"
              },
              "instr" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "instrument"
              },
              "Firstlevel" : {
                "type" : "boolean",
                "description" : "First level"
              },
              "valueN" : {
                "type" : "number",
                "description" : "Weight"
              },
              "linkedStratDenom" : {
                "type" : "string",
                "description" : "Denomination of the linked strategy"
              },
              "critical_e" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "critical_e"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "levelN" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Level"
              },
              "maxWeightN" : {
                "type" : "number",
                "description" : "Max Weight"
              },
              "marketSegment" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "id of market segment"
              },
              "linkedStratCode" : {
                "type" : "string",
                "description" : "Code of the linked strategy"
              },
              "strategyHistory" : {
                "type" : "integer",
                "format" : "int64"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "leaf" : {
                "type" : "boolean",
                "description" : "Is a leaf"
              },
              "priorityN" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Priority"
              },
              "rowOfId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of the row in the results returned by the format"
              },
              "marketSegmentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "id of market segment"
              },
              "instrumentCode" : {
                "type" : "string",
                "description" : "Code of instrument"
              },
              "strategyEltNatureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature of the strategy element"
              },
              "fluctMarginN" : {
                "type" : "number",
                "description" : "Margin"
              },
              "treeId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "instrumentName" : {
                "type" : "string",
                "description" : "Name of instrument"
              },
              "stratFilter" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "strategy filter"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "nature"
              },
              "recomNatE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Recommendation Nature"
              },
              "strategyCode" : {
                "type" : "string"
              },
              "linkedStratName" : {
                "type" : "string",
                "description" : "Name of the linked strategy"
              },
              "recomNatL" : {
                "type" : "string",
                "description" : "Recommendation Nature"
              },
              "marketSegmentDenom" : {
                "type" : "string",
                "description" : "Market Segment Denomination"
              }
            }
          }
        }
      }
    },
    "getModelContraintElementSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ModelConstraintElement"
        }
      }
    },
    "getModelContraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ModelConstraint"
        }
      }
    },
    "getNotepadSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchNotepad"
          }
        }
      }
    },
    "getPortfolioListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioList"
        }
      }
    },
    "getPortfolioStrategyLinkSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioStrategyLink"
        }
      }
    },
    "getPortfolioSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Portfolio"
        }
      }
    },
    "getRatingAttribSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchRatingAttrib"
          }
        }
      }
    },
    "getRatingSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Rating"
        }
      }
    },
    "getRiskStrategySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - Risk Strategy",
          "items" : {
            "type" : "object",
            "properties" : {
              "selectedLanguage" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Selected Language"
              },
              "strategyHistory" : {
                "type" : "integer",
                "format" : "int64"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "complianceChronoNatE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Risk Indicators"
              },
              "criticalnessE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Severity"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "SERVER_FILTER"
              },
              "leaf" : {
                "type" : "boolean",
                "description" : "Is a leaf"
              },
              "rowOfId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of the row in the results returned by the format"
              },
              "strategyEltId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "minN" : {
                "type" : "number",
                "description" : "Min"
              },
              "complianceChronoNatL" : {
                "type" : "string",
                "description" : "Risk Indicators"
              },
              "strategyEltNatureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Nature of the strategy element"
              },
              "treeId" : {
                "type" : "integer",
                "format" : "int64"
              },
              "criticalnessL" : {
                "type" : "string",
                "description" : "Severity"
              },
              "stratFilter" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "strategy filter"
              },
              "natureE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "nature"
              },
              "treeParentId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : " Tree parent id"
              },
              "objTrakErrN" : {
                "type" : "number",
                "description" : "Obj Track Err N"
              },
              "maxN" : {
                "type" : "number",
                "description" : "Max"
              },
              "strategyCode" : {
                "type" : "string"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Identifier of strategy element"
              },
              "dataTypeE" : {
                "type" : "number",
                "description" : "Date Type of Risk indicator"
              }
            }
          }
        }
      }
    },
    "getSearchInstrumentsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchInstrument"
          }
        }
      }
    },
    "getSearchPortfoliosSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchPortfolio"
          }
        }
      }
    },
    "getSearchStrategiesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchStrategy"
          }
        }
      }
    },
    "getSearchStrategyLinkSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StrategyLink"
          }
        }
      }
    },
    "getStrategyCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyCompo"
        }
      }
    },
    "getStrategyElementSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyElement"
        }
      }
    },
    "getStrategyHistoriesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyHistory"
        }
      }
    },
    "getStrategyRiskSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Risk measures on IP Strategy",
          "items" : {
            "type" : "object",
            "properties" : {
              "mainRiskStratMeasureP" : {
                "type" : "number",
                "description" : "Risk measure"
              },
              "mainRiskIndicatorE" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Main risk Indicator"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose in WUI display"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "Server Filter"
              },
              "strategy" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "strategy"
              },
              "rowOfId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Row of Id"
              }
            }
          }
        }
      }
    },
    "getStrategySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Strategy"
        }
      }
    },
    "getThirdCategorySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ThirdCategory"
        }
      }
    },
    "getThirdPartyListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/List"
        }
      }
    },
    "getThirdPartySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ThirdParty"
        }
      }
    },
    "getTradingConstraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/TradingConstraint"
        }
      }
    },
    "getTypeSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Type"
        }
      }
    },
    "modifyBalancePosTypeInput" : {
      "type" : "object",
      "required" : [ "name", "natureE", "rankN" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, used mainly for reporting purposes. This long name is used as a default when there is no occurrence in the 'denomination' table for a required language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination. This is the denomination of the balance position type. Denomination is displayed in the user's language but if it is not available, then the default translation is used instead. If no denominations are available, then the name is used.\r\n\r\nIt is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too. \r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German. This is the denomination of the balance position type in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English. This is the denomination of the balance position type in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French. This is the denomination of the balance position type in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as \"multilingual\" and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a Balance Position Type which characterises a 'Balance Position'. The list of permitted values is set by Odyssey and cannot be modified. These natures are important because they are used intensively in the Fusion process and, subsequently, in functions such as 'Performance Measurement' and 'Performance Attribution'.",
          "enum" : [ "Un-accounted", "Capital Profit", "Capital Loss", "Position Fee", "Position Tax", "Tax Credit", "Portfolio Fee", "Portfolio Tax", "Received Income", "Investment", "Withdrawal", "Currency Profit", "Currency Loss", "Paid Income", "Received Accrued Interest", "Paid Accrued Interest", "Currency Forward Premium", "Currency Forward Discount", "Fund Share Coupon/Income", "Fund Share Coupon/P&L", "Net Value", "Accrued Value", "Book Capital Profit", "Book Capital Loss", "Book Currency Profit", "Book Currency Loss", "Book Profit", "Book Loss", "Unrealised Capital Profit", "Unrealised Capital Loss", "Unrealised Currency Profit", "Unrealised Currency Loss", "Unrealised Book Profit", "Unrealised Book Loss", "Unrealised Book Capital Profit", "Unrealised Book Capital Loss", "Unrealised Book Curr. Profit", "Unrealised Book Curr. Loss" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Associates a 'Position' and 'Balance Position' to a Balance Position Type.\r\nA Balance Position with a rank less than or equal to 10 must have a nature of 'Position Fee' or 'Position Tax'. Note that there can only be one BP Type with such a rank.\r\nThe amounts corresponding to these BP Types are stored in one of the corresponding 'BP Amount' in the position/balance position tables, and shows the difference between the position gross and net amounts."
        }
      }
    },
    "modifyBalancePosTypeSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BalancePosTypeWithPermValues"
        }
      }
    },
    "modifyBusinessEntitiesInput" : {
      "type" : "object",
      "required" : [ "legalNatureE", "multiEntityRoleE", "name", "orgaRoleE", "referenceE", "statusE" ],
      "properties" : {
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the business entity's Data Security Profile with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the business entity (not necessarily unique). This field is optional."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the business entity."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination of the business entity. This extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the WealthSuite Front Office - Portfolio Management Web - TSL Operating Guide).\r\n\r\nThe denomination is displayed in the user's language, but if it is not available then the default translation is used instead. At the very least, if no denominations are available, then the name is used. As well, this extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination of the business entity in German. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination of the business entity in English. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination of the business entity in French. It is automatically generated. The extended attribute \"ext_denomination\" is defined as \"Multilingual\" and French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "An extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the business entity."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "legalNatureE" : {
          "type" : "string",
          "description" : "Defines the legal nature of the business entity.",
          "enum" : [ "None", "Company", "Business Entity" ]
        },
        "multiEntityRoleE" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt defines if the business entity contributes to the multi-entity organization.",
          "enum" : [ "None", "Master", "Specific Data & Parameters" ]
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the business entity (not necessarily unique). This field is mandatory."
        },
        "orgaRoleE" : {
          "type" : "string",
          "description" : "Defines the organisation of the business entity inside the bank's organisation.",
          "enum" : [ "None", "Master Company", "Lead Company", "Branch Company", "Head Office", "Office", "Branch", "Division", "Department", "Service", "Desk" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the business entity."
        },
        "referenceE" : {
          "type" : "string",
          "description" : "Defines the reference of the business entity.\r\n\r\nA reference is a system (such as T24 back-office system) that is the data master concerning the bank's organisation.",
          "enum" : [ "None", "T24" ]
        },
        "rightReasonE" : {
          "type" : "string",
          "enum" : [ "None", "Security", "Active Change Set", "Multi-Entity Restrict", "Not Secured" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the business entity.",
          "enum" : [ "None", "Inactive", "Active", "Blocked", "Cancelled" ]
        },
        "telexC" : {
          "type" : "string",
          "description" : "Mask number of the business entity."
        },
        "themeC" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nThis attribute is a simple text that conditions the front-ends layout.  \r\nWhen, in the front-end, a user switches from one business entity to another business entity that has a different theme, the color changes accordingly. This reminds the user where he is logged into.\r\nThe standard packaging delivers some theme examples where the value is simply associated to a color: \r\n- red\r\n- darkBlue\r\n- purple\r\n- green\r\n- blue\r\n- orange\r\nWhen not defined: grey for WUI and Connect. \r\nThe usage of themes for conditioning the front-end layout can be extended by customization."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "A TSL attribute that cannot be edited by the user but can be redefined with default values. It is used to define whether a Triple'A Plus Web user is allowed to update the corresponding business entity.\r\n\r\nAs mentioned, its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Triple'A Plus Web user's data profile contains the business entity's Data Security Profile with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateSecuRightF" : {
          "type" : "boolean"
        }
      }
    },
    "modifyBusinessEntitiesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntityWithPermValues"
        }
      }
    },
    "modifyBusinessEntityAddressInput" : {
      "type" : "object",
      "required" : [ "addressC", "country", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e. carriage returns are authorised)."
        },
        "country" : {
          "type" : "string",
          "description" : "Indicates the country or area in which the address is situated."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to delete the corresponding business entity's address.\r\n\r\nAs mentionned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with deletion rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type RankN"
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "It is a TSL attribute which cannot be edited by the user (but can be redefined with default values). It is used to define whether a WealthSuite Front Office - Portfolio Management (PM) Web user is allowed to update the corresponding business entity's address.\r\n\r\nAs mentioned its value can be overriden by default values. If no default values are applied, its value is set to TRUE if the Front Office - PM Web user's data profile contains the data security profile of the business entity's address with update rights granted.\r\n\r\nThis attribute is used only for the Web Packaging."
        }
      }
    },
    "modifyBusinessEntityAddressSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntityAddressesWithPermValues"
        }
      }
    },
    "modifyBusinessEntityUserComposInput" : {
      "type" : "object",
      "required" : [ "applUserCode", "applUserId", "busEntityName", "dataProfileCode", "defaultLoginF", "mainBusEntityF", "roleE", "typeCode" ],
      "properties" : {
        "applUserCode" : {
          "type" : "string",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "applUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) attached to the business entity."
        },
        "busEntityDenom" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityName" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "busEntityThemeC" : {
          "type" : "string",
          "description" : "References the business entity."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nReference to the Data Profile. This Data Profile determines the data users can access when connected to the business entity. This data profile overrides the data profile set at user level. This security access only applies on tables for which data security is supported (portfolio, third party, etc.)."
        },
        "defaultLoginF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nA business entity sets as default login is used by the system when the linked user authenticates into the system by providing login and password. The system automatically assigns that business entity to the created connection.\r\nOnly one default login can be set between a user and a business entity."
        },
        "mainBusEntityF" : {
          "type" : "boolean",
          "description" : "Specifies whether the business entity is the main business entity of the bank's employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user))."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Defines the role that the bank employee (represented by a WealthSuite Front Office - Portfolio Management user (record of the table appl_user)) has in the business.",
          "enum" : [ "None", "Compliance", "Administration", "Management", "Advisor", "Manager", "Assistant", "Application User" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "References the type of business entity user composition."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the type of business entity user composition."
        }
      }
    },
    "modifyBusinessEntityUserComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/BusinessEntityUserCompoWithPermValues"
        }
      }
    },
    "modifyConstraintParametersInput" : {
      "type" : "object",
      "required" : [ "instrSetCode", "operatorE", "templateElementId", "templateElementName", "templateElementParamNatureE" ],
      "properties" : {
        "constrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the technical identifier of the constraint."
        },
        "dateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "References the date you defined in a Date constraint parameter."
        },
        "dimConstraintDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the type of constraint you define: strategy element (i.e. holding constraint) or trading constraint."
        },
        "instrSetCode" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetDenom" : {
          "type" : "string",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "instrSetId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References the list of instruments you defined in an Instrument Set parameter."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "objectiveN" : {
          "type" : "number",
          "description" : "References the numerical value you defined in a Value parameter."
        },
        "operatorE" : {
          "type" : "string",
          "description" : "References the operator you defined in an Operator constraint parameter.",
          "enum" : [ "<None>", "<>", "=", "<", "<=", ">", ">=" ]
        },
        "templateElementId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementName" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description."
        },
        "templateElementParamNatureE" : {
          "type" : "string",
          "description" : "Refers to the template element record used to enter your parameter. It corresponds to the parameter general description.",
          "enum" : [ "Operator", "Attribute", "Value", "Date", "Instrument Set" ]
        }
      }
    },
    "modifyConstraintParametersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ConstraintParameterWithPermValues"
        }
      }
    },
    "modifyConstraintTemplatesInput" : {
      "type" : "object",
      "required" : [ "activeF", "constrNatureE", "criticalnessE", "name", "parameterF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Constraint Template. A Constraint Template must be active to appear in default selection lists. If a Constraint Template is inactive, it is not displayed in default selection lists."
        },
        "constrNatureE" : {
          "type" : "string",
          "description" : "Specifies the type of constraint to which the template applies.",
          "enum" : [ "Trading Constraint", "Holding Constraint" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "The long name of the occurrence. Try to provide an explicit description of your template. This information appears in default selection lists and is useful later for identification and description."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "The short name of the occurrence."
        },
        "parameterF" : {
          "type" : "boolean",
          "description" : "Specifies if the constraint holds specific parameters or not. If it is set to No, you do not have access to the template elements (i.e. the parameter description)."
        }
      }
    },
    "modifyConstraintTemplatesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ConstraintTemplateWithPermValues"
        }
      }
    },
    "modifyCurrencyInput" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see \"Multilingual\")."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the currency.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence.\r\nUsed mainly for display. Reports mainly use a Denomination (see under \"Multilingual\")."
        }
      }
    },
    "modifyCurrencySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/CurrenciesWithPermValues"
        }
      }
    },
    "modifyManagersInput" : {
      "type" : "object",
      "required" : [ "activeF", "name", "wuiProfileE", "wuiRoleE" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Flag that indicates if a Manager is active or not."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence, mainly used for reporting purpose.\r\nThis optional information is used as a default when there is no related occurrence in the 'denomination' table in a required language."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address (optional) of the manager."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the manager.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This information does not have to be unique."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Phone number of a manager."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier referencing one user occurrence.\r\nThe association with a user applies to the Web User Interface.\r\nThe associated user should be declared as a WUI user."
        },
        "wuiProfileE" : {
          "type" : "string",
          "description" : "This field holds information on the manager profile for the Triple'A Web User Interface (i.e. which screens he has access to). We deliver a few standard profiles (some of which are only used within the Advisor context).",
          "enum" : [ "Default", "RelationshipManager", "MarketingOfficer", "FinancialAnalyst", "Developer", "CdmSo", "PmAdmin", "RetailManager", "Audit", "Admin", "PortfolioManagerForT24", "PortfolioManager" ]
        },
        "wuiRoleE" : {
          "type" : "string",
          "description" : "This flied hold information on the manager profile for the Triple'A Web User Interface (i.e. what action he can do). We deliver in standard two roles (used only within the Advisor context).",
          "enum" : [ "Assistant", "HeadManager", "RlsAdmin", "AlertAdmin" ]
        }
      }
    },
    "modifyManagersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ManagerWithPermValues"
        }
      }
    },
    "modifyNotepadInput" : {
      "type" : "object",
      "required" : [ "entitySqlnameC", "noteD", "object", "typeCode", "userCode" ],
      "properties" : {
        "entitySqlnameC" : {
          "type" : "string",
          "description" : "Reference to the table, to which the object (or occurrence) belongs, a notepad is associated to. \r\nThe authorised entity types, in this case, are the following: \r\nacc_plan, currency, deposit, format, format_element, ft_convention, ft_rate, ft_rate_history, geographic, instrument, list, manager, model_constr_elt, model_constraint, portfolio, sector, standing_instruction, strategy, strategy_history, third_party, trading_constraint, val_rule, val_rule_element"
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "noteC" : {
          "type" : "string",
          "description" : "Text of a notepad."
        },
        "noteD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date and time when the note was entered."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the occurrence to which a notepad is associated. This object belongs to the table referenced by its 'entity_dict_id'."
        },
        "titleC" : {
          "type" : "string",
          "description" : "Title of the notepad.\r\nUsed for selection purposes."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a notepad."
        },
        "userCode" : {
          "type" : "string",
          "description" : "Reference to the user who is the issuer of a notepad."
        }
      }
    },
    "modifyNotepadSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotepadWithPermValues"
        }
      }
    },
    "modifyPortfolioListsInput" : {
      "type" : "object",
      "required" : [ "currencyCode", "dataSecuProfCode", "masterOnlyF", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to a currency.\r\nThis reference is useful for portfolio list where it can be used to determine the default currency used to perform a financial function (e.g. a valuation)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "masterOnlyF" : {
          "type" : "boolean",
          "description" : "This attribute makes sense only in a multi-entity configuration.\r\nIt determines if the list composition is to be shared by all business entities vs. being specific to each one. The system expects to find the composition of â€œMaster onlyâ€� list defined once; in the master business entity. Other lists that are not â€œMaster onlyâ€� have their compositions defined in each business entity.\r\nPlease note that list of portfolio cannot be master only in the multi-entity context. No portfolio can be defined in master."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        }
      }
    },
    "modifyPortfolioListsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioListWithPermValues"
        }
      }
    },
    "searchBusinessEntityAddressSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchBusinessEntityAddresses"
          }
        }
      }
    },
    "searchBusinessEntityUserComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchBusinessEntityUserCompo"
          }
        }
      }
    },
    "searchInstrumentListCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchInstrumentListCompo"
          }
        }
      }
    },
    "searchInstrumentListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchList"
          }
        }
      }
    },
    "searchPortfolioListCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchPortfolioListCompo"
          }
        }
      }
    },
    "searchPortfolioListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchPortfolioList"
          }
        }
      }
    },
    "searchThirdPartyListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchList"
          }
        }
      }
    },
    "updateAddressInput" : {
      "type" : "object",
      "required" : [ "addressC", "typeRankN" ],
      "properties" : {
        "addressC" : {
          "type" : "string",
          "description" : "The address text in one or more lines (i.e., carriage returns are authorised)."
        },
        "faxC" : {
          "type" : "string",
          "description" : "Fax number of the address."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. Its field is mandatory and is computed by the system."
        },
        "phoneC" : {
          "type" : "string",
          "description" : "Telephone number of the address."
        },
        "postalC" : {
          "type" : "string",
          "description" : "Postal code used for selection purposes.\r\n\r\nThe postal code must also appear in the address text (see the address attribute)."
        },
        "telexC" : {
          "type" : "string",
          "description" : "Telex number of the address."
        },
        "typeRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the type of address (e.g., fiscal address, legal address, correspondence address, etc.)"
        }
      }
    },
    "updateAddressSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AddressWithPermValues"
        }
      }
    },
    "updateCategoriesInput" : {
      "type" : "object",
      "required" : [ "categoryDescC", "dataSecuProfCode", "natureE" ],
      "properties" : {
        "categoryDescC" : {
          "type" : "string",
          "description" : "Description of the category"
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Data Security Profile of the category. A category is secured. The goal is to defined categories for a group of users."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the category specifying the type of the entity that is categorized.",
          "enum" : [ "Third Party", "Portfolio", "Instrument", "Document", "Activity" ]
        }
      }
    },
    "updateCategoriesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/CategoryWithPermValues"
        }
      }
    },
    "updateGeographicInput" : {
      "type" : "object",
      "required" : [ "countryF", "name" ],
      "properties" : {
        "countryF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Geographical Area is a country."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the country.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "updateGeographicSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/GeographicWithPermValues"
        }
      }
    },
    "updateGridInput" : {
      "type" : "object",
      "required" : [ "name", "natureE", "primaryGridF" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name of an occurence that will be used as default long name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the grid.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the kind of grid which is defined.",
          "enum" : [ "Standard", "Market Structure", "Market Structure Subset" ]
        },
        "primaryGridF" : {
          "type" : "boolean",
          "description" : "Currently not used by financial functions."
        }
      }
    },
    "updateGridSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/GridWithPermValues"
        }
      }
    },
    "updateInstrumentSubNatsInput" : {
      "type" : "object",
      "required" : [ "natureE", "subNatE" ],
      "properties" : {
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        }
      }
    },
    "updateInstrumentSubNatsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InstrumentSubNatWithPermValues"
        }
      }
    },
    "updateInstrumentsInput" : {
      "type" : "object",
      "required" : [ "accrualRuleE", "activeF", "complexityF", "contractNatE", "contractSizeN", "cutoffTimezoneCode", "cutoffTimezoneName", "fundIncomeStyleE", "issuerThirdCode", "marketThirdCode", "name", "natureE", "negociableF", "optStyleE", "optionClassE", "payFreqUnitE", "portfolioCode", "portfolioName", "portfolioStatusE", "portfolioThirdCode", "priceCalcRuleE", "redempCodeE", "refCurrCode", "reinvestmentAllowedF", "riskCurrCode", "riskGeoCode", "riskNatureE", "subNatE", "subtypeCode", "subtypeName", "switchOrderAmtF", "switchOrderPercF", "switchOrderUnitF", "taxGeoCode", "taxGeoName", "tradeNatureE", "typeCode", "typeName", "underlyInstrCode", "underlyInstrName", "underlyInstrNatureE", "usageNatureE", "valRuleE", "wrapEligibleF" ],
      "properties" : {
        "accrualRuleE" : {
          "type" : "string",
          "description" : "Specifies the method used to compute the number of days between two dates. For yield curves, the value defines the calendar convention for interpolation in the dates.\r\n\r\nThe following information applies to accrual rules 19 to 31.\r\n\r\nDATATYPE CALCONV (file main/cldr.h, version 1.68, line 92)\r\n\r\nCALCONV: data type for calendar conventions\r\n--------------------------------------------\r\n\r\n\r\n            ACTACT\r\n            ACTLEAP\r\n            ACTAFB\r\n            ACTEUROBOND\r\n            ACTFRF\r\n            EU30360\r\n            EU30E360\r\n            EU30E365\r\n            US30360\r\n            US30E360\r\n            ACT365\r\n            ACTNL365\r\n            ACT360\r\n            EU30EP360\r\nCALCONV\r\n\r\nThe main purpose of the calendar convention is to define the day count fraction used, e.g. when computing accrued interest over a certain time period. The day count fraction is in general computed as:\r\n\r\nNumber of days in period / Number of days per year.\r\n\r\nThe time period in question is defined to go from, and including, the period start date  to, but excluding, the period end date.\r\n\r\nThe definition of these is described below, followed by a short note on market practice.\r\n\r\nThe definitions are in accordance with the ISMA publication \"Bond Markets: Structures and Yield Calculations\" (1998) by Patrick Brown and the ISDA note \"Emu and Market Conventions: Recent Developments\" (1998).\r\n\r\nNumber of days in period\r\n------------------------\r\n\r\nFor the ACT based conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, ACT365, ACT360, the number of days between the two dates is computed as the actual number of calendar days in the period, including 29 February if it occurs in the period. For ACTNL365, which is used in Japan, 29 February is never counted.\r\n\r\nFor the 30-day month based conventions, EU30360, EU30E360, EU30E365, EU30EP360, US30360, US30E360, the number of days between two days - written on the form day-month-year as d1m1y1 and d2m2y2 - is computed according to the formula:\r\n\r\n        360 * (y2 - y1) + 30 * (m2 - m1) + (d2 - d1)\r\n\r\nwhere the original dates are modified according to the rules below:\r\n\r\nEU30360, US30360 convention (also know as the \"30-day month U.S. method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 and modified d1 = 30 then d2 is set to 30.\r\n\r\nEU30E365, EU30E365, US30E360 convention (also known as the \"30-day European method\"):\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 30.\r\n\r\nEU30EP360 convention:\r\n\r\n        If d1 = 31 then d1 is set to 30.\r\n        If d2 = 31 then d2 is set to 1, m2 (and possibly y2) is updated to next month.\r\n\r\nNumber of days per year\r\n-----------------------          .\r\n\r\nFor the 360-days conventions, EU30360, EU30E360, EU30EP360, US30360, US30E360, ACT360, the number of days per year is 360.\r\n\r\nFor the 365-days conventions, EU30E365, ACT365, ACTNL365, the number of days per year is 365.\r\n\r\nFor the actual-days conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, the number of days per year is the actual number of days per year, differing in the processing of leap years in the following manner:\r\n\r\nACTACT convention: The number of days per year is the actual number of days from the period start date and one year ahead.\r\n\r\nACTAFB: If the period is shorter than one year then the number of days is 366 if 29 February occurs in the period. Otherwise it is 365.\r\n\r\nIf the period is longer than one year then the period is split into one year sub-periods -counting backwards from the period end date - plus the remaining initial stub period of length shorter than one year. The day count fraction is the sum over the day count fractions of the sub-periods. The stub period is treated in accordance with the first rule and the remaining year-long periods have a day count fraction of 1.\r\n\r\nACTEUROBOND: If the period equals a whole year, then the number of days per year equals the actual number of days in the period. If the period is not a whole year, then the number of days per year equals the number of days in the calendar year of the end period date.\r\n\r\nACTFRF: The number of days per year is the actual number of days from the end period date and one year back.\r\n\r\nACTLEAP: The period is split into the periods that are in leap and non-leap years. In the former periods the number of days per year is 366 while in the latter periods the number of days is 365. The day count fraction is the sum over the day count fractions of the sub-periods.\r\n\r\nMarket practice\r\n---------------\r\n\r\nThe actual-actual calendar conventions, ACTACT, ACTLEAP, ACTAFB, ACTEUROBOND, ACTFRF, are used in the swap (floating leg) and bond markets. The recommendation to use actual-actual in the new euro denominations has highlighted the differences between the conventions even though they only differ in the number of days per year when considering leap years.\r\n\r\nACTACT              Original SCecon convention.\r\n\r\nACTLEAP             ISDA convention for swaps. It has been proposed\r\n                    to switch to ACTAFB.\r\nACTAFB              AFB convention. Recommended new ISDA convention.\r\nACTEUROBOND         Used in the Eurobond market.\r\nACTFRF              Used in the French market.\r\n\r\nThe 30-month calendar conventions, EU30360, EU30E360, EU30E365, US30360, US30E360, EU30EP360, are used swap (fixed leg) and bond markets.\r\n\r\nEU30360, US30360    Used in Finland\r\nEU30E360, US30E360  Previous standard in Europe. Still used in Denmark,\r\n\r\n                    Sweden, Holland, Belgium, and Austria.\r\nEU30EP360           Used in Switzerland.\r\n\r\nThe actual-360 convention, ACT360, is used in money and swap (floating leg) markets.\r\n\r\nThe actual-365 conventions, ACT365 and ACTNL365, are used in Norway, Canada, and Japan.",
          "enum" : [ "Default", "30E/360", "30/360 (Feb)", "30/360 (Def)", "30US/360", "Actual/365", "365/365", "Actual/Actual", "Actual/360", "Actual+1/365", "Actual/Actual (US)", "30E/365", "30/360", "30E/Actual", "30US/365", "30US/Actual", "Actual+1/Actual", "Actual+1/360", "30/360+1 (Italian BTP)", "ACTACT", "ACTLEAP", "ACTAFB", "ACTEUROBOND", "ACTFRF", "EU30360", "EU30E360", "EU30E365", "US30360", "US30E360", "ACT365", "ACTNL365", "ACT360", "EU30EP360", "BUS252" ]
        },
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Financial Instrument. If a Financial Instrument is inactive (active_f=0), it is not displayed in the default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date at which the Instrument exists or is issued. This attribute is purely informational for some Instruments. For bonds, it generally corresponds to the issue date. For Options, it specifies the date from which an option can be exercised. The option style is used in functions to distinguish between European and American Options.\r\nIf necessary, information on an Issue, particularly if it is in the future or if it is partial, can be stored in an Issue_or_Redemption Event."
        },
        "capTaxRateP" : {
          "type" : "number",
          "description" : "Specifies the amount of capital gains applied to a position in this security."
        },
        "complexityF" : {
          "type" : "boolean",
          "description" : "This field is used to specify the complexity of an instrument. \r\nIt could be initialised by a default value based on other attributes of the instruments such as the nature, the risk-nature, the currency, the market..."
        },
        "contractNatE" : {
          "type" : "string",
          "description" : "Specifies the default characteristics of a Futures contract for calculating conversion factors.",
          "enum" : [ "<None>", "CBOT futures 2 yr & 5 yr notes", "LIFFE long gilt contract", "MATIF French bond contract", "TSE Japanese bond contract", "LIFFE bond contract", "LIFFE Italian BTP contract", "Montreal Canadian contract", "MEFF Spanish 10 yr contract", "MEFF Spanish 3 yr contract", "LIFFE Spanish Bono contract", "CBOT fut. US bond & 10 yr note" ]
        },
        "contractSizeN" : {
          "type" : "number",
          "description" : "The size of one contract. The general practice in option dealing is to trade contracts that cover a fixed quantity of underlying instruments, e.g. 3 option contracts to buy 100 IBM stock at 145 USD. The quantity for the above example is stored in the database as 300. The contract size is 100. The quantity displayed or entered by the user is 3 (quantity/contract size). \r\nThe default value is 1."
        },
        "cutoffFixTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Time between 00:00 and 23:59"
        },
        "cutoffTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Cut-off time is the deadline mutual fund company sets for investors to enter orders on this fund. \r\nWhen trade occurs after this time, the fund will be based on another net asset value.\r\nThe time format must be 24h. Example, enter 14:30 for 2:30 pm."
        },
        "cutoffTimezoneCode" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "cutoffTimezoneName" : {
          "type" : "string",
          "description" : "Defines the time zone where the cut-off time applies."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence (see the documentation on the multi-lingual features for information on changing languages)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date at which the Instrument ceases to exist. In theory, there must be no positions in this Instrument after the end date. In practice, however, due to possible administrative or financial delays, this may not always be the case. This field is not mandatory but if completed it must be greater than or equal to the Begin Date."
        },
        "exerQuoteN" : {
          "type" : "number",
          "description" : "Identifies the exercise quote (strike) applicable to the underlying instrument when the redemption quote is applicable to the instrument. It is used for structured products that embed terms and conditions relative to an underlying with a strike.\r\n\r\nApplicable for structured product definition management."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the instrument.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpoSubscriptionF" : {
          "type" : "boolean",
          "description" : "Indicator to show that the IPO subscriptions are possible in the instrument. It is determined by the way of comparing the current date and if it is later than the subscription begin date and earlier than the date specified as cut-off date for the IPO subscription. \r\n0=Indicates that the IPO subscription is not enabled for the instrument (current date earlier than subscription begin date or later than cut off date)\r\n1=Indicates that the IPO subscriptions are possible for the instrument(current date later than subscription begin date and earlier than cut off date)"
        },
        "extIsinSynC" : {
          "type" : "string",
          "description" : "ISIN\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIN code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_ISIN_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extLastPriceN" : {
          "type" : "number",
          "description" : "Last Price\r\n\r\nThis is the last price of the instrument based on the system date. The INSTR_PRICE() keyword is used to display the value.\r\n\r\nThis extended attribute cannot be edited by the user and requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). The attribute is used only for the Web Packaging."
        },
        "extOngoingIpoF" : {
          "type" : "boolean",
          "description" : "Indicator to show if the instrument, which came up with an IPO, is listed in the secondary market or not. \r\n0=Indicates that the IPO instrument is listed in the market (current date later than first dealing date)\r\n1=1.\tIndicates that the IPO instrument is not yet listed in the market (current date earlier than first dealing date)"
        },
        "extRatingC" : {
          "type" : "string",
          "description" : "Rating\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the rating of the instrument.\r\nThe definition of the rating's code, to be used, has to be set through the parameter DS_RATING_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSectorC" : {
          "type" : "string",
          "description" : "Sector\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the ISIC code of the instrument's sector.\r\nThe definition of the sector's code, to be used, has to be set through the parameter DS_SECTOR_INSTRUMENT\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTelekursSynC" : {
          "type" : "string",
          "description" : "Telekurs\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt is the Telekurs code of the instrument, which is in fact a synonym.\r\nThe definition of the synonym's code, to be used, has to be set through the parameter DS_TELEKURS_CODE_INSTRUMENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faceValueN" : {
          "type" : "number",
          "description" : "The smallest nominal value unit for a bond or face value of a share, expressed in the Currency of the Financial Instrument."
        },
        "firstCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Specifies the date at which the first coupon is paid."
        },
        "fixD" : {
          "type" : "string",
          "format" : "date",
          "description" : "For structured products, it is the date at which the underlying price is determined to define the pay off of the instrument depending on the terms and conditions. \r\n\r\nApplicable for structured product definition management."
        },
        "fundIncomeStyleE" : {
          "type" : "string",
          "description" : "Indicates, how earnings from the funds' constituents are handled by the fund management.",
          "enum" : [ "<None>", "Growth", "Dividend" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "interestRateP" : {
          "type" : "number",
          "description" : "The interest rate of income to be paid. The payment is always in the currency of the Instrument. This field is also used to indicate the nominal interest rate of a notional instrument (deliverable) that underlies a bond futures contract."
        },
        "issueQtyN" : {
          "type" : "number",
          "description" : "The actual number of Financial Instruments issued to the market.\r\nNote that this is NOT the amount traded on the market."
        },
        "issueQuoteN" : {
          "type" : "number",
          "description" : "Specifies the quote at which the instrument was issued."
        },
        "issuerThirdCode" : {
          "type" : "string",
          "description" : "Specifies the third party that issued the instrument."
        },
        "lastCoupD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "For bonds, date at which the last coupon is paid."
        },
        "lastPriceN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "lastQuoteN" : {
          "type" : "number",
          "description" : "Not used."
        },
        "marketThirdCode" : {
          "type" : "string",
          "description" : "Specifies the main market in which the instrument is quoted.\r\nThis market is used in the default process for retrieving prices."
        },
        "minTradeQtyN" : {
          "type" : "number",
          "description" : "The minimum quantity of an instrument that may be traded. This field may be used in conjunction with the odd lot quantity.\r\n\r\nFor example, for a particular instrument, the minimum trade size may be 5000 units (minimum trade quantity) and then available in increments of 1000 (odd lot) thereafter."
        },
        "minTradingAmtM" : {
          "type" : "number",
          "description" : "Defines the Minimum Trading Amount of an instrument below which trades are not executed at the market price."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the instrument. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "negociableF" : {
          "type" : "boolean",
          "description" : "Specifies if the instrument is directly negotiable or not, e.g. a notional bond or an instrument that is generated for risk exposure purposes may not be negotiable."
        },
        "oddLotQtyN" : {
          "type" : "number",
          "description" : "Minimum quantity of the instrument below which trades are not executed at the market price."
        },
        "optStyleE" : {
          "type" : "string",
          "description" : "Specifies when the Option can be exercised.",
          "enum" : [ "<None>", "American", "European", "Bermudan" ]
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Specifies if the holder of an Option has the right to buy or sell the underlying.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "payFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "For Bonds, this field specifies the number of payment frequency units between two payments.\r\nFor Stocks and Fund Shares, specifies the frequency of dividend payments.\r\nFor Options, specifies the frequency. \r\nFor Rates whose subtype is set to Par yield, specifies the frequency of payoffs if the rate is a security with payoffs. Typically, this is used for rates that underly floating rate indexes, and CMT and CMS swaps where the underlying is a par yield rate of a 5-year Treasury."
        },
        "payFreqUnitE" : {
          "type" : "string",
          "description" : "Specifies the unit of the Payment Frequency.\r\nSee the description of the Payment Frequency attribute.\r\nThis attribute is complemented by the Frequency attribute that specifies the number of units, e.g. 1 week, 2 weeks, 4 months. The permitted values are:\r\n0. No periodicity\r\n4. Monthly\r\n5. Quarterly\r\n6. Semi-annually\r\n7. Annually",
          "enum" : [ "<None>", "Day", "Business Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "portfolioStatusE" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "portfolioThirdCode" : {
          "type" : "string",
          "description" : "Specifies the portfolio to which a cash account belongs."
        },
        "priceCalcRuleE" : {
          "type" : "string",
          "description" : "Specifies the default method for obtaining the price from the quote of a financial instrument.",
          "enum" : [ "<None>", "Quote", "Quote/100", "Partially Paid Stocks", "Partially Paid Bonds", "Stocks Quoted in %", "Bonds Quoted in Unit", "Actuarial Yield", "Discount Rate", "Add-On Rate", "Quoted with AI", "Quoted in Unit with AI", "TCN", "Annualised Rate", "Quote Life", "Euro-Futures", "FRA", "Australian Future", "Part. Paid Bonds in Unit", "Part. Paid Stocks in Prct", "Price calculation Factor", "Discount Yield", "Basis Points", "Quote in Unit", "Australian Future (flexible)", "NPV", "Chilean Bond (TERA)", "Portfolio Specific Price" ]
        },
        "redempCodeE" : {
          "type" : "string",
          "description" : "Specifies if the Redemption data for this financial instrument is stored in the financial Instrument or the Issue_or_Redemption Events table.",
          "enum" : [ "Final Redemption in instrument", "Final Redm only in instrument", "All data in iss_redm_event" ]
        },
        "redempQuoteN" : {
          "type" : "number",
          "description" : "Market quotation of the exercise of a term contract expressed in a specific currency via a relationship. Can also be the market quotation of the redemption quote.\r\nNB. Default price calculation rule of the underlying financial instrument."
        },
        "refCurrCode" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "refCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the currency of the instrument. For bond-like instruments, this is the currency of the principal."
        },
        "reinvestmentAllowedF" : {
          "type" : "boolean",
          "description" : "Indicates if the fund offers a choice for the investor to decide, whether the dividends of the fund should be paid out or re-invested.\r\nThis field can only be set for instrument with fund_income_style_e set to Dividend."
        },
        "riskCurrCode" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskCurrDenom" : {
          "type" : "string",
          "description" : "Specifies the risk currency of the instrument."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskGeoDenom" : {
          "type" : "string",
          "description" : "Specifies the risk country or area related to this instrument."
        },
        "riskLevelN" : {
          "type" : "number",
          "description" : "This field is used in conjunction with the investment profile risk level in order to check whether the instrument does not excess the risk level tolerated by the investment profile."
        },
        "riskNatureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the risk incurred by this instrument. The general processing of instruments attempts to mirror an instrument with \"building block\" instruments whose risk nature is 1, 2, 3 or 4.",
          "enum" : [ "<None>", "Equity", "Interest", "Commodity", "Currency", "Hybrid", "Real Estate" ]
        },
        "roundLotAmtM" : {
          "type" : "number",
          "description" : "Defines the Round Lot Amount of an instrument that may be traded. This field may be used in conjunction with Minimum Trading Amount. \r\n\r\nFor example, the minimum Trading Amount can be 5000 EUR for a particular instrument and then, available only in increments of 1000 EUR (Round Lot Amount) thereafter."
        },
        "subNatE" : {
          "type" : "string",
          "description" : "This attribute provides a finer, hard-coded definition of an instrument. This is necessary for specific processing (e.g. exotic options) or for setting default values in the analytics (e.g. bonds).\r\nSpecifies the default characteristics in bond calculations. When this argument is passed to the bond analytics, specific processing is automatically performed (e.g. Italian bond day counting, capital gain tax, rounding of prices for municipal bonds, etc).",
          "enum" : [ "<None>", "US Treasury bonds & notes", "US Govn agency bond (Feb adj)", "Municipal bond", "Corporate bond", "US Gov agency bond, no Feb adj", "Canadian government bond", "Canadian govn, Bnk of Can conv", "Gilt", "German government bond", "German govn, incl ex-div dates", "BTAN", "OAT", "Swiss government bond", "Belgian government bond", "Austrian government bond", "Dutch government bond", "Dutch govn, incl ex-div dates", "Swedish government bond", "Japanese government bond", "Australian government bond", "Eurobond", "Italian government bond (BTP)", "Italian government bond (CTE)", "Spanish government (annuel)", "Spanish government (semi)", "Customized bond (act/act)", "Customized bond (act/365)", "Customized bond (act/360)", "Customized bond (30/360)", "Customized bond (30/360E)", "Floating rate notes", "MM Rate", "Bill Discount", "Bill Yield", "Par Yield", "Fixed/Floating Std Swap", "Fixed/Fixed Std Swap", "Float/Float Std Swap", "Chooser", "Price Lookback", "Strike Lookback", "Average Price Asian", "Average Strike Asian", "Barrier", "Forward Start", "One Touch Digital", "Binary", "Contingent Premium", "Compound", "Double Knock-Out", "Spread", "Exchange", "Mortgage Passthrough", "PO", "IO", "Rec Swap Fixed Leg", "Rec Swap Float Leg", "Volatility Curve", "Volatility Point", "Paid Swap Fixed Leg", "Paid Swap Float Leg", "Average Rate", "Equity Swap", "Mortgage Backed Security", "Non-Vanilla Swap", "Structured Bond", "Fix/Float Swp Hedging Fixed AS", "Composite Fund", "Portfolio Fund", "Money Market Fund Share", "Fixed Income Fund Share", "Accumulator", "Decumulator", "Mini Futures  Turbo", "Capital Protection Notes", "Capital Protections Notes with Coupon", "Reverse Convertibles Notes - Equity Linked Notes", "Reverse Convertibles Notes - Bonds Linked Notes", "Reverse Convertibles Notes - Credit Linked Notes", "Discount Certificates", "Twin Win Certificates", "Bonus Notes", "Memory Coupon Notes", "Airbag Certificates", "Dual Currency Investment", "Triple Currency Investment", "Digital Investment", "Digital Pay Out", "Tower Investment", "Basket Option", "Structured Option", "Double Knock-In", "Knock-In Knock-Out", "Participating Forward", "Target Knock-Out Forward", "Pivot Option", "Target Knock-Out Pivot Notes", "Forward Forward", "Interest Multiplier Facility", "Reverse Convertibles Notes", "Equity Linked Notes", "Bonds Linked Notes", "Credit Linked Notes", "Discount Share Purchase", "Dual Currency Deposit", "OTC Guaranteed Return on Investment", "OTC Callable Range Accrual Note", "ETF Fund", "PE- Initial Commitment", "PE- Drawdown", "PE- Capital Call", "PE - Actual PE Security", "External Product", "Knock-In", "Knock-Out", "Notice Fiduciary", "Fixed Fiduciary", "Notice Deposit", "Fixed Deposit" ]
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Specifies the subtype of the instrument."
        },
        "switchOrderAmtF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in amount"
        },
        "switchOrderPercF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in percentage"
        },
        "switchOrderUnitF" : {
          "type" : "boolean",
          "description" : "Flag to determine if the instrument is allowed to switch in units"
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxGeoName" : {
          "type" : "string",
          "description" : "The country for which a tax rate must be retrieved, e.g. a Swiss franc Bond issued by IBM is subject to Swiss income tax or, to take another example, IBM quoted in Swiss francs is subject to US income tax."
        },
        "taxRateP" : {
          "type" : "number",
          "description" : "Specifies the withholding tax applied in the payment of a coupon or dividend."
        },
        "tickSizeN" : {
          "type" : "number",
          "description" : "Specifies the valid increment or decrement in the price of a financial instrument. The tick size amount can be defined using the script language if it is part of a more complex calculation."
        },
        "tradeNatureE" : {
          "type" : "string",
          "description" : "Specifies the Instrument Trade Nature.\r\n\r\nIt is useful for users who want to buy an instrument in the denomination of \"Amount\" (e.g., 1,000 EUR, 2,000 EUR, etc.)\r\n\r\nPermitted values (Nature) - Name:\r\n- 0 = <Default>\r\n- 1 = Quantity\r\n- 2 = Amount",
          "enum" : [ "default", "quantity", "amount" ]
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Specifies the type of instrument. Instrument types are user-defined classifications of instruments."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrName" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table."
        },
        "underlyInstrNatureE" : {
          "type" : "string",
          "description" : "Specifies the underlying instrument of a derivative instrument that has been denormalised into this table.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "usageNatureE" : {
          "type" : "string",
          "description" : "To specify usage nature that is applied for the instrument. Instrument usage can be listed, unlisted instrument or OTC instrument template. Default value is listed instrument.",
          "enum" : [ "None", "Unlisted Instrument", "Structured Notes Template", "OTC Derivatives Template", "Structured Product Template", "OTC Currency Derivatives Template", "Fiduciary Deposit Template", "Term Deposit Template" ]
        },
        "valRuleE" : {
          "type" : "string",
          "description" : "Specifies if and how this Financial Instrument is evaluated. If not quoted, the LAST PRICE DATE is null.",
          "enum" : [ "Quoted", "Price=0", "Price=1", "Composite", "Theoretical", "Reference Instrument", "Script", "Parent Price", "Simple Script" ]
        },
        "wrapEligibleF" : {
          "type" : "boolean",
          "description" : "This field indicates if the instrument is eligible for wrap services. \r\n\r\nWrap service is a means of consolidating various fees (administrative expenses, management expenses, commissions for trading, investment advice etc.,) into a single fee for all the services provided. \r\n\r\nAn instrument eligible for a wrap service implies that the various fees on that instrument can be wrapped into a single fee."
        }
      }
    },
    "updateInstrumentsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InstrumentWithPermValues"
        }
      }
    },
    "updateIssuerInput" : {
      "type" : "object",
      "required" : [ "activeF", "issuerF", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "issuerF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the issuer selection list."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        }
      }
    },
    "updateIssuerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/IssuerWithPermValues"
        }
      }
    },
    "updateMarketSegmentInput" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "Long name of a market segment. Used for reporting purpose."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the market segment.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurence."
        }
      }
    },
    "updateMarketSegmentSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/MarketSegmentWithPermValues"
        }
      }
    },
    "updateModelContraintElementInput" : {
      "type" : "object",
      "required" : [ "applicationFieldE", "constrBoundNatE", "constrTreatE", "creationModeE", "criticalnessE", "fixedCellF", "ignoreMarginF", "instrumentCode", "modelConstraintId", "natureE", "rightToRunF", "tradingOrderNatE" ],
      "properties" : {
        "applicationFieldE" : {
          "type" : "string",
          "description" : "For constraints defined on a list of instruments, this field indicates whether the constraint applies to each instrument of the list taken individually or whether the constrains applyy to the sum of the instrument contained in the list.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Single Instrument", "Sum of Instruments" ]
        },
        "calcMaxWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the maximum weight in per cent for the given constraint. If this weight is equal to y, you will have the constraint \"<= y %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "calcMinWeightN" : {
          "type" : "number",
          "description" : "Calculated attribute containing the minimum weight in per cent for the given constraint. If this weight is equal to x, you will have the constraint \">= x %\".\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundCurrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For constraints in Amount (constr_bound_nat_e = 1) the field indicates the currency in which the amount is expressed.\r\n\r\nPlease note that this attribute is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "constrBoundNatE" : {
          "type" : "string",
          "description" : "Indicates the unit value in which min_weight_n and max_weight_n are expressed.\r\n\r\nPlease note that some bound natures are only used in the context of Odyssey Components Suite and have no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Amount", "Percentage", "Quantity" ]
        },
        "constrNatE" : {
          "type" : "string",
          "description" : "Calculated attribute containing the constraint nature.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "constrTreatE" : {
          "type" : "string",
          "description" : "Indicates how the constraint has to be handled by the derivation process.\r\nUncovered Out Locking. A mandatory Security Out constraint is defined for a portfolio that does not hold the quantity in the constraint. This exception is not raised if the constraint processing has been set to optional.",
          "enum" : [ "<None>", "Mandatory", "Optional", "Check Only" ]
        },
        "creationModeE" : {
          "type" : "string",
          "description" : "This attribute is used to define how the modelling constraint (element) was created.",
          "enum" : [ "Triple A", "Dynamic" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "That field can be used to enter text information. For example you can describe the meaning of the constraint."
        },
        "dimInstrDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it tells whether the constraint element applies to a list of instruments or to a single instrument."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date specifying the end of validity of the modelling constraint element."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (element).\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (element) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (element) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (element) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fixedCellF" : {
          "type" : "boolean",
          "description" : "This field only applies to modelling constraints of nature Allocation.\r\nIf it is set to 'yes' it means that the derived weight should be equal to the weight of the asset allocation.\r\n\r\nIt is important to note that, if this flag is set to 1 (yes), you cannot define minimum or maximum weights."
        },
        "ignoreMarginF" : {
          "type" : "boolean",
          "description" : "Indicates whether the Fluctuation Margin is ignored or not"
        },
        "instrObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In the case of an element that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the list of instruments or the instrument to which the constraint element applies."
        },
        "instrumentCode" : {
          "type" : "string",
          "description" : "In the case of an element associated to a single instrument that is linked to a modelling constraint of nature Security In, Security Out or Trading, it gives the instrument to which the constraint element is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For Modelling Constraint of nature Allocation: information to which market segment the constraint applies."
        },
        "maxWeightN" : {
          "type" : "number",
          "description" : "Indicates the maximum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to y, you will have the constraint <= y \"constr_bound_nat_e\".\r\n\r\nSee also min_weight_n anf fixed_cell_f."
        },
        "minWeightN" : {
          "type" : "number",
          "description" : "Indicates the minimum bound value for the given constraint. The unit in which this value is expressed is defined by the field constr_bound_nat_e.\r\n\r\nIf this value is equal to x, you will have the constraint >= x \"constr_bound_nat_e\".\r\n\r\nSee also max_weight_n anf fixed_cell_f."
        },
        "modelConstraintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Refers to the modelling constraint (set) to which the element is attached."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the type of constraint we are dealing with.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the priority with which the constraint has to be treated. Smallest values are treated first.\r\n\r\nPlease note that this field is only used in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "tradingOrderNatE" : {
          "type" : "string",
          "description" : "Indicates the operation natures to which a Trading constraint applies.\r\n\r\nPlease note that this field only applies to modelling constraints of nature Trading in the context of Odyssey Components Suite; it has no impact on Tripleâ€™A Financial Server computations.",
          "enum" : [ "<None>", "Buy", "Sell", "Buy / Sell" ]
        }
      }
    },
    "updateModelContraintElementSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ModelConstraintElementWithPermValues"
        }
      }
    },
    "updateModelContraintInput" : {
      "type" : "object",
      "required" : [ "beginD", "compositeF", "criticalnessE", "natureE", "portObject", "portfolioCode", "portfolioName", "rightToRunF", "roundUnitE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This date tells when the constraint begins to apply."
        },
        "compositeF" : {
          "type" : "boolean",
          "description" : "Tells if a constraint portfolio should be put out of its composite because of the constraint"
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\n   2.1. for Constraint Breach feature, the attribute's value determines the degree to which a constraint is blocking when a portfolio manager wants to pass orders.\r\n   2.2. using Case Management Component, this value determines what are Cases that must be clarified.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates to which type of object the constraint set applies.\r\n\r\nThe permitted values, which correspond to entities defined in the 'meta-dictionnary', are:\r\n\r\n- Portfolio\r\n- Portfolio List\r\n\r\nPlease note that the value Portfolio List is only used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Tells when the constraints stops to be active."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the modelling constraint (set).\r\nDenomination is displayed in user's language, but if it is not available then the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the modelling constraint (set) in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the modelling constraint (set) in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the modelling constraint (set) in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "lastConstraintD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The last date when the constraint was modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxConstrainedGridN" : {
          "type" : "number",
          "description" : "Not Used."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the modelling constraint. A mandatory hard-coded classifying attribute for distinctive processing.",
          "enum" : [ "Allocation", "Security In", "Security Out", "Trading" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of a Portfolio or a List of Portfolios.\r\n\r\nThis field contains the ID of an occurrence in the table defined by the 'dim_port_dict_id' field (if not NULL).\r\n\r\nPlease note that a Portfolio List can only be used in the context of Odyssey Components Suite (release 1.30.6 SP[n] and previous), it has no impact on Tripleâ€™A Plus release R11 and above."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "In the case of a constraint (set) associated to a single portfolio, it gives the portfolio to which the constraint (set) is associated.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roundUnitE" : {
          "type" : "string",
          "description" : "Not Used.",
          "enum" : [ "<None>", "0.001", "0.005", "0.01", "0.05", "0.1", "0.5", "1", "5", "10" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "updateModelContraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ModelConstraintWithPermValues"
        }
      }
    },
    "updatePortfolioInput" : {
      "type" : "object",
      "required" : [ "activeF", "adminMgrName", "commMgrCode", "commMgrName", "currencyCode", "currentWithdreqStatusE", "languageCode", "lastRebalancingStatusE", "name", "serviceTypeE", "statusE", "taxLotMngtE", "thirdCode", "thirdName" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Specifies whether the portfolio is active or not. This information is used in the Portfolio Selection screen which, by default, only proposes the active portfolios to the user."
        },
        "adminMgrName" : {
          "type" : "string",
          "description" : "Reference to the administrative manager of a portfolio."
        },
        "commMgrCode" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "commMgrName" : {
          "type" : "string",
          "description" : "Reference to the commercial manager of the portfolio."
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Reference to the currency of the portfolio."
        },
        "currentWithdreqStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the current withdrawal request for the selected portfolio. It can be used by front-ends to show this information, by automatic rebalancing batches to avoid rebalancing portfolio with pending or failed requests and for defining alerts.",
          "enum" : [ "No Pending Request", "Partial Withdrawal Pending", "Full Liquidation Pending", "Partial Withdrawal Failed", "Full Liquidation Failed", "Full Liquidation Completed" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Portfolio denomination (not necessarily unique). This field is optional."
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is is a business indicator used on the portfolio dashboard. If the cash percentage in the portfolio is greater than a defined threshold, the indicator is set 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_CASH_PERCENT.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Not Constraints Compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the constraints are not compliant.\r\nWith Case Management: Set if the constraints are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. \r\nIf the number of days since the last operation ext_days_operation is higher than a defined threshold, the value is set to 1.\r\nThe threshold is defined with the parameter DS_DBOARD_PTF_DAYS_OPERATION.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiGoalNotCompliant" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates if the goal based portfolio is compliant with its objective or not.\r\nEquals to 1 if the goal is a risk, 0 otherwise."
        },
        "extBiInvalidIp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the portfolio investment profile is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiIpPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the investment profile review of the portfolio is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the investment profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. If the market value change defined by ext_change_mkt_val_p has dropped below a defined threshold, the value is set to 1.\r\nThe threshold is defined by the parameter DS_DBOARD_PTF_MKT_VAL_DROP.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives Not Met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard.\r\nNo Case Management: Set if the objectives are not met.\r\nWith Case Management: Set if the objectives are not compliant to a level of needing clarification or of being blocking.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiReturn" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Return Business Indicator.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the portfolio dashboard. It is, in fact, the same value as ext_ptf_threshold. A new format element has been created to clearly indicate that a dashboard indicator exists for this variable.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Percentage of Cash\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the percentage of cash, related to the portfolio's current market value, less the advances in cash.\r\nThe definition of cash is available in a constrained list on instruments (PCK_DS_CASH), which is set through the parameter DS_QUERY_LIQUIDITY.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Variation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the variation, in percentage, between the portfolio's current market value and its market value one year ago, related to the market value one year ago.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the portfolio.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the date of the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt idicates the number of days between the current date and the last operation performed on the portfolio.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the portfolio.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extGoalComplianceStatusE" : {
          "type" : "string",
          "description" : "This attribute defines the compliance status of a goal based portfolio and can have the following permitted values:\r\n0 â€“ None \r\n1 â€“ On track, the goal based portfolio is on track based on its objective and time horizon. \r\n2 â€“ At risk, the goal based portfolio is at risk and may not achieve its objective in the defined time horizon.\r\n3 â€“ Completed, the goal based portfolio is completed.",
          "enum" : [ "None", "On track", "At risk", "Completed" ]
        },
        "extInvestProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute indicates the investment profile currently linked to the portfolio via a strategy link. If no investment profile is currently linked to the portfolio then this attribute's value will be empty.\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no investment profile defined yet\r\n2 â€“ Valid, the current investment profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current investment profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extIpExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current investment profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extIpName" : {
          "type" : "string",
          "description" : "Investment Profile Name\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the name of the investment profile containing the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extIpRiskLevelN" : {
          "type" : "number",
          "description" : "Indicates the investment profile risk level; the risk level of the investment profile that contains the head strategy used for rebalancing. If no investment profiles are used for the link between the portfolio and the head strategy, then the extended attribute's value is empty. (See also ext_ip_name.)\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extIpRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the portfolio investment profile and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non-compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extObjMeanDiff" : {
          "type" : "number",
          "description" : "Strategy Deviation (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIt indicates the medium values of all differences between the actual weight and the objective's weight with its margins of all investment structure elements (positions and market segments).\r\nA complete explanation of the computation can be found in section Strategy Deviation Computation of the Triple'A Plus Web Packaging Reference Guide\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extOneYearPtfRet" : {
          "type" : "number",
          "description" : "Portfolio return over the last 12 months\r\n\r\nThis is the return of the portfolio over the last 12 months (with adaptation to month end).\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extOpenOrders" : {
          "type" : "boolean",
          "description" : "Indicates whether orders are pending on the market for this portfolio. Orders are considered to be pending in the market if their status is between (including) the values as defined in the system parameters SYS_OPSTATUS_SENT and SYS_OPSTATUS_EXECUTED.\r\n\r\nThis is an extended attribute that cannot be edited by the user but requires a data pre-computation (for more information, refer to the Triple'A Plus Web TSL Operating Guide)."
        },
        "extOverUnderPerf" : {
          "type" : "number",
          "description" : "Ptf/Bench Over/Under Performance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the portfolio's return and its benchmark's return, if benchmark's return is available.\r\n\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPlPercent" : {
          "type" : "number",
          "description" : "Portfolio P&L (in %)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the difference between the market value and the cost value of the portfolio, expressed in percentage of cost value.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfCur" : {
          "type" : "string",
          "description" : "Portfolio Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the portfolio's currency, which is a synonym's value. If it is not available, the portfolio's currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extPtfHierLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This is an extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide). It defines the hierarchy level of the portfolio.\r\n\r\nThis attribute is used only for the Web Packaging.\r\n\r\nPossible values are:\r\n0 - Parent and not child\r\n1 - Parent and child\r\n2 - Not parent, but child\r\n3 - Not parent and not child"
        },
        "extRedemEndD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Fixed Income nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD2" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Derivative nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD3" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Money Market nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRedemEndD4" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the end date of the first next instrument for redemption in Forwards nature.\r\n\r\nAn extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide for more information).\r\n\r\nThis attribute is used only for the Web packaging."
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the portfolio in system currency.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extYtdPtfReturn" : {
          "type" : "number",
          "description" : "Portfolio year-to-date return\r\n\r\nThis is the return of the portfolio since the beginning of the year up to the current day.\r\n\r\nIt is an extended attribute which cannot be edited by the end-user but filled by batch pre-computation overnight (see Triple'A Plus Web TSL Operating Guide)."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. The possible values are set by OAMS and cannot be modified."
        },
        "lastRebalancingD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date the portfolio was rebalanced."
        },
        "lastRebalancingStatusE" : {
          "type" : "string",
          "description" : "This attribute indicates the status of the last rebalancing performed on the portfolio. It can contain either the last automatic rebalancing (batch) or manual process. However, for manual processes, only rebalancing performed with the publishing option is automatically handled. Otherwise, each front-end has the responsability to make this attribute up-to-date.",
          "enum" : [ "<None>", "Pending", "Completed", "Failed" ]
        },
        "managTypeExtDenomination" : {
          "type" : "string",
          "description" : "Management Type"
        },
        "mgtBeginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Management begin date (for information purposes only)."
        },
        "name" : {
          "type" : "string",
          "description" : "Portfolio name (not necessarily unique). This field is mandatory."
        },
        "parentPortId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the parent portfolio. This reference makes it possible to define a hierarchy of portfolios. To include a hierarchy when you use the financial functions, select the No Hierarchy checkbox on the Domain screen's Parameters tab. The checkbox label changes to Load Hierarchy, indicating that the hierarchy, if there is one, will be loaded."
        },
        "serviceTypeE" : {
          "type" : "string",
          "description" : "This field is used to specify the portfolio service type, meaning the manner a portfolio is managed by the bank (which services are provided).\r\n\r\nThis data is used in front-ends including in each input control applied in a context of a Suitability and Appropriateness tests.",
          "enum" : [ "<None>", "Discretionary", "Advisory", "Execution only", "Others", "Robo-advisor", "Goal-based" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the portfolio.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "Pending Closure", "Closed" ]
        },
        "taxLotMngtE" : {
          "type" : "string",
          "description" : "Specifies if tax lot are managed on the portfolio.\r\nNot yet implemented.",
          "enum" : [ "No", "Yes" ]
        },
        "thirdCode" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "thirdName" : {
          "type" : "string",
          "description" : "Reference to a third party customer who is the owner of the portfolio."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Reference to the type of the portfolio."
        }
      }
    },
    "updatePortfolioStrategyLinkInput" : {
      "type" : "object",
      "required" : [ "beginD", "portfolioCode", "strategyCode", "strategyNatureE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin date of the link between an Object and a Strategy."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End Date of the link between an object and a strategy.\r\nNo NULL value can be inserted in this field. A NULL value, which means no end to the link between a strategy and an object, must be replaced by a date somewhen in the future."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a strategy link related to a single portfolio, it gives the portfolio to which the strategy link is related.\r\n\r\nThis attribute is used only for the Web Packaging to be able to define an association for the Design Studio datasets."
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Technical identifier for a strategy. This field is usually not seen by the user.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "updatePortfolioStrategyLinkSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioStrategyLinkWithPermValues"
        }
      }
    },
    "updatePortfolioSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/PortfolioWithPermValues"
        }
      }
    },
    "updateStrategyCompoInput" : {
      "type" : "object",
      "required" : [ "linkNatE", "object", "strategyHistoryId", "weightNatureE" ],
      "properties" : {
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkNatE" : {
          "type" : "string",
          "description" : "This nature allows to specify which kind of link relates a strategy to an object.",
          "enum" : [ "Strategy", "Benchmark", "Strat&Bench", "Strategy (Check only)", "Constraint", "Cash Management", "Performance Fees" ]
        },
        "minBuyAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minBuyPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellAmountN" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "minSellPercentageP" : {
          "type" : "number",
          "description" : "Please note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates the occurrence of the corresponding object type that belongs to the composition of the \"Benchmark\" or \"Investment Profile\"."
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the relative inportance of a strategy for a portfolio or list of portfolios.\r\n\"1\" is the most important. <NULL> are processed at least importance."
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'Strategy History' to which a 'Strategy Composition' necessarily belongs."
        },
        "weightN" : {
          "type" : "number",
          "description" : "This attribute allows defining the percentage of the strategy defined in the composition of a strategy with \"Composite\" nature. This is used when we want to define a Core-Satellite strategy structure.\r\n\r\nPlease note that this object is only used in the context of Odyssey Components Suite, it has no impact on Tripleâ€™A Financial Server computations"
        },
        "weightNatureE" : {
          "type" : "string",
          "description" : "Describes how the Weight is computed.",
          "enum" : [ "<None>", "Relative", "Absolute", "Computed by Difference" ]
        }
      }
    },
    "updateStrategyCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyCompoWithPermValues"
        }
      }
    },
    "updateStrategyElementInput" : {
      "type" : "object",
      "required" : [ "complianceChronoCompNatE", "complianceChronoNatE", "constraintTemplateCode", "criticalnessE", "instrCode", "limitNatE", "natureE", "objTrackErrorCheckE", "recomNatE", "strategyHistoryId" ],
      "properties" : {
        "actTrackErrN" : {
          "type" : "number",
          "description" : "Current's value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "benchAnalysisObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an object (which entity depends on the value of the attribute bench_analysis_entity_id) which could be used to define a second type of benchmark for a particular strategy. \r\n\r\nNote that in the benchmark storage function, we test whether the user decided to use this new type of benchmark to build up his strategy. We assume that if at least one bench_analysis_object_id is not NULL, the strategy benchmark will take reference on this attribute."
        },
        "benchDimensionE" : {
          "type" : "string",
          "description" : "This attribute is used only for the Web Packaging.\r\n\r\nDimension of benchmark related to the strategy's objective. This attribute is directly related to the attribute [bench_entity_dict_id]",
          "enum" : [ "<None>", "Portfolio", "Instrument", "Strategy" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy nature such as 'allocation', 'model portfolio'."
        },
        "complianceChronoCompNatE" : {
          "type" : "string",
          "description" : "Indicates the type of Compliance Chrono nature.",
          "enum" : [ "None", "Measure", "Indicator" ]
        },
        "complianceChronoNatE" : {
          "type" : "string",
          "description" : "Indicates the Compliance Chrono nature.",
          "enum" : [ "None", "VaR Percent", "Volatility Percent", "Tracking Error Percent", "Expected Shortfall Percent", "Diversification Effect Percent", "Marginal VaR Percent", "VaR Amount", "Expected Shortfall Amount", "Marginal VaR Amount", "Diversification Effect Amount", "Risk Grade", "Volatility Amount", "Tracking Error Amount", "Shortfall Probability Percent", "Shortfall Probability Amount", "Marg. Volatility Percent", "Marg. Volatility Amount", "Marg. Tracking Error Percent", "Marg. Tracking Error Amount", "Marg. Expected Shortfall Percent", "Marg. Expected Shortfall Amount", "EVaR Percent", "EVaR Amount", "Marginal EVaR Percent", "Marginal EVaR Amount", "TVaR Percent", "TVaR Amount", "Marginal TVaR Percent", "Marginal TVaR Amount", "Beta", "Super Hedging Price", "Information Ratio", "Sharpe Ratio", "Treynor Ratio", "Jensen's Alpha", "Risk Level", "Expected Return Percent", "Expected Return Amount", "Product Risk Class" ]
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This field corresponds to a template to enter new constraints in the system throughout the constraint wizard tool.\r\n\r\nThis tool allows end-users to define constraint sets and trading constraints directly in the system.\r\n\r\nThe constraint wizard main principle is to provide users with a set of pre-defined explicit constraint templates. After having selected a template, users give the required parameters (i.e. value, date etc.). When they confirm their input, the system generates automatically the corresponding script definition. Afterwards users can modify the constraint parameters. The system overrides automatically the previous definition."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute returns the severity set at Strategy & Constraint level.\r\n\r\nActivating the Case Management Component, the severity is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nthe case's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nthe case's severity determines what are Cases that must be clarified.\r\n\r\nUsing the Constraint Breach facility, this attribute determines the level to which a constraint is blocking when passing an Order into an Order Session (Order Entry, Allocate Order and Strategy Reconciliation).\r\n\r\nSee Orders & Productivity Guide.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Description of the strategy element. Useful for \"unstructured constraint\" strategy element."
        },
        "effTrackErrN" : {
          "type" : "number",
          "description" : "Effective's Value of Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "In case of an objective which is described in tem of a reference to an other object, an additive (positive or negative) margin can be applied to it."
        },
        "instrCode" : {
          "type" : "string",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "instrId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a financial instrument.\r\nUsed only for 'strategy element' beeing part of a 'model portfolio' or a 'recommendation list'  strategy."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "limitNatE" : {
          "type" : "string",
          "description" : "Defines thetype of limit for the strategy objective. This information is significant only in the case of an 'allocation constraint' strategy.\r\n\r\nThe value of the limit is stored in the 'value_n' filed. \r\nFor instance, if the objective is 20% (Nature = Percentage) invested in the Swiss stock market (market segment). the lower limit could be 3%.\r\nTo interpret this figure, the nature of the objective has also to be taken into account.",
          "enum" : [ "<None>", "<", "<=", ">", ">=", "[]", "=" ]
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Used only to be associated to a 'strategy element' belonging to an 'allocation' or an 'allocation constraint set'.\r\nIt contains a market segment identifier of the 'grid' associated to the strategy."
        },
        "maxN" : {
          "type" : "number",
          "description" : "Maximum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "minN" : {
          "type" : "number",
          "description" : "Minimum Value (of an Objective).\r\nUsed for Risk Strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "A mandatory \"hard-coded\" classifying attribute for distinctive processing.",
          "enum" : [ "Weight", "Minimum Weight", "Maximum Weight", "Modified Duration", "Modified Duration Contribution", "Beta", "Beta Contribution", "Current Return", "Current Return Contribution", "Minimum Rating", "Tracking Error", "Model Item", "Recommendation", "Constraint", "Model", "Contrib Model", "Contrib Model Item", "Reference Weight", "Surveyed Securities List", "Risk" ]
        },
        "objTrackErrMarginN" : {
          "type" : "number",
          "description" : "Objective's Margin linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrN" : {
          "type" : "number",
          "description" : "Objective linked to the Tracking Error.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return."
        },
        "objTrackErrorCheckE" : {
          "type" : "string",
          "description" : "Indicates if the Objective's Tracking Error is checked or not.\r\nThe Tracking Error measures the unexplained portion of an investments performance relative to a benchmark. It is the standard deviation of the difference between the portfolio and the benchmark return.\r\n\r\nPermitted values are:\r\n\r\n0: not checked\r\n1: checked",
          "enum" : [ "Not Checked", "Checked" ]
        },
        "priorityN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The instrument or market segment priorities are used to define, in the case of purchases, the order the instruments are processed for buys. Two or more instruments having the same priorities shall be purchased as to correct the highest deficits first, as currently done.\r\nIn the case of recommendation lists, under the MARKET_SEGMENT_RANK system parameter set, the priority_n shall play the role of the rank_n, relegated in this context to a display role only."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The rank is part of the logical indentifier of the strategy element. It will be used for display purposes."
        },
        "recomNatE" : {
          "type" : "string",
          "description" : "This information is useful for 'model portfolio' or 'recommendation list'.",
          "enum" : [ "<None>", "Buy", "Increase", "Keep", "Reduce", "Sell", "Neutral" ]
        },
        "strategyHistoryId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference of an occurrence in 'strategy history' to which a 'strategy element' necessarily belongs to."
        },
        "valueN" : {
          "type" : "number",
          "description" : "Defines the value of  the strategy objective.\r\nFor instance, the objective could be 20% (Nature = Percentage)  invested in the Swiss stock market (market segment), or a Beta of 1 (Nature = Beta) for the overall portfolio."
        }
      }
    },
    "updateStrategyElementSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyElementWithPermValues"
        }
      }
    },
    "updateStrategyHistoriesInput" : {
      "type" : "object",
      "required" : [ "beginD", "strategyCode" ],
      "properties" : {
        "applicD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Strategy application date: it allows to distinguish the validity date from the application date.\r\nIn R3.50, just for information purpose."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Begin Date of a 'Strategy History'. This date is part of the 'Strategy History' primary key.\r\nThis information is combined with the 'End Date' to check that, for the same 'Strategy', there is no overlapping of occurrences in 'Strategy History'."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Used mainly for reporting \r\npurposes (see the 'Denomination' table)."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of a 'Strategy History'.\r\nThis parameter is optional. No end date provided means no end to the link between a strategy and an object."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy history.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the value is empty (null).\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy history in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy history in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy history in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "strategyCode" : {
          "type" : "string",
          "description" : "Reference of the strategy to which a strategy history necessarily belongs to."
        },
        "strategyNatureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        }
      }
    },
    "updateStrategyHistoriesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyHistoryWithPermValues"
        }
      }
    },
    "updateStrategyInput" : {
      "type" : "object",
      "required" : [ "benchFreqUnitE", "complianceFreqUnitE", "criticalnessE", "heartUploadE", "irregularF", "name", "natureE", "relativeMarginF", "retDetLevE", "rightToRunF", "riskF", "subNatureE" ],
      "properties" : {
        "benchFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of unit of bench_freq_unit_e. See this attribute for more information."
        },
        "benchFreqUnitE" : {
          "type" : "string",
          "description" : "Used in conjunction with bench_freq_n, it indicates the \"logical\" rebalancing frequency, strating on the strat_rebal_d. This information is used during the Benchmark Storage process: if the frequency of rebalancing AND the strat_rebal_d are not void, the strategy will be rebalanced at regular dates, ie. the current physical weights are stored instead of the dynamic weight.\r\n\r\nExample : Benchmark Storage, on a monthly basis, starting on 31/12/01, ending on 31/03/02, with a strat_rebal_d=18/11/00 and logical frequency of 1 month, the storage will be done on the following dates :\r\n\r\n1. 31/12/01 - 18/01/02\r\n2. 18/01/02 - 31/01/02\r\n3. 31/01/02 - 18/02/02\r\n4. 18/02/02 - 28/02/02\r\n5. 28/02/02 - 18/03/02\r\n6. 18/03/02 - 31/03/02",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "benchObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Indicates, when a strategy duplicates an benchmark, the occurrence of the corresponding object type which is duplicated.\r\nThis benchmarking is valid only for strategy natures such as 'allocation' or 'model portfolio'."
        },
        "complianceFreqN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the Risk Strategy required frequency update.\r\nThe compliance frequency unit is defined by day, week, month, quarter, semester, year."
        },
        "complianceFreqUnitE" : {
          "type" : "string",
          "description" : "The compliance frequency is defined as number of frequency unit.",
          "enum" : [ "<None>", "Day", "Week", "Month", "Quarter", "Semester", "Year" ]
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This attribute determines the constraint's severity.\r\nThis attribute is checked regarding the value of system parameters:\r\n1. SESSION_BLOCK_CRITICALNESS: \r\nwhen the Case Management Component is activated, the constraint's severity could block the Order Session (criticalness' value > system parameter's one).\r\n2. STRAT_BLOCKCONSTR_CRITICALNESS: \r\nusing Case Management Component, this value determines what are Cases that must be clarified.\r\n\r\nUsed for Asset Allocation, Model Portfolio and Constraint Set.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long Name for a strategy."
        },
        "dimGridDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "It allows you to assign a grid or a grid list to a strategy."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the strategy.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the strategy in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the strategy in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the strategy in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "fluctMarginN" : {
          "type" : "number",
          "description" : "Allows to specify for a model portfolio the global fluctuation margin that is applied to each financial instrument composing the model portfolio when  compared to the real portfolio."
        },
        "gridObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Allows users to assign a grid list or a grid to a strategy.\r\nMoreover, the user can assign a grid/grid list to model portfolios or recommendation lists. \r\nPlease refer to the Triple'A Orders and Productivity Guide for more details on this feature."
        },
        "heartUploadE" : {
          "type" : "string",
          "description" : "Only used if you implement the Triple'A - HEART interface. This attribute tells whether or not the strategy is uploaded in HEART.",
          "enum" : [ "No", "Yes", "To Delete" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "invProfRiskLevelN" : {
          "type" : "number",
          "description" : "This field stores the level of the risk that the Investment Profile can take."
        },
        "irregularF" : {
          "type" : "boolean",
          "description" : "Benchmark Storage process definition flag. It indicates for a storage period whether only the current - at from date - strategy history weights are used for computation or any new strategy history weights found between the from date and the till date are taken into account."
        },
        "lastComplianceUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Defines the last date on which the Risk Strategy has been updated."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastStoredBenchD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A non-editable date at which the instrument has been stored the last time. Update by the Benchmark Storage function process."
        },
        "lastUpdateD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last update of the strategy. For information only."
        },
        "marketSegmentId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a 'market segment'.\r\nA 'model portfolio' or a 'recommendation list' strategy may be restricted to a particular 'market segment'."
        },
        "name" : {
          "type" : "string",
          "description" : "Short Name for a strategy."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the 'nature' of the 'strategy'. \r\nFor more information please see the Orders and Productivity Guide, and the Performance Analysis Reference Guide.",
          "enum" : [ "Asset Allocation", "Model Portfolio", "Recommendation List", "Constraint Set", "Index", "Currency Allocation", "Global Order Quantity", "Instr Order Quantity", "Instr Result Quantity", "Instr Order Portfolio %", "Instr Result Portfolio %", "Market Seg Result Portfolio %", "Switch Instrument", "Cash Result Portfolio %", "Currency Hedge", "Portfolio Order Quantity", "Portfolio Resulting Quantity", "Weighted Switch Instrument", "Trading Constraint", "Allocation Constraint", "Security Constraint", "Investment profile", "Benchmark", "Surveyed Securities List", "Conversion", "Arbitrage", "Combined Sell/Buy", "Instr. Resulting of Mkt Sgt", "Composite", "Instr. Res. % of Strat Mkt Sgt", "Risk Strategy" ]
        },
        "parentStrategyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Technical identifier for a strategy. This field is normally not seen by the user.\r\nThis relation allows to indicates that a strategy is a 'sub-strategy' of a strategy of a higher level.\r\nFor instance, an asset allocation may have one model per market segment as sub-strategy."
        },
        "relativeMarginF" : {
          "type" : "string",
          "description" : "It defines how Margins are computed.\r\n\r\nExample:\r\nConsider an Investment Profile (Asset Allocation, with an objective weight = 10% on Chemicals, and a Model Portfolio with two Instruments, 50% Novartis & 50% Roche). \r\nThe Fluctuation Margin is defined as equal as 1% into Model Portfolio.\r\n\r\nStock\r\n  Stock/CHF\r\n    Chemicals                  Objve: 10%\r\n       Novartis                        5%\r\n       Roche                           5%\r\n\r\nThe computation of Fluctuation Margin is as follows:\r\nAbsolute: 1% * 10% = +/- 0.10%\r\nRelative: 1% * 5% = +/- 0.05%\r\nUnweighted Absolute: +/- 1%.",
          "enum" : [ "Absolute", "Relative", "Unweighted absolute" ]
        },
        "retDetLevE" : {
          "type" : "string",
          "description" : "Benchmark Storage detail level:\r\n1. Global\r\n2. Grid\r\n3. Instrument",
          "enum" : [ "Global", "Grid", "Instrument", "Use PSP" ]
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "riskF" : {
          "type" : "boolean",
          "description" : "Indicates whether a strategy is defined in term of risks exposure or not.\r\nThis information is used when comparing a portfolio to a strategy. If the flag is 'Yes', the 'risk exposure' valuation of the portfolio will be taken into account in the comparison process."
        },
        "stratRebalD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Benchmark Storage process definition date. Used in conjunction with bench_freq_n and bench_freq_unit_e. See this latter attribute for more information."
        },
        "subNatureE" : {
          "type" : "string",
          "description" : "A strategy sub-nature.",
          "enum" : [ "<None>", "Constant Weight", "Load Ratio", "Dummy Portfolio" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "updateStrategySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/StrategyWithPermValues"
        }
      }
    },
    "updateTermEventInput" : {
      "type" : "object",
      "required" : [ "beginD", "currencyCode", "optStyleE", "optionClassE", "underlyInstrCode" ],
      "properties" : {
        "barrierN" : {
          "type" : "number",
          "description" : "Used in Barrier option to indicate the barrier. In double barriers, it indicates the lower barrier."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the date from which the exercise may occur.\r\n\r\nFor events that can occur only at one specific date (e.g., European options, futures, etc.), it will be equal to END_DATE.\r\n\r\nIntegrity rules:\r\n- Must be less than or equal the end_date.\r\n- Used in Asian options as the first date on which the averaging takes place. (The Asian current average is stored in the option instrument chrono.)"
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the occurrence."
        },
        "endD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies the last date on which an event may occur.\r\n\r\nIntegrity rule:\r\n- If specified, it must be greater than or equal the Begin_Date (see Begin_Date definition)."
        },
        "exerQuoteN" : {
          "type" : "number",
          "description" : "Specifies the market quotation at which the underlying is exchanged.\r\n\r\nNotes:\r\n- If the underlying instrument is a currency, the quote stored here is the exchange rate as quoted by the market. However, the price stored must satisfy the quantity * price equation. (Price may be = 1/Quote.) \r\n- The currency of the quote is expressed through its relationship with Currency.\r\n- Delivery quotes for non-repetitive Futures and Forwards are found in the position."
        },
        "exerQuoteP" : {
          "type" : "number",
          "description" : "Identifies the exercise quote (strike) in percentage of initial fixing price applicable to the underlying instrument when the redemption quote is applicable to the instrument. It is used for exotic options that embed terms and conditions relative to an underlying with a strike. \r\n\r\nApplicable for exotic options definition management."
        },
        "leverageN" : {
          "type" : "number",
          "description" : "Specifies the multiplier factor applied to the quantity of the underlying for structured product (e.g., Mini Future-Turbo or Accumulator).\r\n\r\nApplicable for structured product definition management and is stored for information purposes only."
        },
        "lowerBarrierP" : {
          "type" : "number",
          "description" : "This attribute is used to capture the Lower barrier price expressed as a % of Exercise Price when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "optStyleE" : {
          "type" : "string",
          "description" : "Indicates when the option can be exercised.\r\n- American options can be exercised at all times.\r\n- European options can be exercised at expiration date.\r\n\r\nPermitted values:\r\n- 0 = None\r\n- 1 = American \r\n- 2 = European\r\n- 3 = Bermudan\r\n\r\nIntegrity rules:\r\n- The value 0 is applicable to instruments with Futures or Forwards nature.\r\n- The values 1, 2, and 3 are applicable to instruments with Option nature.",
          "enum" : [ "<None>", "American", "European", "Bermudan" ]
        },
        "optionClassE" : {
          "type" : "string",
          "description" : "Describes whether the holder has the right to buy or sell the underlying.\r\nWhen not defined, the event is firm.\r\n\r\nPermitted values:\r\n- 0 = Not optional\r\n- 1 = Call\r\n- 2 = Put\r\n\r\nIntegrity rules:\r\n- The 0 value applies to instruments with a Forward or Future nature.\r\n- The 1 and 2 values apply to instruments with an Option nature.",
          "enum" : [ "<None>", "Call", "Put" ]
        },
        "protectedD" : {
          "type" : "string",
          "format" : "date",
          "description" : "For structured products, it defines the date that guarantees a minimum period before which the knock-out conditions are not applicable (disabled).\r\n\r\nApplicable for structured product definition management and is stored for information purposes only."
        },
        "underlyFixingPriceN" : {
          "type" : "number",
          "description" : "This attribute is used in the case of an exotic option to capture the initial price for the underlying instrument, which is used to define exercise and barrier levels when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "underlyInstrCode" : {
          "type" : "string",
          "description" : "Indicates the instrument upon which the term contract is derived.\r\n\r\nFor bond futures, the term contract is deemed to be on a notional bond but all calculations are done on the cheapest-to-deliver bond. Therefore, the underlying is deemed to be a composite instrument (so that conversion ratios can be described) that contains the cheapest-to-deliver. \r\n\r\nNote: The cheapest-to-deliver can either be specified or calculated by the system."
        },
        "underlyInstrDenom" : {
          "type" : "string",
          "description" : "Indicates the instrument upon which the term contract is derived.\r\n\r\nFor bond futures, the term contract is deemed to be on a notional bond but all calculations are done on the cheapest-to-deliver bond. Therefore, the underlying is deemed to be a composite instrument (so that conversion ratios can be described) that contains the cheapest-to-deliver. \r\n\r\nNote: The cheapest-to-deliver can either be specified or calculated by the system."
        },
        "underlyQtyN" : {
          "type" : "number",
          "description" : "Specifies the number of underlying instruments that can be obtained by exercising this contract.\r\n\r\nIntegrity rule:\r\n- Must be strictly greater than 0."
        },
        "upperBarrierN" : {
          "type" : "number",
          "description" : "In double barrier options, indicates the upper barrier."
        },
        "upperBarrierP" : {
          "type" : "number",
          "description" : "This attribute is used to capture the Upper barrier price expressed as a % of Exercise Price when applicable. \r\n\r\nApplicable for exotic option definition management."
        },
        "validityD" : {
          "type" : "string",
          "format" : "date",
          "description" : "Indicates the date from which the condition is valid."
        }
      }
    },
    "updateTermEventSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/TermEventWithPermValues"
        }
      }
    },
    "updateThirdCategoryInput" : {
      "type" : "object",
      "required" : [ "categoryCode", "categoryDenom", "thirdPartyCode" ],
      "properties" : {
        "categoryCode" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "categoryDenom" : {
          "type" : "string",
          "description" : "Id of the category."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Code of the third party."
        }
      }
    },
    "updateThirdCategorySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ThirdCategoryWithPermValues"
        }
      }
    },
    "updateThirdPartyInput" : {
      "type" : "object",
      "required" : [ "activeF", "bestExecE", "cliClassifE", "clientF", "commodDerivKnowE", "complexInstrKnowF", "creditDerivKnowE", "currDerivKnowE", "currencyCode", "economicStatKnowE", "educationLevelE", "gdprChildF", "gdprInscopeF", "gdprProcessRestrictionF", "indiceDerivKnowE", "intDerivKnowE", "languageCode", "legalEntityStatusE", "legalEntityTypeE", "managerCode", "managerName", "name", "otherComplexKnowE", "residGeoCode", "riskGeoCode", "secDerivKnowE", "statusE", "taxGeoCode" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is the date when the third party is foreseen as active"
        },
        "bestExecE" : {
          "type" : "string",
          "description" : "This field indicates whether the Best Execution Policy is signed or not.",
          "enum" : [ "None", "Not Defined", "Not Signed", "Signed", "Pending", "Missing" ]
        },
        "cliClassifE" : {
          "type" : "string",
          "description" : "Manages the client's categorisation. By default, it is set to None. \r\n\r\nThis field may be modified by authorised users if a professional client requests to be treated as a retail client for the Mifid compliance.",
          "enum" : [ "None", "Retail", "Professionnal Per Se", "Professionnal on Request", "Eligible Counterparty", "Institutional" ]
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "commodDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for commodities derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "complexInstrKnowF" : {
          "type" : "boolean",
          "description" : "This flag is used to specify whether the client knows complex instruments."
        },
        "creditDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for credit derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for currency derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "currencyCode" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "eMailAddressC" : {
          "type" : "string",
          "description" : "E-mail address of the third party."
        },
        "economicStatKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for economic statistics.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "educationLevelE" : {
          "type" : "string",
          "description" : "This field is used to specify the level of education of the client. This could be one argument used to check if the client has the right level of knowledge in complex instruments.",
          "enum" : [ "None", "Not Defined", "High School", "Graduate", "Post-Graduate" ]
        },
        "extBiCashPercent" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the cash ratio business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCategory" : {
          "type" : "string",
          "description" : "The client category.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a field used for the client dashboard. It contains the client type.\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiCstCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Constraints compliant.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the constraints business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last operation.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the days since last operation business indicator fpr any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days since last proposal.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the number of days since the last proposal is larger than a defined threshold. The threshold is defined using parameter DS_DBOARD_CLIENT_DAYS_PROPOSAL.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiInvalidMifid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile of the client is invalid (expired or no profile defined).\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile is invalid.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMifidPndVal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines if the MiFID profile review of the client is pending validation.\r\n\r\nThis is a business indicator used on the dashboard, set to 1 if the MiFID profile review is pending validation.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extBiMktValDrop" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business indicator used on the client dashboard.\r\nSet to 1 if the market value drop business indicator for any of client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiObjCompliance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Objectives met.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is a business inidcator used on the client dashboard.\r\nSet to 1 if the objectives met business indicator for any of the client's portfolios is set to 1.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extBiProposalPending" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If there are proposals, which are in status \"Sent for Validation\", for the client's proposals, and the number of days between the last modifiction date for the oldest of these proposals, and the current date exceeds the value of the system paramter DS_DBOARD_CLIENT_PENDING_PROP, the value is set to 1.\r\n\r\nThis attribute can then be evaluated for the definition of pre-defined queries and alerts.  \r\n\r\n\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates whether at least one of the portfolios related to the client has an advisory service.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCashPercent" : {
          "type" : "number",
          "description" : "Cash Ratio.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest cash percentage of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extChangeMktValP" : {
          "type" : "number",
          "description" : "Market Value Drop.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThe largest drop in market value (expressed in %) of all the portfolios linked to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extCstCompliance" : {
          "type" : "string",
          "description" : "Constraints Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some constraints are breached. \r\n- Not Evaluated: Impossible to evaluate the constraints.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Constraints are not breached.\r\n- No Constraints: No constraints are defined on the associated portfolios.\r\n- Not Compliant â€“ High: Some breached constraints are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some breached constraints are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some breached constraints are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Constraint", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extDateOperation" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Operation Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last operation performed on all portfolios related to the client.\r\nIt is the most recent date of all Last Operation Date (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the Instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDateProposal" : {
          "type" : "string",
          "format" : "date",
          "description" : "Last Proposal Date\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the date of the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysOperation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Operation (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last operation performed on all portfolios related to the client.\r\nIt is the minimum value of all Last Operation (in days) (extended attribute) on client portfolios.\r\nThe operation can be a buy, a sell, an investment, a withdrawal, a transfer, or a portfolio transfer. Its status must be greater or equal to Order and the nature of the instrument can be a stock, a fixed income, an option, a future, a discount instrument, a fund share, an option bond, a convertible bond, or an exotic option.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDaysProposal" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Last Proposal (in days)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nIndicates the number of days between the current date and the last proposal performed on all portfolios related to the client.\r\nA proposal is an order session (function result), related to a portfolio, whose session nature is equal to Investment Proposal and whose session status is equal to Sent to Client or Accepted\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extMifidCurStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None\r\n1 â€“ No profile, no MiFID profile defined yet\r\n2 â€“ Valid, the current MiFID profile is valid. Expiry date not reached\r\n3 â€“ Expired, the current MiFID profile is expired.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "extMifidExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attributes defines the expiry date of the current MiFID profile.\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide)."
        },
        "extMifidRvwStatus" : {
          "type" : "string",
          "description" : "This attribute defines the status of the current review of the MiFID profile of the client and can have the following permitted values:\r\n\r\n0 â€“ None, no review in progress\r\n1 â€“ In progress, review in progress\r\n2 â€“ Pending approval, review pending validation\r\n\r\nThis attribute is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).",
          "enum" : [ "None", "In progress", "Pending approval" ]
        },
        "extObjCompliance" : {
          "type" : "string",
          "description" : "Objectives Compliance\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some actual weights are not compliant with their objectives with margins.\r\n- Not Evaluated: Impossible to evaluate the objectives' compliance.\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n\r\n- Compliant: Actual weights are compliant compared to their objectives with margins.\r\n- No Objectives: No objectives are defined on the investment structure.\r\n- Not Compliant â€“ High: Some non-compliant actual weights are based on severities which are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some non-compliant actual weights are based only on severities which are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some non- compliant actual weights are based on severities which are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Evaluated:It was impossible to evaluate the objectives' compliance.\r\n\r\nThis attribute is used only for the Web Packaging.",
          "enum" : [ "No Objective", "Not Evaluated", "Compliant", "Not Compliant - Low", "Not Compliant - Medium", "Not Compliant - High", "Not Compliant" ]
        },
        "extRefCur" : {
          "type" : "string",
          "description" : "System Ccy.\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the ISO code of the system currency, which is a synonym's value. If it is not available, the system currency's code is returned instead.\r\nThe definition of the synonym's code to be used is set through the parameter DS_CURRENCY_CODE (which is delivered with no values).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extRiskCompliance" : {
          "type" : "string",
          "description" : "Risk Compliance is an extended attribute that cannot be edited by the user but requires a data pre-computation. In the standard packaging, this attribute is built from the results of the worst risk indicators of VaR %, Volatility %, Tracking Error %, Expected Shortfall %, Diversification Effect %, VaR amount, Expected Shortfall amount, Diversification Effect amount, Risk Grade, Volatility amount, Tracking Error amount, Shortfall Probability %, and Shortfall Probability amount.\r\n\r\nFor each indicator, the compliance is calculated as follows:\r\n\r\nIf Case Management is deactivated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Risk Compliant: Some risk objectives are reached. \r\n- Not Evaluated: No risk values calculated.\r\n\r\n\r\nIf Case Management is activated, the following values are allowed:\r\n- Risk Compliant: Risk values are under risk objectives.\r\n- No Risk Objectives: No risk objectives are defined in the portfolio.\r\n- Not Compliant â€“ High: Some risk objectives are reached and are based on severities     that are high (associated severity >= system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Medium: Some risk objectives are reached and are based on severities that are medium (system parameter STRAT_BLOCKCONSTR_CRITICALNESS <= associated severities < system parameter SESSION_BLOCK_CRITICALNESS).\r\n- Not Compliant â€“ Low: Some risk objectives are reached and are based on severities that are low (associated severities < system parameter STRAT_BLOCKCONSTR_CRITICALNESS).\r\n- Not Evaluated: No risk values calculated.\r\n\r\nThis attribute is used only for the web packaging.",
          "enum" : [ "No Risk Objective defined", "Risk Objective not evaluated", "Risk Compliant", "Not Risk Compliant - Low", "Not Risk Compliant - Medium", "Not Risk Compliant - High", "Not Compliant" ]
        },
        "extTdMktValM" : {
          "type" : "number",
          "description" : "Market Value (Sys. Ccy.)\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the current market value of the client in system currency. It is the total market value, in system currency, of all portfolios related to the client.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "faxC" : {
          "type" : "string",
          "description" : "The fax number of the third party."
        },
        "gdprChildF" : {
          "type" : "boolean",
          "description" : "Considered as child for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprInscopeF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "gdprProcessRestrictionF" : {
          "type" : "boolean",
          "description" : "In scope for General Data Protection Regulation.\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "indiceDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for index derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "intDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for interest rate derivatives.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and  cannot be modified."
        },
        "lastContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of last contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "legalEntityStatusE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity status. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field can be extended by adding new permitted values (no overwrite of the standard ones).",
          "enum" : [ "None", "Prospect - New", "Client", "Ex-client", "Active", "Business Affiliate", "Business Associate", "Client Advisor", "Client Associated", "Client Related", "Inactive", "Other", "Prospect - Qualified", "Prospect - Opportunity", "Prospect - Lost", "Client-Related (user defined)", "Referrer", "Suspect", "Unknown", "Ex-Client Associated", "Ex-Client Related" ]
        },
        "legalEntityTypeE" : {
          "type" : "string",
          "description" : "Corresponds to the Wealth Suite Front Office CRM (WM) legal entity type. Used in the context of data integration of legal entities from Wealth Suite Front Office CRM (WM) into third parties in Wealth Suite Front Office PM (TAP). This enumerated field cannot be extended.",
          "enum" : [ "None", "Customer", "Person", "Organization", "Economic Group" ]
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "managerName" : {
          "type" : "string",
          "description" : "Manager, who is in charge of the client relationship. \r\nThis attribute is for information purpose only."
        },
        "mifidLastModifD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This field is used to persist the date when the client data have been last modified."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "nextContactD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Planned date for next contact\r\n\r\nThis attribute is only used in the context of the WM integration."
        },
        "otherComplexKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for other complex instruments.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "phoneC" : {
          "type" : "string",
          "description" : "The telephone number of the third party."
        },
        "residGeoCode" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "residGeoExtDenomination" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "riskGeoCode" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "riskGeoExtDenomination" : {
          "type" : "string",
          "description" : "Risk country of the third party. \r\nIn particular, for custodians, counterparties, security issuers."
        },
        "secDerivKnowE" : {
          "type" : "string",
          "description" : "This approach provides more precisely which complex instruments the client knows. Therefore several fields are needed in order to specify which categories of complex instruments the client knows. This one is used for securities.",
          "enum" : [ "None", "Not Defined", "Have Know/Expe", "Have No Know/Expe" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of a third party.",
          "enum" : [ "<None>", "Active", "Cancelled", "Prospect", "Blocked", "Debit Lock", "Credit Lock", "In Progress", "Inactive" ]
        },
        "taxGeoCode" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "taxGeoExtDenomination" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "telexC" : {
          "type" : "string",
          "description" : "The mask number of the third party."
        },
        "userId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Not used."
        }
      }
    },
    "updateThirdPartyListInput" : {
      "type" : "object",
      "required" : [ "dataSecuProfCode", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the list\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "queryDefinition" : {
          "type" : "string",
          "description" : "This attribute is only used for the Web packaging.\r\nThis Field contains the query definition used by the dynamic search."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        },
        "validityPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days after the last reconstruction of a constrained list according to constraint definition, for which the enumerated list is deemed valid.\r\n\r\nSpecial values:\r\nNULL - The list is rebuilt every time it is used\r\n0    - The list is rebuilt only if any object from one of the underlying entity (portfolio, instrument etc...) was modified. The system performs a check using all entities listed in the constraint definition.\r\n\r\nE.g. a portfolio group is defined as all portfolios managed by 'Smith' and with a reference currency equal to USD. For performance reasons this list instead of being systematically recomputed at request, is in fact stored as an enumerated list (although the definition is also associated to the list occurrence). Manager 'Smith' specifies however that the composition of the list should never be older than 7 days. When a request to use this list is made, the system checks that the last reconstruction date is not older than the current date less the validity period."
        }
      }
    },
    "updateThirdPartyListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ListWithPermValues"
        }
      }
    },
    "updateThirdPartySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ThirdPartyWithPermValues"
        }
      }
    },
    "updateTradingConstraintInput" : {
      "type" : "object",
      "required" : [ "beginD", "code", "constraintTemplateCode", "criticalnessE", "name", "natureE", "portObject", "portfolioCode", "portfolioListCode" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the begin of validity of the trading constraint."
        },
        "code" : {
          "type" : "string",
          "description" : "Code of the trading constraint."
        },
        "constraintTemplateCode" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateDenom" : {
          "type" : "string",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "constraintTemplateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the template used to build the (script) definiton of the trading constraints."
        },
        "criticalnessE" : {
          "type" : "string",
          "description" : "This critical level lets you decide the degree to which a constraint is blocking when a portfolio manager wants to pass orders. You can access this feature from the order entry function when you run a compliance check. It is also accessible from the allocate order and strategy reconciliation functions.",
          "enum" : [ "<None>", "Not Critical", "Low", "Medium", "High" ]
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the trading constraint."
        },
        "dimPortDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "dimPortName" : {
          "type" : "string",
          "description" : "Attribute specifying whether the trading constraint is linked to a portfolio or to a list of portfolios."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date, specifying the end of validity of the trading constraint ."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the trading constraint."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the trading constraint, not yet used.",
          "enum" : [ "Trading Constraint" ]
        },
        "portObject" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the portfolio or list of portfolios the trading constraint is linked to."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "In the case of a trading constraint associated to a single portfolio, it gives the portfolio to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListCode" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "portfolioListDenom" : {
          "type" : "string",
          "description" : "In the case of a traiding constraint associated to a list of portfolios, it gives the list of portfolios to which the trading constraint is associated.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "updateRightF" : {
          "type" : "boolean"
        }
      }
    },
    "updateTradingConstraintSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/TradingConstraintWithPermValues"
        }
      }
    },
    "updateTypeInput" : {
      "type" : "object",
      "required" : [ "instrNatE", "name", "operNatE", "rankN" ],
      "properties" : {
        "attributeDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeEntityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "attributeName" : {
          "type" : "string",
          "description" : "Unique identifier of an attribute to which the type is associated, e.g. the types of an operation are associated to the \"type_id\" attribute in the operation entity."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the type.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "instrNatE" : {
          "type" : "string",
          "description" : "Contains the instrument nature of the type. Is used mainly for selection purposes. It is possible to associate a type to an instrument with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Stock", "Fixed Income", "Option", "Cash Account", "Money Market", "Future", "Forward", "Index", "Rate", "Swap", "Discount Instrument", "Commodity", "Fund Share", "Yield Curve", "Deliverable", "Debt", "Other", "Option Bond", "Convertible Bond", "Forward Rate Agreement", "Forex Swap", "Exotic Option", "Swaption", "Mortgage-Backed Security", "Flow Instrument", "Notional Instrument" ]
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence."
        },
        "operNatE" : {
          "type" : "string",
          "description" : "Indicates the nature of the operation related to this type. It is possible to associate a typeto an operation with a different nature if the nature in the type table is equal to 0.",
          "enum" : [ "Buy", "Sell", "Income", "Investment", "Withdrawal", "Fees & Taxes", "Adjustment", "Unit Issue", "Unit Redemption", "Transfer", "BP Transfer", "Locking", "Portfolio Transfer", "Book Value Adjustment", "Init", "Combined" ]
        },
        "parentTypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the Parent Type (Type entity also). If the Parent Type is indicated, it's actually a sub type."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates for types of intrument price and types of exchange rate the order in which the prices are taken when determining the \"default\" price for the day, e.g. close, bid, or ask.\r\nInstrument price or exchange rate types that  have a rank of 0 are not included in the default price process, e.g. fiscal prices."
        }
      }
    },
    "updateTypeSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/TypeWithPermValues"
        }
      }
    },
    "updateinstrumentListInput" : {
      "type" : "object",
      "required" : [ "dataSecuProfCode", "name", "natureE", "typeCode", "userCode" ],
      "properties" : {
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a data security profile associated to an occurrence.\r\nThis field, which is mandatory, is used to control the user access to one occurrence."
        },
        "denom" : {
          "type" : "string",
          "description" : "The 'long' name which will be used as default name (in \r\nrelationship with ...DENOMINATION....LANGUAGE)."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the list\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name has not to be unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Defines the nature of a list in the application. These nature implies different type of processing within the application, see description of each permitted value.",
          "enum" : [ "Enumerated", "Constrained", "Hierarchical", "Other", "Search", "Query" ]
        },
        "queryDefinition" : {
          "type" : "string",
          "description" : "This attribute is only used for the Web packaging.\r\nThis Field contains the query definition used by the dynamic search."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Reference to the type of a list."
        },
        "userCode" : {
          "type" : "string",
          "description" : "User owner of the list"
        },
        "validityPeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of days after the last reconstruction of a constrained list according to constraint definition, for which the enumerated list is deemed valid.\r\n\r\nSpecial values:\r\nNULL - The list is rebuilt every time it is used\r\n0    - The list is rebuilt only if any object from one of the underlying entity (portfolio, instrument etc...) was modified. The system performs a check using all entities listed in the constraint definition.\r\n\r\nE.g. a portfolio group is defined as all portfolios managed by 'Smith' and with a reference currency equal to USD. For performance reasons this list instead of being systematically recomputed at request, is in fact stored as an enumerated list (although the definition is also associated to the list occurrence). Manager 'Smith' specifies however that the composition of the list should never be older than 7 days. When a request to use this list is made, the system checks that the last reconstruction date is not older than the current date less the validity period."
        }
      }
    },
    "updateinstrumentListSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ListWithPermValues"
        }
      }
    }
  }
}