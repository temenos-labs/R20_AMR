{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1.0.0",
    "title" : "System Enterprise API"
  },
  "basePath" : "/triplea/api/v1.0.0/system",
  "security" : [ {
    "tapBasicAuth" : [ ],
    "X-Channel" : [ ]
  } ],
  "paths" : {
    "/applSessionHistos" : {
      "get" : {
        "tags" : [ "ApplSessionHistos", "Search" ],
        "summary" : "Search Application Session History",
        "operationId" : "searchApplicationSessionHisto",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userCode",
          "in" : "query",
          "description" : "Identifier of the user who created the session.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Unique identifier that is displayed to the user.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationDBetween",
          "in" : "query",
          "description" : "Identifies the date and time at which the session was created.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "csv",
          "maxItems" : 2,
          "minItems" : 1
        }, {
          "name" : "creationDGTE",
          "in" : "query",
          "description" : "Identifies the date and time at which the session was created.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchApplicationSessionHistoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/batchResults" : {
      "get" : {
        "tags" : [ "BatchResults", "Search" ],
        "summary" : "Search Batch Results",
        "operationId" : "getBatchResults",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "portfolioCodeEq",
          "in" : "query",
          "description" : "Portfolio to which the process is related.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "natureEEq",
          "in" : "query",
          "description" : "Nature of the process.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Automatic Rebalancing", "Event Generation", "Payout Request", "Payout Monitoring", "Portfolio Closure", "Assets Transfer", "Realignment", "Allocate Order" ]
        }, {
          "name" : "statusEEq",
          "in" : "query",
          "description" : "Status of the process.",
          "required" : false,
          "type" : "string",
          "enum" : [ "<None>", "Pending", "Completed", "Failed" ]
        }, {
          "name" : "portfolioThirdCodeEq",
          "in" : "query",
          "description" : "Portfolio to which the process is related.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beginDBetween",
          "in" : "query",
          "description" : "Date and time of the process creation.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "csv",
          "maxItems" : 2,
          "minItems" : 1
        }, {
          "name" : "beginDEq",
          "in" : "query",
          "description" : "Date and time of the process creation.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "beginDGtE",
          "in" : "query",
          "description" : "Date and time of the process creation.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDBetween",
          "in" : "query",
          "description" : "Date and time of the end of the process.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "csv",
          "maxItems" : 2,
          "minItems" : 1
        }, {
          "name" : "endDEq",
          "in" : "query",
          "description" : "Date and time of the end of the process.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDGtE",
          "in" : "query",
          "description" : "Date and time of the end of the process.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getBatchResultsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/channelProfiles" : {
      "post" : {
        "tags" : [ "ChannelProfiles" ],
        "summary" : "Create Application channel profile",
        "operationId" : "createApplicationChannelProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createApplicationChannelProfilesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createApplicationChannelProfilesSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createApplicationChannelProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/channelProfiles/{channelProfileCode}/compoElement" : {
      "post" : {
        "tags" : [ "ChannelProfiles" ],
        "summary" : "Create Application channel profile  element",
        "operationId" : "createApplicationChannelProfileCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelProfileCode",
          "in" : "path",
          "description" : "References a Channel Profile.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createApplicationChannelProfileComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createApplicationChannelProfileComposSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createApplicationChannelProfileComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/channelProfiles/{channelProfileCode}/compoElement/{channelCode}" : {
      "get" : {
        "tags" : [ "ChannelProfiles" ],
        "summary" : "get application channel profile compos",
        "operationId" : "getApplicationChannelProfileCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelProfileCode",
          "in" : "path",
          "description" : "References a Channel Profile.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "channelCode",
          "in" : "path",
          "description" : "References a channel.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getApplicationChannelProfileComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ChannelProfiles" ],
        "summary" : "Modify Application Channel Profile Compo",
        "operationId" : "modifyApplicationChannelProfileCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelProfileCode",
          "in" : "path",
          "description" : "References a Channel Profile.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "channelCode",
          "in" : "path",
          "description" : "References a channel.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyApplicationChannelProfileCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyApplicationChannelProfileCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ChannelProfiles" ],
        "summary" : "Delete Application Channel Profile Compo",
        "operationId" : "deleteApplicationChannelProfileCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "channelProfileCode",
          "in" : "path",
          "description" : "References a Channel Profile.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "channelCode",
          "in" : "path",
          "description" : "References a channel.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/channelProfiles/{channelProfileCode}/composition" : {
      "get" : {
        "tags" : [ "ChannelProfiles", "Search" ],
        "summary" : "get application channel profile composition",
        "operationId" : "searchApplicationChannelProfileCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "channelProfileCode",
          "in" : "path",
          "description" : "References a Channel Profile.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchApplicationChannelProfileComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/channelProfiles/{code}" : {
      "get" : {
        "tags" : [ "ChannelProfiles" ],
        "summary" : "get application channel profiles",
        "operationId" : "getApplicationChannelProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier that is displayed to the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getApplicationChannelProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ChannelProfiles" ],
        "summary" : "Delete Application Channel Profiles",
        "operationId" : "deleteApplicationChannelProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier that is displayed to the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/dataProfiles" : {
      "post" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Create Data Profile",
        "operationId" : "createDataProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createDataProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createDataProfileSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createDataProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/dataProfiles/{code}" : {
      "get" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Get Data Profile",
        "operationId" : "getDataProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique 'business' identifier of a data profile.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getDataProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Modify Data Profile",
        "operationId" : "modifyDataProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique 'business' identifier of a data profile.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyDataProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyDataProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Delete Data Profile",
        "operationId" : "deleteDataProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique 'business' identifier of a data profile.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/dataProfiles/{dataProfileCode}/compoElement" : {
      "post" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Create Data Profile Compo element",
        "operationId" : "createDataProfileCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dataProfileCode",
          "in" : "path",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createDataProfileComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createDataProfileComposSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createDataProfileComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/dataProfiles/{dataProfileCode}/compoElement/{id}" : {
      "get" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Get Data Profile Compo element",
        "operationId" : "getDataProfileCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dataProfileCode",
          "in" : "path",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getDataProfileComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Modify Data Profile Compo element",
        "operationId" : "modifyDataProfileCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dataProfileCode",
          "in" : "path",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyDataProfileComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyDataProfileComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DataProfiles" ],
        "summary" : "Delete Data Profile Compo element",
        "operationId" : "deleteDataProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dataProfileCode",
          "in" : "path",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/dataProfiles/{dataProfileCode}/composition" : {
      "get" : {
        "tags" : [ "DataProfiles", "Search" ],
        "summary" : "Get Data Profile Composition",
        "operationId" : "searchDataProfileCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dataProfileCode",
          "in" : "path",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchDataProfileComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/dataSecurityProfiles" : {
      "post" : {
        "tags" : [ "DataSecurityProfiles" ],
        "summary" : "Create Data Security Profile",
        "operationId" : "createDataSecurityProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createDataSecurityProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createDataSecurityProfileSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createDataSecurityProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/dataSecurityProfiles/{code}" : {
      "get" : {
        "tags" : [ "DataSecurityProfiles" ],
        "summary" : "Get Data Security Profile",
        "operationId" : "getDataSecurityProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getDataSecurityProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DataSecurityProfiles" ],
        "summary" : "Modify Data Security Profile",
        "operationId" : "modifyDataSecurityProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/modifyDataSecurityProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/modifyDataSecurityProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "DataSecurityProfiles" ],
        "summary" : "Delete Data Security Profile",
        "operationId" : "deleteDataSecurityProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/externalServices" : {
      "post" : {
        "tags" : [ "ExternalServices" ],
        "summary" : "create a  ExternalService",
        "operationId" : "createExternalService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createExternalServiceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createExternalServiceSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createExternalServiceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/externalServices/{code}" : {
      "get" : {
        "tags" : [ "ExternalServices" ],
        "summary" : "Get a ExternalService",
        "operationId" : "getExternalService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Business identifier of the occurrence as seen by the end-user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getExternalServiceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ExternalServices" ],
        "summary" : "update a ExternalService",
        "operationId" : "updateExternalService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Business identifier of the occurrence as seen by the end-user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateExternalServiceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateExternalServiceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ExternalServices" ],
        "summary" : "Delete a ExternalService",
        "operationId" : "deleteExternalService",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Business identifier of the occurrence as seen by the end-user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/externalServicesProfiles" : {
      "post" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "create a  ExtServiceProfile",
        "operationId" : "createExtServiceProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createExtServiceProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createExtServiceProfileSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createExtServiceProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/externalServicesProfiles/{code}" : {
      "get" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "Get a ExtServiceProfile",
        "operationId" : "getExtServiceProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as displayed to the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getExtServiceProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "update a ExtServiceProfile",
        "operationId" : "updateExtServiceProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as displayed to the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateExtServiceProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateExtServiceProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "Delete a ExtServiceProfile",
        "operationId" : "deleteExtServiceProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as displayed to the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/externalServicesProfiles/{extServiceProfCode}/compoElement" : {
      "post" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "create a External Service Profile Compo Element",
        "operationId" : "createExtServiceProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "extServiceProfCode",
          "in" : "path",
          "description" : "References an external service profile to which an external service is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createExtServiceProfCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createExtServiceProfCompoSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createExtServiceProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/externalServicesProfiles/{extServiceProfCode}/compoElement/{id}" : {
      "get" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "Get a External Service Profile Compo Element",
        "operationId" : "getExtServiceProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "extServiceProfCode",
          "in" : "path",
          "description" : "References an external service profile to which an external service is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getExtServiceProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "update a External Service Profile Compo Element",
        "operationId" : "updateExtServiceProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "extServiceProfCode",
          "in" : "path",
          "description" : "References an external service profile to which an external service is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateExtServiceProfCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateExtServiceProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ExternalServicesProfiles" ],
        "summary" : "Delete a External Service Profile Compo Element",
        "operationId" : "deleteExtServiceProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "extServiceProfCode",
          "in" : "path",
          "description" : "References an external service profile to which an external service is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/externalServicesProfiles/{extServiceProfCode}/composition" : {
      "get" : {
        "tags" : [ "ExternalServicesProfiles", "Search" ],
        "summary" : "Get External Service Profile Composition",
        "operationId" : "searchExtServiceProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "extServiceProfCode",
          "in" : "path",
          "description" : "References an external service profile to which an external service is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "externalServiceCodeEq",
          "in" : "query",
          "description" : "References an external service that is associated with an external service profile.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "natureEEq",
          "in" : "query",
          "description" : "Specifies the nature of the external service.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Risk Check", "Lombard Check", "Financial Function", "Buying Power" ]
        }, {
          "name" : "functionNameEq",
          "in" : "query",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchExtServiceProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/formatProfiles" : {
      "post" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "create a  FormatProfile",
        "operationId" : "createFormatProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createFormatProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createFormatProfileSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createFormatProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/formatProfiles/{code}" : {
      "get" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "Get a FormatProfile",
        "operationId" : "getFormatProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Identifier of an occurrence as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFormatProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "update a FormatProfile",
        "operationId" : "updateFormatProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Identifier of an occurrence as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateFormatProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateFormatProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "Delete a FormatProfile",
        "operationId" : "deleteFormatProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Identifier of an occurrence as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/formatProfiles/{formatProfileCode}/compoElement" : {
      "post" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "Create Format Prof Compos",
        "operationId" : "createFormatProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "formatProfileCode",
          "in" : "path",
          "description" : "Unique technical identifier of an occurrence.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createFormatProfComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createFormatProfComposSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createFormatProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/formatProfiles/{formatProfileCode}/compoElement/{formatCode}" : {
      "put" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "Update Format Prof Compos",
        "operationId" : "updateFormatProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "formatProfileCode",
          "in" : "path",
          "description" : "Unique technical identifier of an occurrence.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formatCode",
          "in" : "path",
          "description" : "Unique technical identifier of an occurrence.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateFormatProfComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateFormatProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "Delete Format Profile Compos",
        "operationId" : "deleteFormatProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "formatProfileCode",
          "in" : "path",
          "description" : "Unique technical identifier of an occurrence.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formatCode",
          "in" : "path",
          "description" : "Unique technical identifier of an occurrence.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/formatProfiles/{formatProfileCode}/composition" : {
      "get" : {
        "tags" : [ "FormatProfiles" ],
        "summary" : "Get Format Profile Composition",
        "operationId" : "getFormatProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "formatProfileCode",
          "in" : "path",
          "description" : "Unique technical identifier of an occurrence.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formatCodeEq",
          "in" : "query",
          "description" : "Unique technical identifier of an occurrence.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFormatProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/functionSecurityProfiles" : {
      "post" : {
        "tags" : [ "FunctionSecurityProfiles" ],
        "summary" : "Create FuncSecuProfiles",
        "operationId" : "createFuncSecuProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createFuncSecuProfilesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createFuncSecuProfilesSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createFuncSecuProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/functionSecurityProfiles/{code}" : {
      "get" : {
        "tags" : [ "FunctionSecurityProfiles" ],
        "summary" : "Get function Security Profiles",
        "operationId" : "getFuncSecuProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFuncSecuProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FunctionSecurityProfiles" ],
        "summary" : "Update FuncSecuProfiles",
        "operationId" : "updateFuncSecuProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateFuncSecuProfilesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateFuncSecuProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FunctionSecurityProfiles" ],
        "summary" : "Delete FuncSecuProfiles",
        "operationId" : "deleteFuncSecuProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/functionSecurityProfiles/{funcSecuProfCode}/compoElement" : {
      "post" : {
        "tags" : [ "FunctionSecurityProfiles" ],
        "summary" : "Create Function Security Prof Compo element",
        "operationId" : "createfuncSecurityProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "funcSecuProfCode",
          "in" : "path",
          "description" : "Reference to a function security profile to which a function is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createfuncSecurityProfComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createfuncSecurityProfComposSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createfuncSecurityProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FunctionSecurityProfiles" ],
        "summary" : "update a Function Security Prof Compo element",
        "operationId" : "updateFuncSecuProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "funcSecuProfCode",
          "in" : "path",
          "description" : "Reference to a function security profile to which a function is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateFuncSecuProfCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateFuncSecuProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FunctionSecurityProfiles" ],
        "summary" : "Delete a FuncSecuProfCompo",
        "operationId" : "deleteFuncSecuProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "funcSecuProfCode",
          "in" : "path",
          "description" : "Reference to a function security profile to which a function is linked.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/functionSecurityProfiles/{funcSecuProfCode}/composition" : {
      "get" : {
        "tags" : [ "FunctionSecurityProfiles", "Search" ],
        "summary" : "Get Function Security Profile Composition",
        "operationId" : "searchFuncSecuProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "funcSecuProfCode",
          "in" : "path",
          "description" : "Reference to a function security profile to which a function is linked.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "functionNameEq",
          "in" : "query",
          "description" : "Reference to a function that is associated to a function security profile.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityNameEq",
          "in" : "query",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchFuncSecuProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/loginHistory" : {
      "get" : {
        "tags" : [ "LoginHistory", "Search" ],
        "summary" : "Get Login History",
        "operationId" : "getLoginHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userCodeEq",
          "in" : "query",
          "description" : "The user code.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getLoginHistorySuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/definitions/{code}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "operationId" : "getNotificationDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "A unique business code for an occurence.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getNotificationDefinitionsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Update Notification Definitions",
        "operationId" : "updateNotificationDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "A unique business code for an occurence.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateNotificationDefinitionsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateNotificationDefinitionsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Delete Notification Definitions",
        "operationId" : "deleteNotificationDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "A unique business code for an occurence.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/instances/{code}" : {
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Update Notification Instance",
        "operationId" : "updateNotificationInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "A unique business code per occurence. Usually generated by the system when creating the notification instance.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateNotificationInstanceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateNotificationInstanceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Delete Notification Instance",
        "operationId" : "deleteNotificationInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "A unique business code per occurence. Usually generated by the system when creating the notification instance.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/notifDefinitions" : {
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Create notification definitions",
        "operationId" : "createNotificationDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createNotificationDefinitionsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationDefinitionsSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationDefinitionsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/notifInstances" : {
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Create Notification Instance",
        "operationId" : "createNotificationInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createNotificationInstanceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationInstanceSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationInstanceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/notifInstances/{code}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Get Notification Instance",
        "operationId" : "getNotificationInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "A unique business code per occurence. Usually generated by the system when creating the notification instance.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getNotificationInstanceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/recipients" : {
      "get" : {
        "tags" : [ "Notifications", "Search" ],
        "summary" : "Search notifications recipients",
        "operationId" : "searchNotification",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userCodeEq",
          "in" : "query",
          "description" : "The id of the user this notification instance was sent to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "linkedNotifTypeEq",
          "in" : "query",
          "description" : "The notification instance this record is linked to.",
          "required" : false,
          "type" : "string",
          "enum" : [ "None", "Reply", "Forward" ]
        }, {
          "name" : "sentOnDBetween",
          "in" : "query",
          "description" : "The Date/Time the notification was sent to the user.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "csv",
          "maxItems" : 2,
          "minItems" : 1
        }, {
          "name" : "notifInstancePortfolioCodeEq",
          "in" : "query",
          "description" : "The notification instance this record is linked to.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notifInstanceThirdPartyCodeEq",
          "in" : "query",
          "description" : "The notification instance this record is linked to.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchNotificationSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Create Notification Recipient",
        "operationId" : "createNotificationRecipient",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createNotificationRecipientInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationRecipientSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationRecipientSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/recipients/{notificationInstanceCode}/{userCode}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Get notification recipient",
        "operationId" : "getNotificationRecipient",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "notificationInstanceCode",
          "in" : "path",
          "description" : "The notification instance this record is linked to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userCode",
          "in" : "path",
          "description" : "The Code of the user this notification instance was sent to.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getNotificationRecipientSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Update Notification Recipient",
        "operationId" : "updateNotificationRecipient",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notificationInstanceCode",
          "in" : "path",
          "description" : "The notification instance this record is linked to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userCode",
          "in" : "path",
          "description" : "The Code of the user this notification instance was sent to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateNotificationRecipientInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateNotificationRecipientSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Delete Notification Recipients",
        "operationId" : "deleteNotificationRecipients",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "notificationInstanceCode",
          "in" : "path",
          "description" : "The notification instance this record is linked to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userCode",
          "in" : "path",
          "description" : "The Code of the user this notification instance was sent to.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/subjectBodyDefinitions/{notificationInstanceCode}" : {
      "post" : {
        "tags" : [ "Notifications" ],
        "summary" : "Create Notification Subject Body Definition",
        "operationId" : "createNotificationSubjectBodyDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notificationInstanceCode",
          "in" : "path",
          "description" : "The notification definition the subject/body is linked to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createNotificationSubjectBodyDefinitionInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationSubjectBodyDefinitionSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createNotificationSubjectBodyDefinitionSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/notifications/subjectBodyDefinitions/{notificationInstanceCode}/{languageCode}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Get Notification Subject Body Definition",
        "operationId" : "getNotificationSubjectBodyDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "notificationInstanceCode",
          "in" : "path",
          "description" : "The notification definition the subject/body is linked to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "languageCode",
          "in" : "path",
          "description" : "The code of the language the subject/body is held in.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getNotificationSubjectBodyDefinitionSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Update Notification Subject Body Definition",
        "operationId" : "updateNotificationSubjectBodyDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "notificationInstanceCode",
          "in" : "path",
          "description" : "The notification definition the subject/body is linked to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "languageCode",
          "in" : "path",
          "description" : "The code of the language the subject/body is held in.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateNotificationSubjectBodyDefinitionInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateNotificationSubjectBodyDefinitionSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Delete Notification Subject Body Definition",
        "operationId" : "deleteNotificationSubjectBodyDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "notificationInstanceCode",
          "in" : "path",
          "description" : "The notification definition the subject/body is linked to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "languageCode",
          "in" : "path",
          "description" : "The code of the language the subject/body is held in.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/params/{paramName}" : {
      "get" : {
        "tags" : [ "Params" ],
        "summary" : "Get Param",
        "operationId" : "getParam",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paramName",
          "in" : "path",
          "description" : "Indicates the unique identifier of the system parameter.\r\n\r\nThese identifiers are fixed and cannot be modified.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getParamSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/answerPermittedValueDefs" : {
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Create AnswerPermittedValueDef",
        "operationId" : "createAnswerPermittedValueDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createAnswerPermittedValueDefInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createAnswerPermittedValueDefSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createAnswerPermittedValueDefSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/answerPermittedValueDefs/{id}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Get AnswerPermittedValueDef",
        "operationId" : "getAnswerPermittedValueDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getAnswerPermittedValueDefSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Update AnswerPermittedValueDef",
        "operationId" : "updateAnswerPermittedValueDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateAnswerPermittedValueDefInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateAnswerPermittedValueDefSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete AnswerPermittedValueDef",
        "operationId" : "deleteAnswerPermittedValueDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/answerPermittedValueLabels" : {
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Create AnswerPermittedValueLabel",
        "operationId" : "createAnswerPermittedValueLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createAnswerPermittedValueLabelInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createAnswerPermittedValueLabelSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createAnswerPermittedValueLabelSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/answerPermittedValueLabels/{id}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Get AnswerPermittedValueLabel",
        "operationId" : "getAnswerPermittedValueLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getAnswerPermittedValueLabelSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Update AnswerPermittedValueLabel",
        "operationId" : "updateAnswerPermittedValueLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateAnswerPermittedValueLabelInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateAnswerPermittedValueLabelSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete AnswerPermittedValueLabel",
        "operationId" : "deleteAnswerPermittedValueLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/investmentProfileQuestionnaires" : {
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "create Investment Profile Questionnaire",
        "operationId" : "createInvestmentProfileQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createInvestmentProfileQuestionnaireInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInvestmentProfileQuestionnaireSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createInvestmentProfileQuestionnaireSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/investmentProfileQuestionnaires/{investmentProfileQuestionnaireCode}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Get Investment Profile Questionnaire",
        "operationId" : "getInvestmentProfileQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "investmentProfileQuestionnaireCode",
          "in" : "path",
          "description" : "Provides a reference to the questionnaire history.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getInvestmentProfileQuestionnaireSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "update Investment Profile Questionnaire",
        "operationId" : "updateInvestmentProfileQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "investmentProfileQuestionnaireCode",
          "in" : "path",
          "description" : "Provides a reference to the questionnaire history.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateInvestmentProfileQuestionnaireInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateInvestmentProfileQuestionnaireSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete Investment Profile Questionnaire",
        "operationId" : "deleteInvestmentProfileQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "investmentProfileQuestionnaireCode",
          "in" : "path",
          "description" : "Provides a reference to the questionnaire history.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/miFIDQuestionnaires" : {
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "create MiFID Questionnaire",
        "operationId" : "createMiFIDQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createMiFIDQuestionnaireInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createMiFIDQuestionnaireSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createMiFIDQuestionnaireSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/miFIDQuestionnaires/{miFIDQuestionnaireCode}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Get MiFID Questionnaire",
        "operationId" : "getMiFIDQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "miFIDQuestionnaireCode",
          "in" : "path",
          "description" : "Provides a reference to the questionnaire history.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getMiFIDQuestionnaireSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "update MiFID Questionnaire",
        "operationId" : "updateMiFIDQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "miFIDQuestionnaireCode",
          "in" : "path",
          "description" : "Provides a reference to the questionnaire history.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateMiFIDQuestionnaireInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateMiFIDQuestionnaireSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete MiFID Questionnaire",
        "operationId" : "deleteMiFIDQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "miFIDQuestionnaireCode",
          "in" : "path",
          "description" : "Provides a reference to the questionnaire history.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireDefs" : {
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Create QuestionnaireDefs",
        "operationId" : "createQuestionnaireDefs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createQuestionnaireDefsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createQuestionnaireDefsSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createQuestionnaireDefsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireDefs/{code}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Get QuestionnaireDefs",
        "operationId" : "getQuestionnaireDefs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire definition and is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getQuestionnaireDefsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Update QuestionnaireDefs",
        "operationId" : "updateQuestionnaireDefs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire definition and is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateQuestionnaireDefsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateQuestionnaireDefsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete QuestionnaireDefs",
        "operationId" : "deleteQuestionnaireDefs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire definition and is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireElementDefs" : {
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "create a  QuestionnaireElementDef",
        "operationId" : "createQuestionnaireElementDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createQuestionnaireElementDefInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createQuestionnaireElementDefSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createQuestionnaireElementDefSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireElementDefs/{code}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Get a QuestionnaireElementDef",
        "operationId" : "getQuestionnaireElementDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire element that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getQuestionnaireElementDefSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "update a QuestionnaireElementDef",
        "operationId" : "updateQuestionnaireElementDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire element that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateQuestionnaireElementDefInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateQuestionnaireElementDefSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete a QuestionnaireElementDef",
        "operationId" : "deleteQuestionnaireElementDef",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire element that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireGenericAnswers/{id}" : {
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Update the Questionnaire Generic answers",
        "operationId" : "updateQuestionnaireGenericAnswers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "-",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateQuestionnaireGenericAnswersInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateQuestionnaireGenericAnswersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireHistos" : {
      "get" : {
        "tags" : [ "Questionnaires", "Search" ],
        "summary" : "Search questionnaire histo",
        "operationId" : "searchQuestionnaireHisto",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "statusE",
          "in" : "query",
          "description" : "Provides the status of the questionnaire history. Once the status of the questionnaire history has been modified to \"Validated\", nothing can be updated on the questionnaire history except the status itself that can take the value \"Deprecated\".\r\n\r\nIf the status of the questionnaire history has been modified to \"Cancelled\", \"Rejected\", \"Deprecated\", or \"Expired\", nothing can be updated on the questionnaire history.",
          "required" : false,
          "type" : "string",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Validated", "Rejected", "Deprecated", "Expired" ]
        }, {
          "name" : "questionnaireDefCode",
          "in" : "query",
          "description" : "Provides a reference to the questionnaire definition.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "portfolioCode",
          "in" : "query",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "thirdPartyCode",
          "in" : "query",
          "description" : "Provides a reference to the third-party linked to the questionnaire history.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchQuestionnaireHistoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "create a questionnaire histo",
        "operationId" : "createQuestionnaireHisto",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createQuestionnaireHistoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createQuestionnaireHistoSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createQuestionnaireHistoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireHistos/startGenericQuestionnaire" : {
      "post" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Start a Generic Questionnaire.\nA new Questionnaire Histo is create with all Answer response associated.\nThe value of answers will be populated with the previous answer depending of rule.",
        "operationId" : "startGenericQuestionnaire",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GenericQuestionnaireInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/startGenericQuestionnaireSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/startGenericQuestionnaireSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireHistos/{code}" : {
      "get" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Get a questionnaire histo",
        "operationId" : "getQuestionnaireHisto",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getQuestionnaireHistoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "update a questionnaire histo",
        "operationId" : "updateQuestionnaireHisto",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateQuestionnaireHistoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateQuestionnaireHistoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Questionnaires" ],
        "summary" : "Delete a questionnaire histo",
        "operationId" : "deleteQuestionnaireHisto",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/questionnaires/questionnaireHistos/{code}/genericAnswers" : {
      "get" : {
        "tags" : [ "Questionnaires", "Search" ],
        "summary" : "Get the Generic answers associated to questionnaire histo",
        "operationId" : "getQuestionnaireGenericAnswers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "This attribute is the answer's link (foreign key) to the questionnaire history (assessment).",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getQuestionnaireGenericAnswersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/reportProfiles" : {
      "post" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "create a  ReportProfiles",
        "operationId" : "createReportProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createReportProfilesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createReportProfilesSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createReportProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/reportProfiles/{code}" : {
      "get" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "Get a ReportProfiles",
        "operationId" : "getReportProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getReportProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "update a ReportProfiles",
        "operationId" : "updateReportProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateReportProfilesInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateReportProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "Delete a ReportProfiles",
        "operationId" : "deleteReportProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as seen by the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/reportProfiles/{reportProfileCode}/compoElement" : {
      "post" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "create a a Report Profile Compo element",
        "operationId" : "createReportProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reportProfileCode",
          "in" : "path",
          "description" : "Reference to an occurrence in 'report profile'.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createReportProfComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createReportProfComposSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createReportProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/reportProfiles/{reportProfileCode}/compoElement/{reportCode}" : {
      "get" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "Get a Report Profile Compo element",
        "operationId" : "getReportProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "reportProfileCode",
          "in" : "path",
          "description" : "Reference to an occurrence in 'report profile'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportCode",
          "in" : "path",
          "description" : "Reference to an occurrence in report.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getReportProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "update a Report Profile Compo element",
        "operationId" : "updateReportProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reportProfileCode",
          "in" : "path",
          "description" : "Reference to an occurrence in 'report profile'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportCode",
          "in" : "path",
          "description" : "Reference to an occurrence in report.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateReportProfComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateReportProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ReportProfiles" ],
        "summary" : "Delete a Report Profile Compo element",
        "operationId" : "deleteReportProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "reportProfileCode",
          "in" : "path",
          "description" : "Reference to an occurrence in 'report profile'.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportCode",
          "in" : "path",
          "description" : "Reference to an occurrence in report.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/reportProfiles/{reportProfileCode}/composition" : {
      "get" : {
        "tags" : [ "ReportProfiles", "Search" ],
        "summary" : "Get a a Report Profile Composition",
        "operationId" : "searchReportProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "reportProfileCode",
          "in" : "path",
          "description" : "Reference to an occurrence in 'report profile'.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/searchReportProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/scheduleDefinitions" : {
      "post" : {
        "tags" : [ "ScheduleDefinitions" ],
        "summary" : "Create ScheduleDefinition",
        "operationId" : "createScheduleDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createScheduleDefinitionInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createScheduleDefinitionSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createScheduleDefinitionSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/scheduleDefinitions/{id}" : {
      "get" : {
        "tags" : [ "ScheduleDefinitions" ],
        "summary" : "Get ScheduleDefinition",
        "operationId" : "getScheduleDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getScheduleDefinitionSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ScheduleDefinitions" ],
        "summary" : "Update ScheduleDefinition",
        "operationId" : "updateScheduleDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateScheduleDefinitionInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateScheduleDefinitionSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ScheduleDefinitions" ],
        "summary" : "Delete ScheduleDefinition",
        "operationId" : "deleteScheduleDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/screenProfiles" : {
      "post" : {
        "tags" : [ "ScreenProfiles" ],
        "summary" : "create a  ScreenProfile",
        "operationId" : "createScreenProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createScreenProfileInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createScreenProfileSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createScreenProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/screenProfiles/{code}" : {
      "get" : {
        "tags" : [ "ScreenProfiles" ],
        "summary" : "Get a ScreenProfile",
        "operationId" : "getScreenProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "'Business' identifier of an occurrence as seen by the end-user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getScreenProfileSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ScreenProfiles" ],
        "summary" : "Delete a ScreenProfile",
        "operationId" : "deleteScreenProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "'Business' identifier of an occurrence as seen by the end-user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/screenProfiles/{screenProfileCode}" : {
      "post" : {
        "tags" : [ "ScreenProfiles" ],
        "summary" : "create a Screen Profile compo element",
        "operationId" : "createScreenProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "screenProfileCode",
          "in" : "path",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createScreenProfCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createScreenProfCompoSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createScreenProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/screenProfiles/{screenProfileCode}/compoElement" : {
      "put" : {
        "tags" : [ "ScreenProfiles" ],
        "summary" : "update a Screen Profile compo element",
        "operationId" : "updateScreenProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "screenProfileCode",
          "in" : "path",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateScreenProfCompoInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateScreenProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ScreenProfiles" ],
        "summary" : "Delete a Screen Profile compo element",
        "operationId" : "deleteScreenProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "screenProfileCode",
          "in" : "path",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/screenProfiles/{screenProfileCode}/composition" : {
      "get" : {
        "tags" : [ "ScreenProfiles", "Search" ],
        "summary" : "Get Screen Profiles Composition",
        "operationId" : "getScreenProfCompo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "screenProfileCode",
          "in" : "path",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "query",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionName",
          "in" : "query",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getScreenProfCompoSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/searchProfCompos" : {
      "get" : {
        "tags" : [ "SearchProfCompos", "Search" ],
        "summary" : "Get Composition of SearchProfCompos",
        "operationId" : "getSearchProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "searchProfileCode",
          "in" : "query",
          "description" : "Unique technical identifier of the parent search profile.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "searchCriteriaCode",
          "in" : "query",
          "description" : "Unique technical identifier of a search criteria.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getSearchProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SearchProfCompos" ],
        "summary" : "create a  SearchProfCompos",
        "operationId" : "createSearchProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createSearchProfComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createSearchProfComposSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createSearchProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/searchProfCompos/{id}" : {
      "put" : {
        "tags" : [ "SearchProfCompos" ],
        "summary" : "update a SearchProfCompos",
        "operationId" : "updateSearchProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateSearchProfComposInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateSearchProfComposSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SearchProfCompos" ],
        "summary" : "Delete a SearchProfCompos",
        "operationId" : "deleteSearchProfCompos",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system.",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/searchProfiles/{code}" : {
      "get" : {
        "tags" : [ "SearchProfiles" ],
        "summary" : "Get a SearchProfiles",
        "operationId" : "getSearchProfiles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "'Business' identifier of an occurrence as seen by the end-user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getSearchProfilesSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/timeZone" : {
      "get" : {
        "tags" : [ "TimeZone" ],
        "summary" : "Get a TimeZone",
        "operationId" : "getTimeZone",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "query",
          "description" : "The Time zone code matches an IANA time zone database ID. \r\nThe IANA ID identifies a location by continent or ocean and then by the name of the location. Example: America/Chicago",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getTimeZoneSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/userPreferences" : {
      "get" : {
        "tags" : [ "UserPreferences" ],
        "summary" : "Get all Preference for the current connected user",
        "operationId" : "selUserPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/selUserPreferenceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "UserPreferences" ],
        "summary" : "create an User Preference",
        "operationId" : "createUserPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createUserPreferenceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createUserPreferenceSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createUserPreferenceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/userPreferences/{paramName}" : {
      "get" : {
        "tags" : [ "UserPreferences" ],
        "summary" : "Get an User Preference",
        "operationId" : "getUserPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paramName",
          "in" : "path",
          "description" : "The parameter name defines the type of preference.\r\nExample of parameter names: \r\n- current-local: preferred language.\r\n- timezone: preferred time zone.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getUserPreferenceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "UserPreferences" ],
        "summary" : "update an User Preference",
        "operationId" : "updateUserPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paramName",
          "in" : "path",
          "description" : "The parameter name defines the type of preference.\r\nExample of parameter names: \r\n- current-local: preferred language.\r\n- timezone: preferred time zone.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateUserPreferenceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateUserPreferenceSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserPreferences" ],
        "summary" : "Delete an User Preference",
        "operationId" : "deleteUserPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paramName",
          "in" : "path",
          "description" : "The parameter name defines the type of preference.\r\nExample of parameter names: \r\n- current-local: preferred language.\r\n- timezone: preferred time zone.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/userReport" : {
      "post" : {
        "tags" : [ "UserReport" ],
        "summary" : "create a  UserReport",
        "operationId" : "createUserReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createUserReportInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createUserReportSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createUserReportSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/userReport/{code}" : {
      "get" : {
        "tags" : [ "UserReport" ],
        "summary" : "Get a UserReport",
        "operationId" : "getUserReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Name of an occurrence.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getUserReportSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "UserReport" ],
        "summary" : "update a UserReport",
        "operationId" : "updateUserReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Name of an occurrence.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateUserReportInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateUserReportSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserReport" ],
        "summary" : "Delete a UserReport",
        "operationId" : "deleteUserReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Name of an occurrence.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/users" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "create a  User",
        "operationId" : "createUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createUserInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createUserSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createUserSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/users/fourEyes" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get Four Eyes Users",
        "operationId" : "getFourEyesUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesUsersSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/users/fourEyesFields" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get Four Eyes User Fields",
        "operationId" : "getFourEyesFields",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getFourEyesFieldsSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/users/{code}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get a User",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as displayed to the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getUserSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "update a User",
        "operationId" : "updateUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as displayed to the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateUserInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateUserSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete a User",
        "operationId" : "deleteUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "Unique identifier, as displayed to the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "tapBasicAuth" : {
      "description" : "Tap Basic Authentication",
      "type" : "basic"
    },
    "X-Channel" : {
      "description" : "name of Channel",
      "type" : "apiKey",
      "name" : "X-Channel",
      "in" : "header"
    }
  },
  "definitions" : {
    "AnswerPermittedValueDef" : {
      "type" : "object",
      "required" : [ "defValueF", "name", "navigationSpecificityE", "permValNatN", "questionnaireElementDefCode", "questionnaireElementDefId", "questionnaireElementDefQuestionnaireDefCode", "rankN" ],
      "properties" : {
        "defValueF" : {
          "type" : "boolean",
          "description" : "This attribute defines if the answer permitted value of a Multiple-Choice question is considered as the default answer. This attribute is used during the generation and assessment of dynamic questionnaires in conjunction with Questionnaire Element Definition def_value_e attribute."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a description of the answer permitted value."
        },
        "navigationSpecificityE" : {
          "type" : "boolean",
          "description" : "This attribute permit defining some limited navigation specificity for dynamic questionnaire."
        },
        "permValNatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The answer permitted value itself. This value is always numeric."
        },
        "questionnaireElementDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the display order of the answer permitted value."
        },
        "scoreN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines the score of an answer. It will be used to compute the questionnaire scoring based on answered questions."
        }
      }
    },
    "AnswerPermittedValueDefWithPermValues" : {
      "type" : "object",
      "required" : [ "defValueF", "name", "navigationSpecificityE", "permValNatN", "questionnaireElementDefCode", "questionnaireElementDefId", "questionnaireElementDefQuestionnaireDefCode", "rankN" ],
      "properties" : {
        "defValueF" : {
          "type" : "boolean",
          "description" : "This attribute defines if the answer permitted value of a Multiple-Choice question is considered as the default answer. This attribute is used during the generation and assessment of dynamic questionnaires in conjunction with Questionnaire Element Definition def_value_e attribute."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a description of the answer permitted value."
        },
        "navigationSpecificityE" : {
          "type" : "boolean",
          "description" : "This attribute permit defining some limited navigation specificity for dynamic questionnaire."
        },
        "permValNatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The answer permitted value itself. This value is always numeric."
        },
        "questionnaireElementDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the display order of the answer permitted value."
        },
        "scoreN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines the score of an answer. It will be used to compute the questionnaire scoring based on answered questions."
        }
      }
    },
    "AnswerPermittedValueLabel" : {
      "type" : "object",
      "required" : [ "answerPermittedValueDefId", "denom", "languageCode" ],
      "properties" : {
        "answerPermittedValueDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the answer permitted value."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a denomination of the answer permitted value label."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a reference to the language entity. Specifies the language of the label."
        }
      }
    },
    "AnswerPermittedValueLabelWithPermValues" : {
      "type" : "object",
      "required" : [ "answerPermittedValueDefId", "denom", "languageCode" ],
      "properties" : {
        "answerPermittedValueDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the answer permitted value."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a denomination of the answer permitted value label."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a reference to the language entity. Specifies the language of the label."
        }
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string",
          "enum" : [ "WARNING", "ERROR", "INFO" ]
        }
      },
      "title" : "ApiResponse"
    },
    "ApplChannelProfCompo" : {
      "type" : "object",
      "required" : [ "applChannelCode", "applChannelProfileCode", "extServiceProfCode", "formatProfileCode", "funcSecuProfCode", "lastUserName", "reportProfileCode", "screenProfileCode", "searchProfileCode" ],
      "properties" : {
        "applChannelCode" : {
          "type" : "string",
          "description" : "References a channel."
        },
        "applChannelProfileCode" : {
          "type" : "string",
          "description" : "References a Channel Profile."
        },
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an External Service Profile."
        },
        "formatProfileCode" : {
          "type" : "string",
          "description" : "References a format profile."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "References a Function Security Profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this channel in the profile."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "References a Report Profile."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "References a Screen Profile."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "References a Search Profile."
        },
        "sessionTimeoutSecN" : {
          "type" : "number",
          "description" : "Specifies the number of seconds after which a session, for this channel and profile, is deleted and the user will have to log in again."
        }
      }
    },
    "ApplChannelProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "applChannelCode", "applChannelProfileCode", "extServiceProfCode", "formatProfileCode", "funcSecuProfCode", "lastUserName", "reportProfileCode", "screenProfileCode", "searchProfileCode" ],
      "properties" : {
        "applChannelCode" : {
          "type" : "string",
          "description" : "References a channel."
        },
        "applChannelProfileCode" : {
          "type" : "string",
          "description" : "References a Channel Profile."
        },
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an External Service Profile."
        },
        "formatProfileCode" : {
          "type" : "string",
          "description" : "References a format profile."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "References a Function Security Profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this channel in the profile."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "References a Report Profile."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "References a Screen Profile."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "References a Search Profile."
        },
        "sessionTimeoutSecN" : {
          "type" : "number",
          "description" : "Specifies the number of seconds after which a session, for this channel and profile, is deleted and the user will have to log in again."
        }
      }
    },
    "Audit" : {
      "type" : "object",
      "properties" : {
        "startTime" : {
          "type" : "string"
        },
        "endTime" : {
          "type" : "string"
        },
        "totalTime" : {
          "type" : "string"
        },
        "processTime" : {
          "type" : "string"
        },
        "scriptTime" : {
          "type" : "string"
        },
        "otherTime" : {
          "type" : "string"
        }
      },
      "title" : "Audit"
    },
    "ChannelProfile" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier that is displayed to the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this profile."
        }
      }
    },
    "ChannelProfileWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier that is displayed to the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this profile."
        }
      }
    },
    "DataProfCompo" : {
      "type" : "object",
      "required" : [ "authDeleteF", "authUpdateF", "dataProfileCode", "dataProfileId", "dataSecuProfCode", "dataSecuProfId" ],
      "properties" : {
        "authDeleteF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is authorised to delete occurrences in secured tables (1) or not (0).  If not, s/he only has the right to view and possibly update occurrences (see auth_update_f)."
        },
        "authUpdateF" : {
          "type" : "boolean",
          "description" : "Specifies if a user can update an occurrence in a secured table (1) or just view it (0)."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "DataProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "authDeleteF", "authUpdateF", "dataProfileCode", "dataProfileId", "dataSecuProfCode", "dataSecuProfId" ],
      "properties" : {
        "authDeleteF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is authorised to delete occurrences in secured tables (1) or not (0).  If not, s/he only has the right to view and possibly update occurrences (see auth_update_f)."
        },
        "authUpdateF" : {
          "type" : "boolean",
          "description" : "Specifies if a user can update an occurrence in a secured table (1) or just view it (0)."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "DataProfile" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique 'business' identifier of a data profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "DataProfileWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique 'business' identifier of a data profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "DataSecuProf" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        }
      }
    },
    "DataSecuProfWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        }
      }
    },
    "ExtServiceProfCompo" : {
      "type" : "object",
      "required" : [ "extServiceProfCode", "extServiceProfId", "externalServiceCode", "externalServiceId", "functionName", "natureE", "rankN" ],
      "properties" : {
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an external service profile to which an external service is linked."
        },
        "extServiceProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service profile to which an external service is linked."
        },
        "externalServiceCode" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceDenom" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service that is associated with an external service profile."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the external service.",
          "enum" : [ "Risk Check", "Lombard Check", "Financial Function", "Buying Power" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the call order of the external services."
        }
      }
    },
    "ExtServiceProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "extServiceProfCode", "extServiceProfId", "externalServiceCode", "externalServiceId", "functionName", "natureE", "rankN" ],
      "properties" : {
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an external service profile to which an external service is linked."
        },
        "extServiceProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service profile to which an external service is linked."
        },
        "externalServiceCode" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceDenom" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service that is associated with an external service profile."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the external service.",
          "enum" : [ "Risk Check", "Lombard Check", "Financial Function", "Buying Power" ]
        },
        "natureE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute natureE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the call order of the external services."
        }
      }
    },
    "ExtServiceProfile" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as displayed to the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ExtServiceProfileWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as displayed to the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ExternalService" : {
      "type" : "object",
      "required" : [ "code", "natureE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Business identifier of the occurrence as seen by the end-user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides the denomination of this occurrence."
        },
        "folderName" : {
          "type" : "string",
          "description" : "Not used"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides the name of this occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of an occurrence.",
          "enum" : [ "None", "Risk", "Lombard", "Search", "Buying Power" ]
        },
        "timeoutT" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the timeout in second used to abort the synchronous call to this external service."
        },
        "urlAddress" : {
          "type" : "string",
          "description" : "Provides the URL address used to call the external service adapter."
        }
      }
    },
    "ExternalServiceWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "natureE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Business identifier of the occurrence as seen by the end-user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides the denomination of this occurrence."
        },
        "folderName" : {
          "type" : "string",
          "description" : "Not used"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides the name of this occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of an occurrence.",
          "enum" : [ "None", "Risk", "Lombard", "Search", "Buying Power" ]
        },
        "timeoutT" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the timeout in second used to abort the synchronous call to this external service."
        },
        "urlAddress" : {
          "type" : "string",
          "description" : "Provides the URL address used to call the external service adapter."
        }
      }
    },
    "FormatProfCompo" : {
      "type" : "object",
      "required" : [ "defaultF", "formatCode", "formatFunctionName", "formatId", "formatNatureE", "formatProfileCode", "formatProfileId", "rankN", "refFormatCode" ],
      "properties" : {
        "defaultF" : {
          "type" : "boolean",
          "description" : "Indicates whether the format is a default format. If that is the case, this particular format will be displayed first when opening the window. There should be one default per functionnality (i.e. valorisation, operation history, cash & liquidity, performance measurments,...). (Not yet implemented)."
        },
        "formatCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatDenom" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatEntityName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatFunctionName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatNatureE" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence.",
          "enum" : [ "Domain", "Detailed List", "Summary List", "Graphic", "Matrix", "Report", "Table", "Zoom", "Edit List", "Dynamic List", "Export Interface", "TSL Post Processing SQL", "Persisted Data", "Search Data", "Subscription", "Enrichment of the subscription" ]
        },
        "formatProfileCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the order in which the various formats are presented in the menus and icon bar of a 'financial function'."
        },
        "refFormatCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "refFormatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        }
      }
    },
    "FormatProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "defaultF", "formatCode", "formatFunctionName", "formatId", "formatNatureE", "formatProfileCode", "formatProfileId", "rankN", "refFormatCode" ],
      "properties" : {
        "defaultF" : {
          "type" : "boolean",
          "description" : "Indicates whether the format is a default format. If that is the case, this particular format will be displayed first when opening the window. There should be one default per functionnality (i.e. valorisation, operation history, cash & liquidity, performance measurments,...). (Not yet implemented)."
        },
        "formatCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatDenom" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatEntityName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatFunctionName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatNatureE" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence.",
          "enum" : [ "Domain", "Detailed List", "Summary List", "Graphic", "Matrix", "Report", "Table", "Zoom", "Edit List", "Dynamic List", "Export Interface", "TSL Post Processing SQL", "Persisted Data", "Search Data", "Subscription", "Enrichment of the subscription" ]
        },
        "formatProfileCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the order in which the various formats are presented in the menus and icon bar of a 'financial function'."
        },
        "refFormatCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "refFormatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        }
      }
    },
    "FormatProfile" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Identifier of an occurrence as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FormatProfileWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Identifier of an occurrence as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FuncSecuProfCompo" : {
      "type" : "object",
      "required" : [ "createF", "deleteF", "funcSecuProfCode", "funcSecuProfId", "functionName", "maxStatusE", "minStatusE", "realTimeF", "riskViewF", "securityLevelE", "subtypeName", "typeName", "updateF", "viewF", "visibleF" ],
      "properties" : {
        "asyncThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the number of portfolios from which the system will launch the function in asynchronous mode.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) only for financial functions with WUI asynchronous mechanism and with the minimum/maximum statuses set to Cancelled."
        },
        "createF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Create actions for the corresponding function. If not, it implies that the Create buttons or choices in the menus are 'disabled' for the user."
        },
        "deleteF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Delete actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user.\r\nParticular case for Update Fields Functions: delete_f indicates if a user can (value 0, checkbox unchecked) or cannot (value 1 checkbox checked) update operations that he created or modified previously."
        },
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "entityName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "executionThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt defines the number of portfolios from which the system will block the execution of the function.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function used in the WUI with the minimum/maximum statuses set to Cancelled."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "funcSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionProcName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular maximum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "maxStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the maxixum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "minStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular minimum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "minStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the minimum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "realTimeF" : {
          "type" : "boolean",
          "description" : "Not used."
        },
        "riskViewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has access to the Risk options when running a financial function from the domain window. If no access given, it implies that some buttons or choices in drop-down lists in the domain are 'disabled' for the user."
        },
        "securityLevelE" : {
          "type" : "string",
          "description" : "Not used.",
          "enum" : [ "Inherit", "No Secured" ]
        },
        "slicingThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt is used to improve system performances by slicing large requests on financial functions.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function with the minimum/maximum statuses set to Cancelled. Currently used for pre-computation jobs."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "typeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "updateF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Update actions for the corresponding function. If not, it implies that the Update buttons or choices in the menus are 'disabled' for the user."
        },
        "viewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible View actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user."
        },
        "visibleF" : {
          "type" : "boolean",
          "description" : "Normally, when disabling a function for a user, the entry in the menu is disabled (but still visible). This is managed by the fact that no Function Security Compo is present for the function.\r\nHowever, if a record is present in Function Security Compo with no rights at all and with the Visible flag set to 0, the menu entry disappears."
        }
      }
    },
    "FuncSecuProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "createF", "deleteF", "funcSecuProfCode", "funcSecuProfId", "functionName", "maxStatusE", "minStatusE", "realTimeF", "riskViewF", "securityLevelE", "subtypeName", "typeName", "updateF", "viewF", "visibleF" ],
      "properties" : {
        "asyncThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the number of portfolios from which the system will launch the function in asynchronous mode.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) only for financial functions with WUI asynchronous mechanism and with the minimum/maximum statuses set to Cancelled."
        },
        "createF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Create actions for the corresponding function. If not, it implies that the Create buttons or choices in the menus are 'disabled' for the user."
        },
        "deleteF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Delete actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user.\r\nParticular case for Update Fields Functions: delete_f indicates if a user can (value 0, checkbox unchecked) or cannot (value 1 checkbox checked) update operations that he created or modified previously."
        },
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "entityName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "executionThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt defines the number of portfolios from which the system will block the execution of the function.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function used in the WUI with the minimum/maximum statuses set to Cancelled."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "funcSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionProcName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular maximum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "maxStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the maxixum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "minStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular minimum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "minStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the minimum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "realTimeF" : {
          "type" : "boolean",
          "description" : "Not used."
        },
        "riskViewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has access to the Risk options when running a financial function from the domain window. If no access given, it implies that some buttons or choices in drop-down lists in the domain are 'disabled' for the user."
        },
        "securityLevelE" : {
          "type" : "string",
          "description" : "Not used.",
          "enum" : [ "Inherit", "No Secured" ]
        },
        "slicingThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt is used to improve system performances by slicing large requests on financial functions.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function with the minimum/maximum statuses set to Cancelled. Currently used for pre-computation jobs."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "typeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "updateF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Update actions for the corresponding function. If not, it implies that the Update buttons or choices in the menus are 'disabled' for the user."
        },
        "viewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible View actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user."
        },
        "visibleF" : {
          "type" : "boolean",
          "description" : "Normally, when disabling a function for a user, the entry in the menu is disabled (but still visible). This is managed by the fact that no Function Security Compo is present for the function.\r\nHowever, if a record is present in Function Security Compo with no rights at all and with the Visible flag set to 0, the menu entry disappears."
        }
      }
    },
    "FuncSecuProfile" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FuncSecuProfileWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "GenericQuestionnaireInput" : {
      "type" : "object",
      "required" : [ "questionnaireDefinitionCode" ],
      "properties" : {
        "managerCode" : {
          "type" : "string",
          "description" : "Manager Code linked to the questionnaire"
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Portfolio Code linked to the questionnaire"
        },
        "questionnaireDefinitionCode" : {
          "type" : "string",
          "description" : "Questionnaire Definition Code to start"
        },
        "revisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "revision of questionnaire to start"
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Third Party Code linked to the questionnaire"
        }
      }
    },
    "HeaderCreateResponse" : {
      "type" : "object",
      "properties" : {
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MessageResponse"
          }
        },
        "interactiveToken" : {
          "type" : "string",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only ."
        }
      },
      "title" : "HeaderCreateResponse"
    },
    "HeaderListResponse" : {
      "type" : "object",
      "properties" : {
        "Pagination" : {
          "$ref" : "#/definitions/Pagination"
        },
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        }
      },
      "title" : "HeaderListResponse"
    },
    "HeaderResponse" : {
      "type" : "object",
      "properties" : {
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MessageResponse"
          }
        }
      },
      "title" : "HeaderResponse"
    },
    "InvestmentProfileQuestionnaire" : {
      "type" : "object",
      "required" : [ "ageCategory", "financialNeeds", "incomeExpectation", "investmentKnowledge", "investmentObjective", "investmentPeriod", "marketFallBehaviour", "maxLossToleranceCapacity", "profileDescription", "proposedStrategyCode", "proposedStrategyName", "questionnaireHistoCode", "selectedStrategyCode", "selectedStrategyName" ],
      "properties" : {
        "ageCategory" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the age category.",
          "enum" : [ "NOTDEFINED", "18_TO_BELOW_30", "30_TO_BELOW_40", "40_TO_BELOW_50", "50_TO_BELOW_60", "60_AND_ABOVE" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Investment Profile questionnaire.\r\nElement of nature comment."
        },
        "financialNeeds" : {
          "type" : "string",
          "description" : "Provides a question relative to the financial needs.",
          "enum" : [ "NOTDEFINED", "VERY_EASILY", "EASILY", "DIFFICULT", "VERY_DIFFICULT" ]
        },
        "generalDescription" : {
          "type" : "string",
          "description" : "Provides a general description of the Investment Profile questionnaire. (This is not used.)"
        },
        "incomeExpectation" : {
          "type" : "string",
          "description" : "Provides the question that is relative to the income expectations.",
          "enum" : [ "NOTDEFINED", "RISE_WELL_AHEAD_OF_INFLATION", "KEEP_PACE_WITH_INFLATION", "FALL", "FLUCTUATE_FROM_YEAR_TO_YEAR" ]
        },
        "investmentKnowledge" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of investments.",
          "enum" : [ "NOTDEFINED", "NONE", "LIMITED", "GOOD", "EXTENSIVE" ]
        },
        "investmentObjective" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the primary objective for investing.",
          "enum" : [ "NOTDEFINED", "CAPITAL_PRESERVATION", "INCOME_STREAM", "STEADY_CAPITAL_APPRECIATION", "HIGH_CAPITAL_APPRECIATION" ]
        },
        "investmentPeriod" : {
          "type" : "string",
          "description" : "Provides the investment period.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_YEARS", "BETWEEN_3_AND_5_YEARS", "BETWEEN_5_AND_10_YEARS", "10_YEARS_AND_ABOVE" ]
        },
        "marketFallBehaviour" : {
          "type" : "string",
          "description" : "Provides a question relative to behaviour when the market falls.",
          "enum" : [ "NOTDEFINED", "ACCEPT_MINIMAL_DECLINES", "ACCEPT_SOME_DECLINES", "ACCEPT_MODERATE_DECLINES", "TAKE_LOSSES_AND_LARGE_FLUCT" ]
        },
        "maxLossToleranceCapacity" : {
          "type" : "string",
          "description" : "Provides a question relative to the maximum loss tolerance.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_PERCENT", "BETWEEN_3_AND_10", "BETWEEN_10_AND_20", "BETWEEN_20_AND_25", "OVER_25_PERCENT" ]
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Investment Profile questionnaire. Used by input controls to identify which answers need to be checked. This is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Investment Profile questionnaire."
        },
        "profileDescription" : {
          "type" : "string",
          "description" : "Based on the score of the questionnaire, the system will define the Investment Profile. This Investment Profile is used to determine the best strategy to propose for future investments.",
          "enum" : [ "NOTDEFINED", "SECURE", "CONSERVATIVE", "BALANCED", "ACTIVE", "DYNAMIC" ]
        },
        "proposedStrategyCode" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "proposedStrategyName" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "questionnaireHistoCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire history."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the investment profile questionnaire report generated after the questionnaire is completed or under review."
        },
        "riskToleranceDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about risk tolerance."
        },
        "score" : {
          "type" : "number",
          "description" : "Determines the score of the Investment Profile questionnaire calculated from the answers provided."
        },
        "selectedStrategyCode" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyInvProfRiskLevelN" : {
          "type" : "number",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyName" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "timeHorizonDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about time horizon."
        }
      }
    },
    "InvestmentProfileQuestionnaireWithPermValues" : {
      "type" : "object",
      "required" : [ "ageCategory", "financialNeeds", "incomeExpectation", "investmentKnowledge", "investmentObjective", "investmentPeriod", "marketFallBehaviour", "maxLossToleranceCapacity", "profileDescription", "proposedStrategyCode", "proposedStrategyName", "questionnaireHistoCode", "selectedStrategyCode", "selectedStrategyName" ],
      "properties" : {
        "ageCategory" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the age category.",
          "enum" : [ "NOTDEFINED", "18_TO_BELOW_30", "30_TO_BELOW_40", "40_TO_BELOW_50", "50_TO_BELOW_60", "60_AND_ABOVE" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Investment Profile questionnaire.\r\nElement of nature comment."
        },
        "financialNeeds" : {
          "type" : "string",
          "description" : "Provides a question relative to the financial needs.",
          "enum" : [ "NOTDEFINED", "VERY_EASILY", "EASILY", "DIFFICULT", "VERY_DIFFICULT" ]
        },
        "generalDescription" : {
          "type" : "string",
          "description" : "Provides a general description of the Investment Profile questionnaire. (This is not used.)"
        },
        "incomeExpectation" : {
          "type" : "string",
          "description" : "Provides the question that is relative to the income expectations.",
          "enum" : [ "NOTDEFINED", "RISE_WELL_AHEAD_OF_INFLATION", "KEEP_PACE_WITH_INFLATION", "FALL", "FLUCTUATE_FROM_YEAR_TO_YEAR" ]
        },
        "investmentKnowledge" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of investments.",
          "enum" : [ "NOTDEFINED", "NONE", "LIMITED", "GOOD", "EXTENSIVE" ]
        },
        "investmentObjective" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the primary objective for investing.",
          "enum" : [ "NOTDEFINED", "CAPITAL_PRESERVATION", "INCOME_STREAM", "STEADY_CAPITAL_APPRECIATION", "HIGH_CAPITAL_APPRECIATION" ]
        },
        "investmentPeriod" : {
          "type" : "string",
          "description" : "Provides the investment period.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_YEARS", "BETWEEN_3_AND_5_YEARS", "BETWEEN_5_AND_10_YEARS", "10_YEARS_AND_ABOVE" ]
        },
        "marketFallBehaviour" : {
          "type" : "string",
          "description" : "Provides a question relative to behaviour when the market falls.",
          "enum" : [ "NOTDEFINED", "ACCEPT_MINIMAL_DECLINES", "ACCEPT_SOME_DECLINES", "ACCEPT_MODERATE_DECLINES", "TAKE_LOSSES_AND_LARGE_FLUCT" ]
        },
        "maxLossToleranceCapacity" : {
          "type" : "string",
          "description" : "Provides a question relative to the maximum loss tolerance.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_PERCENT", "BETWEEN_3_AND_10", "BETWEEN_10_AND_20", "BETWEEN_20_AND_25", "OVER_25_PERCENT" ]
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Investment Profile questionnaire. Used by input controls to identify which answers need to be checked. This is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Investment Profile questionnaire."
        },
        "profileDescription" : {
          "type" : "string",
          "description" : "Based on the score of the questionnaire, the system will define the Investment Profile. This Investment Profile is used to determine the best strategy to propose for future investments.",
          "enum" : [ "NOTDEFINED", "SECURE", "CONSERVATIVE", "BALANCED", "ACTIVE", "DYNAMIC" ]
        },
        "proposedStrategyCode" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "proposedStrategyName" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "questionnaireHistoCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire history."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the investment profile questionnaire report generated after the questionnaire is completed or under review."
        },
        "riskToleranceDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about risk tolerance."
        },
        "score" : {
          "type" : "number",
          "description" : "Determines the score of the Investment Profile questionnaire calculated from the answers provided."
        },
        "selectedStrategyCode" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyInvProfRiskLevelN" : {
          "type" : "number",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyName" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "timeHorizonDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about time horizon."
        }
      }
    },
    "LoginHistory" : {
      "type" : "object",
      "required" : [ "displayC", "loginD", "natureE", "userCode" ],
      "properties" : {
        "displayC" : {
          "type" : "string",
          "description" : "Identifies the device from which the user has logged in."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "loginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The login date."
        },
        "natureE" : {
          "type" : "string",
          "description" : "The login histrory nature.\r\n\r\nPermitted values are:\r\n0. <None>\r\n1. Login Failed\r\n2. Login Succeeded\r\n3. Account Unlocked\r\n4. Login Attempt as Inactive User\r\n5. Login Attempt as Batch User",
          "enum" : [ "<None>", "Login Failed", "Login Succeeded", "Account Unlocked", "Login Attempt as Inactive User", "Login Attempt as Batch User", "Password Reset", "WUI Login Failed", "WUI Login Succeeded", "Authorization Failed" ]
        },
        "userCode" : {
          "type" : "string",
          "description" : "The user code."
        }
      }
    },
    "MessageResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string",
          "enum" : [ "WARNING", "ERROR", "INFO" ]
        },
        "message" : {
          "type" : "string"
        }
      },
      "title" : "MessageResponse"
    },
    "MiFIDQuestionnaire" : {
      "type" : "object",
      "required" : [ "bestExecutionPolicy", "classification", "educationLevel", "knowComplexInstruments", "knowExpCommodityDerivatives", "knowExpCreditDerivatives", "knowExpCurrencyDerivatives", "knowExpEcoStatDerivatives", "knowExpIndexDerivatives", "knowExpInterestDerivatives", "knowExpOtherComplexInstr", "knowExpSecurityDerivatives", "languageCode", "questionnaireHistoCode", "residenceCountryCode", "riskCountryCode", "taxCountryCode" ],
      "properties" : {
        "bestExecutionPolicy" : {
          "type" : "string",
          "description" : "Provides a question relative to the best execution policy document.",
          "enum" : [ "NOT_DEFINED", "NOT_SIGNED", "SIGNED", "PENDING", "MISSING" ]
        },
        "classification" : {
          "type" : "string",
          "description" : "Provides a question relative to the classification of the client.",
          "enum" : [ "NONE", "RETAIL", "PROFESSIONNAL_PER_SE", "PROFESSIONNAL_ON_REQUEST", "ELIGIBLE_COUNTERPARTY", "INSTITUTIONAL" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Suitability and Appropriateness questionnaire.\r\nElement of nature comment."
        },
        "educationLevel" : {
          "type" : "string",
          "description" : "Provides a question relative to the client's education level.",
          "enum" : [ "NONE", "NOT_DEFINED", "HIGH_SCHOOL", "GRADUATE", "POST_GRADUATE" ]
        },
        "knowComplexInstruments" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of complex instruments.",
          "enum" : [ "KNOW_COMPLEX_INSTR_NOT_DEF", "KNOW_COMPLEX_INSTR_YES", "KNOW_COMPLEX_INSTR_NO" ]
        },
        "knowExpCommodityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of commodity derivatives.",
          "enum" : [ "KNOW_EXP_COM_DERIV_NOT_DEF", "KNOW_EXP_COM_DERIV_YES", "KNOW_EXP_COM_DERIV_NO" ]
        },
        "knowExpCreditDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of credit derivatives.",
          "enum" : [ "KNOW_EXP_CRED_DERIV_NOT_DEF", "KNOW_EXP_CRED_DERIV_YES", "KNOW_EXP_CRED_DERIV_NO" ]
        },
        "knowExpCurrencyDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to currency derivatives.",
          "enum" : [ "KNOW_EXP_CURR_DERIV_NOT_DEF", "KNOW_EXP_CURR_DERIV_YES", "KNOW_EXP_CURR_DERIV_NO" ]
        },
        "knowExpEcoStatDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of economic statistics derivatives.",
          "enum" : [ "KNOW_ECO_STAT_DERIV_NOT_DEF", "KNOW_ECO_STAT_DERIV_YES", "KNOW_ECO_STAT_DERIV_NO" ]
        },
        "knowExpIndexDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to index derivatives.",
          "enum" : [ "KNOW_EXP_IND_DERIV_NOT_DEF", "KNOW_EXP_IND_DERIV_YES", "KNOW_EXP_IND_DERIV_NO" ]
        },
        "knowExpInterestDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of interest derivatives.",
          "enum" : [ "KNOW_EXP_INT_DERIV_NOT_DEF", "KNOW_EXP_INT_DERIV_YES", "KNOW_EXP_INT_DERIV_NO" ]
        },
        "knowExpOtherComplexInstr" : {
          "type" : "string",
          "description" : "Provides a question relative to knowledge of other complex instruments.",
          "enum" : [ "KNOW_EXP_OTHER_INST_NOT_DEF", "KNOW_EXP_OTHER_INST_YES", "KNOW_EXP_OTHER_INST_NO" ]
        },
        "knowExpSecurityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the knowledge on security derivatives.",
          "enum" : [ "KNOW_EXP_SECU_DERIV_NOT_DEF", "KNOW_EXP_SECU_DERIV_YES", "KNOW_EXP_SECU_DERIV_NO" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the language of the client. Reference to the language entity."
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Suitability and Appropriateness questionnaire. Used by input controls to identify which answers need to be checked. It is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Suitability and Appropriateness questionnaire."
        },
        "questionnaireHistoCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire history."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the suitability & appropriateness questionnaire report generated after the questionnaire is completed or under review."
        },
        "residenceCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the residence country of the client. Reference to geographic entity."
        },
        "riskCountryCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the risk country of the client. Reference to geographic entity."
        },
        "taxCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the tax country of the client. Reference to geographic entity."
        }
      }
    },
    "MiFIDQuestionnaireWithPermValues" : {
      "type" : "object",
      "required" : [ "bestExecutionPolicy", "classification", "educationLevel", "knowComplexInstruments", "knowExpCommodityDerivatives", "knowExpCreditDerivatives", "knowExpCurrencyDerivatives", "knowExpEcoStatDerivatives", "knowExpIndexDerivatives", "knowExpInterestDerivatives", "knowExpOtherComplexInstr", "knowExpSecurityDerivatives", "languageCode", "questionnaireHistoCode", "residenceCountryCode", "riskCountryCode", "taxCountryCode" ],
      "properties" : {
        "bestExecutionPolicy" : {
          "type" : "string",
          "description" : "Provides a question relative to the best execution policy document.",
          "enum" : [ "NOT_DEFINED", "NOT_SIGNED", "SIGNED", "PENDING", "MISSING" ]
        },
        "classification" : {
          "type" : "string",
          "description" : "Provides a question relative to the classification of the client.",
          "enum" : [ "NONE", "RETAIL", "PROFESSIONNAL_PER_SE", "PROFESSIONNAL_ON_REQUEST", "ELIGIBLE_COUNTERPARTY", "INSTITUTIONAL" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Suitability and Appropriateness questionnaire.\r\nElement of nature comment."
        },
        "educationLevel" : {
          "type" : "string",
          "description" : "Provides a question relative to the client's education level.",
          "enum" : [ "NONE", "NOT_DEFINED", "HIGH_SCHOOL", "GRADUATE", "POST_GRADUATE" ]
        },
        "knowComplexInstruments" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of complex instruments.",
          "enum" : [ "KNOW_COMPLEX_INSTR_NOT_DEF", "KNOW_COMPLEX_INSTR_YES", "KNOW_COMPLEX_INSTR_NO" ]
        },
        "knowExpCommodityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of commodity derivatives.",
          "enum" : [ "KNOW_EXP_COM_DERIV_NOT_DEF", "KNOW_EXP_COM_DERIV_YES", "KNOW_EXP_COM_DERIV_NO" ]
        },
        "knowExpCreditDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of credit derivatives.",
          "enum" : [ "KNOW_EXP_CRED_DERIV_NOT_DEF", "KNOW_EXP_CRED_DERIV_YES", "KNOW_EXP_CRED_DERIV_NO" ]
        },
        "knowExpCurrencyDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to currency derivatives.",
          "enum" : [ "KNOW_EXP_CURR_DERIV_NOT_DEF", "KNOW_EXP_CURR_DERIV_YES", "KNOW_EXP_CURR_DERIV_NO" ]
        },
        "knowExpEcoStatDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of economic statistics derivatives.",
          "enum" : [ "KNOW_ECO_STAT_DERIV_NOT_DEF", "KNOW_ECO_STAT_DERIV_YES", "KNOW_ECO_STAT_DERIV_NO" ]
        },
        "knowExpIndexDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to index derivatives.",
          "enum" : [ "KNOW_EXP_IND_DERIV_NOT_DEF", "KNOW_EXP_IND_DERIV_YES", "KNOW_EXP_IND_DERIV_NO" ]
        },
        "knowExpInterestDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of interest derivatives.",
          "enum" : [ "KNOW_EXP_INT_DERIV_NOT_DEF", "KNOW_EXP_INT_DERIV_YES", "KNOW_EXP_INT_DERIV_NO" ]
        },
        "knowExpOtherComplexInstr" : {
          "type" : "string",
          "description" : "Provides a question relative to knowledge of other complex instruments.",
          "enum" : [ "KNOW_EXP_OTHER_INST_NOT_DEF", "KNOW_EXP_OTHER_INST_YES", "KNOW_EXP_OTHER_INST_NO" ]
        },
        "knowExpSecurityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the knowledge on security derivatives.",
          "enum" : [ "KNOW_EXP_SECU_DERIV_NOT_DEF", "KNOW_EXP_SECU_DERIV_YES", "KNOW_EXP_SECU_DERIV_NO" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the language of the client. Reference to the language entity."
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Suitability and Appropriateness questionnaire. Used by input controls to identify which answers need to be checked. It is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Suitability and Appropriateness questionnaire."
        },
        "questionnaireHistoCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire history."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the suitability & appropriateness questionnaire report generated after the questionnaire is completed or under review."
        },
        "residenceCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the residence country of the client. Reference to geographic entity."
        },
        "riskCountryCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the risk country of the client. Reference to geographic entity."
        },
        "taxCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the tax country of the client. Reference to geographic entity."
        }
      }
    },
    "NotifDefinition" : {
      "type" : "object",
      "required" : [ "code", "creationD", "creationUserCode", "creationUserId", "notifImportanceE", "notifNatureE", "notifPriorityE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "A unique business code for an occurence."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the occurence."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the user who created the occurence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "The importance. Each notification can communicate its importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The Priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL pattern to be launched when following up on the notification. \r\nSince this URL is often not static, but contains an ID of the object the notification was related to, it is possible to inject placehholders, which are replaced during the creation of the notification instance based on the notification definition."
        }
      }
    },
    "NotifDefinitionWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "creationD", "creationUserCode", "creationUserId", "notifImportanceE", "notifNatureE", "notifPriorityE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "A unique business code for an occurence."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the occurence."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the user who created the occurence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "The importance. Each notification can communicate its importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifImportanceE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute notifImportanceE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifNatureE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute notifNatureE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The Priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "notifPriorityE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute notifPriorityE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL pattern to be launched when following up on the notification. \r\nSince this URL is often not static, but contains an ID of the object the notification was related to, it is possible to inject placehholders, which are replaced during the creation of the notification instance based on the notification definition."
        }
      }
    },
    "NotifSubjectBodyDef" : {
      "type" : "object",
      "required" : [ "languageCode", "notificationInstanceCode" ],
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body, that is the full textual description of the notification. This text can been entered as RTF text on the Web User Interface."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "The code of the language the subject/body is held in."
        },
        "notificationInstanceCode" : {
          "type" : "string",
          "description" : "The notification definition the subject/body is linked to."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject."
        }
      }
    },
    "NotifSubjectBodyDefWithPermValues" : {
      "type" : "object",
      "required" : [ "languageCode", "notificationInstanceCode" ],
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body, that is the full textual description of the notification. This text can been entered as RTF text on the Web User Interface."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "The code of the language the subject/body is held in."
        },
        "notificationInstanceCode" : {
          "type" : "string",
          "description" : "The notification definition the subject/body is linked to."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject."
        }
      }
    },
    "NotificationInstance" : {
      "type" : "object",
      "required" : [ "code", "confirmedDraftF", "creationD", "creationUserCode", "draftF", "linkedNotifInstanceCode", "linkedNotifType", "notifDefinitionCode", "notifImportanceE", "notifNatureE", "notifPriorityE", "originE", "portfolioCode", "thirdPartyCode" ],
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body of the message. This field is only used if the notification instance is a user message."
        },
        "code" : {
          "type" : "string",
          "description" : "A unique business code per occurence. Usually generated by the system when creating the notification instance."
        },
        "confirmedDraftF" : {
          "type" : "boolean",
          "description" : "If the notification instance is a user message, this field defines whether the user confirmed that the message is a draft. Messages that have this flag set to 1 are displayed in the list of draft messages."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time of the instance."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the notification instance."
        },
        "draftF" : {
          "type" : "boolean",
          "description" : "If this notification instance is a user message, then this field defines whether the message is a technical draft or not. \r\n\r\nA technical draft message is a message that has been created by the user but has not yet been sent. This is a transitional state, which should only last for a couple of minutes. \r\n\r\nWhen finished with the edition of the message, the user will either send it (which will reset the draft_f) or confirm the message to be a draft (which will set the flag confirmed_draft_f)."
        },
        "externalReferenceC" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For objects that do not exist in Triple A core, this is an external reference, usually coded as URI."
        },
        "forwardRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to forward this message or not."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkedNotifInstanceBodyC" : {
          "type" : "string",
          "description" : "The body of the message that was replied to/forwarded from. This field is only used if the notification instance is a user message."
        },
        "linkedNotifInstanceCode" : {
          "type" : "string",
          "description" : "Notif instance Code of the message that was replied to/forwarded from."
        },
        "linkedNotifInstanceSubjectC" : {
          "type" : "string",
          "description" : "The subject of a user message  that was replied to/forwarded from. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "linkedNotifType" : {
          "type" : "string",
          "description" : "If this notification instance is a message and it is linked to another message pointed to by notif_instance_id, this field defines whether the message is a reply or a forward.",
          "enum" : [ "None", "Reply", "Forward" ]
        },
        "notifDefinitionCode" : {
          "type" : "string",
          "description" : "The code of the notification definition, if the notification instance is based on a definition."
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "Notification importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The notification priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "originE" : {
          "type" : "string",
          "description" : "The notification instance origin. If 0 or null, the instance was sent by the system. If 1, the notification instance was sent by a user and is in fact a user message.",
          "enum" : [ "System", "User" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a portfolio."
        },
        "replyRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to reply to this message or not."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject of a user message. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a third party."
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL that should be launched when following up on the notification. \r\nEach notification provides a textual information to the user on the event/situation that caused its sending. The user then in most cases is provided a link that redirects him to the location within the software user interface that was at the origin of the notification."
        }
      }
    },
    "NotificationInstanceWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "confirmedDraftF", "creationD", "creationUserCode", "draftF", "linkedNotifInstanceCode", "linkedNotifType", "notifDefinitionCode", "notifImportanceE", "notifNatureE", "notifPriorityE", "originE", "portfolioCode", "thirdPartyCode" ],
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body of the message. This field is only used if the notification instance is a user message."
        },
        "code" : {
          "type" : "string",
          "description" : "A unique business code per occurence. Usually generated by the system when creating the notification instance."
        },
        "confirmedDraftF" : {
          "type" : "boolean",
          "description" : "If the notification instance is a user message, this field defines whether the user confirmed that the message is a draft. Messages that have this flag set to 1 are displayed in the list of draft messages."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time of the instance."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the notification instance."
        },
        "draftF" : {
          "type" : "boolean",
          "description" : "If this notification instance is a user message, then this field defines whether the message is a technical draft or not. \r\n\r\nA technical draft message is a message that has been created by the user but has not yet been sent. This is a transitional state, which should only last for a couple of minutes. \r\n\r\nWhen finished with the edition of the message, the user will either send it (which will reset the draft_f) or confirm the message to be a draft (which will set the flag confirmed_draft_f)."
        },
        "externalReferenceC" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For objects that do not exist in Triple A core, this is an external reference, usually coded as URI."
        },
        "forwardRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to forward this message or not."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkedNotifInstanceBodyC" : {
          "type" : "string",
          "description" : "The body of the message that was replied to/forwarded from. This field is only used if the notification instance is a user message."
        },
        "linkedNotifInstanceCode" : {
          "type" : "string",
          "description" : "Notif instance Code of the message that was replied to/forwarded from."
        },
        "linkedNotifInstanceSubjectC" : {
          "type" : "string",
          "description" : "The subject of a user message  that was replied to/forwarded from. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "linkedNotifType" : {
          "type" : "string",
          "description" : "If this notification instance is a message and it is linked to another message pointed to by notif_instance_id, this field defines whether the message is a reply or a forward.",
          "enum" : [ "None", "Reply", "Forward" ]
        },
        "notifDefinitionCode" : {
          "type" : "string",
          "description" : "The code of the notification definition, if the notification instance is based on a definition."
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "Notification importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The notification priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "originE" : {
          "type" : "string",
          "description" : "The notification instance origin. If 0 or null, the instance was sent by the system. If 1, the notification instance was sent by a user and is in fact a user message.",
          "enum" : [ "System", "User" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a portfolio."
        },
        "replyRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to reply to this message or not."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject of a user message. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a third party."
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL that should be launched when following up on the notification. \r\nEach notification provides a textual information to the user on the event/situation that caused its sending. The user then in most cases is provided a link that redirects him to the location within the software user interface that was at the origin of the notification."
        }
      }
    },
    "NotificationRecipient" : {
      "type" : "object",
      "required" : [ "deletedF", "isReadF", "notificationInstanceCode", "sentDeletedF", "sentOnD", "userCode" ],
      "properties" : {
        "deletedF" : {
          "type" : "string",
          "description" : "Logical delete flag. Defines whether this recipient record has been logically deleted or not.\r\n\r\nLogically deleted notification recipient records are no longer displayed to the recipient.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "isReadF" : {
          "type" : "string",
          "description" : "A read status flag. Indicates whether the notification instance has been read by the user.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "notificationInstanceCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "sentDeletedF" : {
          "type" : "string",
          "description" : "Sent_deleted_f is used to indicate whether the sent items is deleted or not.\r\nif the value is 1 - sent item is deleted.\r\nif value is 0 - sent item is not deleted.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "sentOnD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the notification was sent to the user."
        },
        "userCode" : {
          "type" : "string",
          "description" : "The Code of the user this notification instance was sent to."
        }
      }
    },
    "NotificationRecipientWithPermValues" : {
      "type" : "object",
      "required" : [ "deletedF", "isReadF", "notificationInstanceCode", "sentDeletedF", "sentOnD", "userCode" ],
      "properties" : {
        "deletedF" : {
          "type" : "string",
          "description" : "Logical delete flag. Defines whether this recipient record has been logically deleted or not.\r\n\r\nLogically deleted notification recipient records are no longer displayed to the recipient.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "isReadF" : {
          "type" : "string",
          "description" : "A read status flag. Indicates whether the notification instance has been read by the user.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "notificationInstanceCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "sentDeletedF" : {
          "type" : "string",
          "description" : "Sent_deleted_f is used to indicate whether the sent items is deleted or not.\r\nif the value is 1 - sent item is deleted.\r\nif value is 0 - sent item is not deleted.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "sentOnD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the notification was sent to the user."
        },
        "userCode" : {
          "type" : "string",
          "description" : "The Code of the user this notification instance was sent to."
        }
      }
    },
    "Pagination" : {
      "type" : "object",
      "properties" : {
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        },
        "token" : {
          "type" : "string",
          "description" : "token used by server"
        }
      },
      "title" : "Pagination"
    },
    "Param" : {
      "type" : "object",
      "required" : [ "natureE", "paramName" ],
      "properties" : {
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a system parameter.\r\n\r\nThis field makes it possible to classify the various parameters according to their purpose.",
          "enum" : [ "General Parameters", "License Parameters", "Operation/Fusion", "Valuation/Risk", "Journal/Event Generation", "Return/Attribution", "Strategy/Order", "Accounting Module", "Fund Module", "List Mangement", "Option Calculation", "Statistics", "Synonym Codification", "Document/Index Generation", "Importation Parameters", "Technical Configuration", "Printer Parameters", "Packaging Parameters", "User Parameters" ]
        },
        "paramDesc" : {
          "type" : "string",
          "description" : "Provides a description of the system parameter. This can be modified."
        },
        "paramName" : {
          "type" : "string",
          "description" : "Indicates the unique identifier of the system parameter.\r\n\r\nThese identifiers are fixed and cannot be modified."
        },
        "valueN" : {
          "type" : "string",
          "description" : "Indicates the value of the system parameter."
        }
      }
    },
    "QuestionnaireDef" : {
      "type" : "object",
      "required" : [ "categoryE", "code", "creationUserName", "dataSecuProf2Code", "dataSecuProfCode", "deleteRightF", "lastUserName", "natureE", "scoringNatureE", "statusE", "updateRightF", "validationUserName" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition starts to be valid."
        },
        "categoryE" : {
          "type" : "string",
          "description" : "-",
          "enum" : [ "Static", "Dynamic", "Library" ]
        },
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire definition and is displayed to the end user. This field is mandatory."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the creation date of the questionnaire definition."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "creationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "dataSecuProf2Code" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This is an optional reference that is used to control Triple'A Plus Web third-party access to the instrument."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "The delete right defines whether the current user has the right to delete this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire definition denomination that is not necessarily unique. This field is optional."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition is no longer valid. The end date is not automatically managed."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "Provides questionnaire definition name that is not necessarily unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Allows for the characterization of different natures of questionnaire definition. This field is mandatory.",
          "enum" : [ "None", "Client Profile", "Investment Profile", "Financial Profile", "Risk Profile", "Legal Profile", "Financial Plan", "Investment Plan", "Savings Plan", "Retirement Plan", "Education Plan", "Life Insurance Plan", "Tax Plan" ]
        },
        "revisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The revision is a global technical number identifying questionnaires. In conjunction with the parent revision, it permits understanding the questionnaires revision tree."
        },
        "scoringNatureE" : {
          "type" : "string",
          "description" : "This attribute permits defining the scoring nature of a questionnaire. It has no impact on static questionnaires and are principally used for dynamic questionnaire.",
          "enum" : [ "None", "Sum", "Custom" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the questionnaire definition. This field is mandatory.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Waiting Business Validation", "Waiting Technical Completion", "Waiting Testing", "Validated", "Rejected", "Active", "Suspended", "Deprecated", "Expired" ]
        },
        "typeExtDenomination" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "The update right defines whether the current user has the right to update this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "validationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date of validation of the questionnaire definition."
        },
        "validationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "validationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "versionN" : {
          "type" : "number",
          "description" : "Provides the version number of the questionnaire definition. This field is optional."
        }
      }
    },
    "QuestionnaireDefWithPermValues" : {
      "type" : "object",
      "required" : [ "categoryE", "code", "creationUserName", "dataSecuProf2Code", "dataSecuProfCode", "deleteRightF", "lastUserName", "natureE", "scoringNatureE", "statusE", "updateRightF", "validationUserName" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition starts to be valid."
        },
        "categoryE" : {
          "type" : "string",
          "description" : "-",
          "enum" : [ "Static", "Dynamic", "Library" ]
        },
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire definition and is displayed to the end user. This field is mandatory."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the creation date of the questionnaire definition."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "creationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "dataSecuProf2Code" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This is an optional reference that is used to control Triple'A Plus Web third-party access to the instrument."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "The delete right defines whether the current user has the right to delete this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire definition denomination that is not necessarily unique. This field is optional."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition is no longer valid. The end date is not automatically managed."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "Provides questionnaire definition name that is not necessarily unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Allows for the characterization of different natures of questionnaire definition. This field is mandatory.",
          "enum" : [ "None", "Client Profile", "Investment Profile", "Financial Profile", "Risk Profile", "Legal Profile", "Financial Plan", "Investment Plan", "Savings Plan", "Retirement Plan", "Education Plan", "Life Insurance Plan", "Tax Plan" ]
        },
        "revisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The revision is a global technical number identifying questionnaires. In conjunction with the parent revision, it permits understanding the questionnaires revision tree."
        },
        "scoringNatureE" : {
          "type" : "string",
          "description" : "This attribute permits defining the scoring nature of a questionnaire. It has no impact on static questionnaires and are principally used for dynamic questionnaire.",
          "enum" : [ "None", "Sum", "Custom" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the questionnaire definition. This field is mandatory.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Waiting Business Validation", "Waiting Technical Completion", "Waiting Testing", "Validated", "Rejected", "Active", "Suspended", "Deprecated", "Expired" ]
        },
        "typeExtDenomination" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "The update right defines whether the current user has the right to update this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "validationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date of validation of the questionnaire definition."
        },
        "validationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "validationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "versionN" : {
          "type" : "number",
          "description" : "Provides the version number of the questionnaire definition. This field is optional."
        }
      }
    },
    "QuestionnaireElementDef" : {
      "type" : "object",
      "required" : [ "answerDatatypeSqlnameC", "code", "defValueE", "mandatoryF", "natureE", "questionnaireDefCode", "questionnaireDefId", "questionnaireSectionDefId", "questionnaireSectionDefNatureE", "typeCode" ],
      "properties" : {
        "answerDatatypeSqlnameC" : {
          "type" : "string",
          "description" : "Provides a reference to the datatype of the answer linked to the questionnaire element."
        },
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire element that is displayed to the end user. This field is mandatory."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides a creation date of the questionnaire element."
        },
        "defValueE" : {
          "type" : "string",
          "description" : "This attribute permit defining questions default value rule. It is used during the generation and assessment of dynamic questionnaires and is only applicable for Multiple-Choice questions.",
          "enum" : [ "None", "Inherit", "Fixed", "Initial and inherit", "Custom" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire element denomination that is not necessarily unique. This field is optional."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mandatoryF" : {
          "type" : "boolean",
          "description" : "Defines whether the questionnaire element is mandatory or not. This field is mandatory."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a questionnaire element name that is not necessarily unique. This field is mandatory."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the questionnaire element. This field is mandatory.",
          "enum" : [ "Question", "Score", "Comment", "Technical", "Virtual" ]
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireSectionDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "questionnaireSectionDefNatureE" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory.",
          "enum" : [ "None", "Standard", "Summary", "Technical" ]
        },
        "questionnaireSectionDefRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the rank of the questionnaire element in the associated questionnaire section."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire element."
        }
      }
    },
    "QuestionnaireElementDefWithPermValues" : {
      "type" : "object",
      "required" : [ "answerDatatypeSqlnameC", "code", "defValueE", "mandatoryF", "natureE", "questionnaireDefCode", "questionnaireDefId", "questionnaireSectionDefId", "questionnaireSectionDefNatureE", "typeCode" ],
      "properties" : {
        "answerDatatypeSqlnameC" : {
          "type" : "string",
          "description" : "Provides a reference to the datatype of the answer linked to the questionnaire element."
        },
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire element that is displayed to the end user. This field is mandatory."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides a creation date of the questionnaire element."
        },
        "defValueE" : {
          "type" : "string",
          "description" : "This attribute permit defining questions default value rule. It is used during the generation and assessment of dynamic questionnaires and is only applicable for Multiple-Choice questions.",
          "enum" : [ "None", "Inherit", "Fixed", "Initial and inherit", "Custom" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire element denomination that is not necessarily unique. This field is optional."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mandatoryF" : {
          "type" : "boolean",
          "description" : "Defines whether the questionnaire element is mandatory or not. This field is mandatory."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a questionnaire element name that is not necessarily unique. This field is mandatory."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the questionnaire element. This field is mandatory.",
          "enum" : [ "Question", "Score", "Comment", "Technical", "Virtual" ]
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireSectionDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "questionnaireSectionDefNatureE" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory.",
          "enum" : [ "None", "Standard", "Summary", "Technical" ]
        },
        "questionnaireSectionDefRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the rank of the questionnaire element in the associated questionnaire section."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire element."
        }
      }
    },
    "QuestionnaireGenericAnswer" : {
      "type" : "object",
      "required" : [ "isNullF", "valueFlag" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "-"
        },
        "isNullF" : {
          "type" : "boolean",
          "description" : "This attribute defines if an answer has been defined (by the user or by a default value) or not. It helps avoiding displaying the question on summary pages or reporting document."
        },
        "valueDatetime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a datetime_t."
        },
        "valueEnum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enum_t."
        },
        "valueEnummask" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enummask_t."
        },
        "valueFlag" : {
          "type" : "boolean",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a flag_t"
        },
        "valueNumber" : {
          "type" : "number",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a number_t, amount_t or int_t."
        },
        "valueString" : {
          "type" : "string",
          "description" : "This attribute holds the answer reference to an object when its datatype (value_datatype_dict_id) is an info_t, note_t, string1000_t, string_2000_t, uni_info_t, uni_note_t, uni_string1000_t and uni_string2000_t."
        },
        "valueText" : {
          "type" : "string",
          "description" : "Not yet implemented."
        }
      }
    },
    "QuestionnaireGenericAnswerWithPermValues" : {
      "type" : "object",
      "required" : [ "isNullF", "valueFlag" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "-"
        },
        "isNullF" : {
          "type" : "boolean",
          "description" : "This attribute defines if an answer has been defined (by the user or by a default value) or not. It helps avoiding displaying the question on summary pages or reporting document."
        },
        "valueDatetime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a datetime_t."
        },
        "valueEnum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enum_t."
        },
        "valueEnummask" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enummask_t."
        },
        "valueFlag" : {
          "type" : "boolean",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a flag_t"
        },
        "valueNumber" : {
          "type" : "number",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a number_t, amount_t or int_t."
        },
        "valueString" : {
          "type" : "string",
          "description" : "This attribute holds the answer reference to an object when its datatype (value_datatype_dict_id) is an info_t, note_t, string1000_t, string_2000_t, uni_info_t, uni_note_t, uni_string1000_t and uni_string2000_t."
        },
        "valueText" : {
          "type" : "string",
          "description" : "Not yet implemented."
        }
      }
    },
    "QuestionnaireHisto" : {
      "type" : "object",
      "required" : [ "code", "portfolioCode", "questionnaireDefCode", "statusE", "thirdPartyCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "percentN" : {
          "type" : "number",
          "description" : "Provides the percentage of completion of the questionnaire history. Must be calculated by default value."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "scoreN" : {
          "type" : "number",
          "description" : "Provides a score of the questionnaire history. This field is optional. Based on the answers, it is possible to calculate a global score for a questionnaire."
        },
        "statusE" : {
          "type" : "string",
          "description" : "Provides the status of the questionnaire history. Once the status of the questionnaire history has been modified to \"Validated\", nothing can be updated on the questionnaire history except the status itself that can take the value \"Deprecated\".\r\n\r\nIf the status of the questionnaire history has been modified to \"Cancelled\", \"Rejected\", \"Deprecated\", or \"Expired\", nothing can be updated on the questionnaire history.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Validated", "Rejected", "Deprecated", "Expired" ]
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Provides a reference to the third-party linked to the questionnaire history."
        }
      }
    },
    "QuestionnaireHistoWithPermValues" : {
      "type" : "object",
      "required" : [ "code", "portfolioCode", "questionnaireDefCode", "statusE", "thirdPartyCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "percentN" : {
          "type" : "number",
          "description" : "Provides the percentage of completion of the questionnaire history. Must be calculated by default value."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "questionnaireDefCode_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute questionnaireDefCode",
          "items" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : ""
              },
              "name" : {
                "type" : "string",
                "description" : ""
              },
              "denom" : {
                "type" : "string",
                "description" : ""
              }
            }
          }
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "scoreN" : {
          "type" : "number",
          "description" : "Provides a score of the questionnaire history. This field is optional. Based on the answers, it is possible to calculate a global score for a questionnaire."
        },
        "statusE" : {
          "type" : "string",
          "description" : "Provides the status of the questionnaire history. Once the status of the questionnaire history has been modified to \"Validated\", nothing can be updated on the questionnaire history except the status itself that can take the value \"Deprecated\".\r\n\r\nIf the status of the questionnaire history has been modified to \"Cancelled\", \"Rejected\", \"Deprecated\", or \"Expired\", nothing can be updated on the questionnaire history.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Validated", "Rejected", "Deprecated", "Expired" ]
        },
        "statusE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute statusE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Provides a reference to the third-party linked to the questionnaire history."
        }
      }
    },
    "ReportProfCompo" : {
      "type" : "object",
      "required" : [ "reportCode", "reportProfileCode" ],
      "properties" : {
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportDenom" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in report."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "Reference to an occurrence in 'report profile'."
        },
        "reportProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in 'report profile'."
        }
      }
    },
    "ReportProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "reportCode", "reportProfileCode" ],
      "properties" : {
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportDenom" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in report."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "Reference to an occurrence in 'report profile'."
        },
        "reportProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in 'report profile'."
        }
      }
    },
    "ReportProfile" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ReportProfileWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ScheduleDef" : {
      "type" : "object",
      "required" : [ "aprilF", "augustF", "dayOfWeekE", "decemberF", "februaryF", "frequencyE", "fridayF", "januaryF", "julyF", "juneF", "marchF", "mayF", "mondayF", "monthE", "novemberF", "object", "octoberF", "saturdayF", "septemberF", "sundayF", "thursdayF", "tuesdayF", "wednesdayF", "yearToDateF" ],
      "properties" : {
        "aprilF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "augustF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "dayOfMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If execution frequency is monthly, defines the sole day within the month during which the process should be executed."
        },
        "dayOfWeekE" : {
          "type" : "string",
          "description" : "If execution frequency is monthly, defines the sole weekday during which the process should be executed.",
          "enum" : [ "None", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Last" ]
        },
        "decemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "endTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end time of execution. Used if a process should be executed every <n> minutes, with a start and stop time, for the days defined by the frequency."
        },
        "expirationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expiration date of the schedule, after the schedule will not be executed anymore."
        },
        "februaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "frequencyE" : {
          "type" : "string",
          "description" : "The frequency of the schedule.",
          "enum" : [ "Once", "Daily", "Weekly", "Monthly", "Annual" ]
        },
        "fridayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "januaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "julyF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "juneF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "marchF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mondayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "monthE" : {
          "type" : "string",
          "description" : "If frequency set to yearly, used to define the month. Not used.",
          "enum" : [ "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
        },
        "novemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The object instance id of the entity type the schedule is related to. For instance the alert defintion id."
        },
        "octoberF" : {
          "type" : "boolean",
          "description" : "Yes."
        },
        "recurMinutesN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The recurrence. Defines for a recurring schedule, that it should be executed every <n> minutes."
        },
        "repeatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Repeat n. Not used."
        },
        "saturdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "septemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "startD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start date of the schedule. For a one time schedule, this is the sole date of execution."
        },
        "startTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start time. For a one time schedule, this is the sole time of execution."
        },
        "sundayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "thursdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "tuesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "wednesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "yearToDateF" : {
          "type" : "boolean",
          "description" : "Manages the modification of the initial date of the report domain."
        }
      }
    },
    "ScheduleDefWithPermValues" : {
      "type" : "object",
      "required" : [ "aprilF", "augustF", "dayOfWeekE", "decemberF", "februaryF", "frequencyE", "fridayF", "januaryF", "julyF", "juneF", "marchF", "mayF", "mondayF", "monthE", "novemberF", "object", "octoberF", "saturdayF", "septemberF", "sundayF", "thursdayF", "tuesdayF", "wednesdayF", "yearToDateF" ],
      "properties" : {
        "aprilF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "augustF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "dayOfMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If execution frequency is monthly, defines the sole day within the month during which the process should be executed."
        },
        "dayOfWeekE" : {
          "type" : "string",
          "description" : "If execution frequency is monthly, defines the sole weekday during which the process should be executed.",
          "enum" : [ "None", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Last" ]
        },
        "decemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "endTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end time of execution. Used if a process should be executed every <n> minutes, with a start and stop time, for the days defined by the frequency."
        },
        "expirationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expiration date of the schedule, after the schedule will not be executed anymore."
        },
        "februaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "frequencyE" : {
          "type" : "string",
          "description" : "The frequency of the schedule.",
          "enum" : [ "Once", "Daily", "Weekly", "Monthly", "Annual" ]
        },
        "frequencyE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute frequencyE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "fridayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "januaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "julyF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "juneF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "marchF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mondayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "monthE" : {
          "type" : "string",
          "description" : "If frequency set to yearly, used to define the month. Not used.",
          "enum" : [ "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
        },
        "novemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The object instance id of the entity type the schedule is related to. For instance the alert defintion id."
        },
        "octoberF" : {
          "type" : "boolean",
          "description" : "Yes."
        },
        "recurMinutesN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The recurrence. Defines for a recurring schedule, that it should be executed every <n> minutes."
        },
        "repeatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Repeat n. Not used."
        },
        "saturdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "septemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "startD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start date of the schedule. For a one time schedule, this is the sole date of execution."
        },
        "startTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start time. For a one time schedule, this is the sole time of execution."
        },
        "sundayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "thursdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "tuesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "wednesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "yearToDateF" : {
          "type" : "boolean",
          "description" : "Manages the modification of the initial date of the report domain."
        }
      }
    },
    "ScreenProfCompo" : {
      "type" : "object",
      "required" : [ "functionName", "natureE", "rankN", "reportCode", "screenName", "screenProfileCode", "screenProfileId", "subtypeCode", "subtypeName", "typeName" ],
      "properties" : {
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "entityName" : {
          "type" : "string",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Contains the nature value of the attribute specified in the nature attribute (nat_attrib_dict_id) belonging to the entity (entity_dict_id).",
          "enum" : [ "<None>" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "From Triple'A ADVANTAGE R3.50 on,, you can define a rank at the Screen Prof Compo level that sorts the different User-Defined Screens belonging to the same context. The screens are sorted in ascending order (i.e. the screen with the lowest rank is displayed first, etc.). This lets you sort the operation input screens as you want, for example."
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "screenDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenEntityName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "screenProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "subtypeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "typeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        }
      }
    },
    "ScreenProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "functionName", "natureE", "rankN", "reportCode", "screenName", "screenProfileCode", "screenProfileId", "subtypeCode", "subtypeName", "typeName" ],
      "properties" : {
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "entityName" : {
          "type" : "string",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Contains the nature value of the attribute specified in the nature attribute (nat_attrib_dict_id) belonging to the entity (entity_dict_id).",
          "enum" : [ "<None>" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "From Triple'A ADVANTAGE R3.50 on,, you can define a rank at the Screen Prof Compo level that sorts the different User-Defined Screens belonging to the same context. The screens are sorted in ascending order (i.e. the screen with the lowest rank is displayed first, etc.). This lets you sort the operation input screens as you want, for example."
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "screenDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenEntityName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "screenProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "subtypeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "typeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        }
      }
    },
    "ScreenProfile" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "'Business' identifier of an occurrence as seen by the end-user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ScreenProfileWithPermValues" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "'Business' identifier of an occurrence as seen by the end-user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "SearchApplChannelProfCompo" : {
      "type" : "object",
      "required" : [ "applChannelCode", "applChannelProfileCode", "extServiceProfCode", "formatProfileCode", "funcSecuProfCode", "lastUserName", "reportProfileCode", "screenProfileCode", "searchProfileCode" ],
      "properties" : {
        "applChannelCode" : {
          "type" : "string",
          "description" : "References a channel."
        },
        "applChannelProfileCode" : {
          "type" : "string",
          "description" : "References a Channel Profile."
        },
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an External Service Profile."
        },
        "formatProfileCode" : {
          "type" : "string",
          "description" : "References a format profile."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "References a Function Security Profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this channel in the profile."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "References a Report Profile."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "References a Screen Profile."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "References a Search Profile."
        },
        "sessionTimeoutSecN" : {
          "type" : "number",
          "description" : "Specifies the number of seconds after which a session, for this channel and profile, is deleted and the user will have to log in again."
        }
      }
    },
    "SearchApplSessionHisto" : {
      "type" : "object",
      "required" : [ "applUserCode", "code" ],
      "properties" : {
        "applUserCode" : {
          "type" : "string",
          "description" : "Identifier of the user who created the session."
        },
        "applUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the user who created the session."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier that is displayed to the user."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Identifies the date and time at which the session was created."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        }
      }
    },
    "SearchBatchResult" : {
      "type" : "object",
      "required" : [ "beginD", "natureE", "portfolioCode", "portfolioName", "portfolioServiceTypeE", "portfolioThirdCode", "portfolioThirdName", "statusE" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the process creation."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time of the end of the process."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of the process.",
          "enum" : [ "Automatic Rebalancing", "Event Generation", "Payout Request", "Payout Monitoring", "Portfolio Closure", "Assets Transfer", "Realignment", "Allocate Order" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Portfolio to which the process is related."
        },
        "portfolioExtIpCurStatus" : {
          "type" : "string",
          "description" : "Portfolio to which the process is related.",
          "enum" : [ "None", "No Profile", "Valid", "Expired" ]
        },
        "portfolioExtIpExpiryD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Portfolio to which the process is related."
        },
        "portfolioExtIpName" : {
          "type" : "string",
          "description" : "Portfolio to which the process is related."
        },
        "portfolioExtIpRiskLevelN" : {
          "type" : "number",
          "description" : "Portfolio to which the process is related."
        },
        "portfolioMgtBeginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Portfolio to which the process is related."
        },
        "portfolioName" : {
          "type" : "string",
          "description" : "Portfolio to which the process is related."
        },
        "portfolioServiceTypeE" : {
          "type" : "string",
          "description" : "Portfolio to which the process is related.",
          "enum" : [ "<None>", "Discretionary", "Advisory", "Execution only", "Others", "Robo-advisor", "Goal-based" ]
        },
        "portfolioThirdCode" : {
          "type" : "string",
          "description" : "Portfolio to which the process is related."
        },
        "portfolioThirdName" : {
          "type" : "string",
          "description" : "Portfolio to which the process is related."
        },
        "statusE" : {
          "type" : "string",
          "description" : "Status of the process.",
          "enum" : [ "<None>", "Pending", "Completed", "Failed" ]
        },
        "withdrawalRequestId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Withdrawal request linked to the process. Only available for batch results of nature Payout request."
        }
      }
    },
    "SearchDataProfCompo" : {
      "type" : "object",
      "required" : [ "authDeleteF", "authUpdateF", "dataProfileCode", "dataProfileId", "dataSecuProfCode", "dataSecuProfId" ],
      "properties" : {
        "authDeleteF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is authorised to delete occurrences in secured tables (1) or not (0).  If not, s/he only has the right to view and possibly update occurrences (see auth_update_f)."
        },
        "authUpdateF" : {
          "type" : "boolean",
          "description" : "Specifies if a user can update an occurrence in a secured table (1) or just view it (0)."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "SearchExtServiceProfCompo" : {
      "type" : "object",
      "required" : [ "extServiceProfCode", "extServiceProfId", "externalServiceCode", "externalServiceId", "functionName", "natureE", "rankN" ],
      "properties" : {
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an external service profile to which an external service is linked."
        },
        "extServiceProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service profile to which an external service is linked."
        },
        "externalServiceCode" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceDenom" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service that is associated with an external service profile."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the external service.",
          "enum" : [ "Risk Check", "Lombard Check", "Financial Function", "Buying Power" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the call order of the external services."
        }
      }
    },
    "SearchFuncSecuProfCompo" : {
      "type" : "object",
      "required" : [ "entityName", "funcSecuProfCode", "funcSecuProfId", "functionName" ],
      "properties" : {
        "entityName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "funcSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionParentFunctionProcName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionProcName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        }
      }
    },
    "SearchNotificationRecipient" : {
      "type" : "object",
      "required" : [ "deletedF", "isReadF", "linkedNotifType", "notifInstanceCode", "notifInstanceConfirmedDraftF", "notifInstanceCreationD", "notifInstanceCreationUserCode", "notifInstanceCreationUserManagerName", "notifInstanceCreationUserThirdName", "notifInstanceDraftF", "notifInstanceNotifDefinitionCode", "notifInstanceNotifImportanceE", "notifInstanceNotifNatureE", "notifInstanceNotifPriorityE", "notifInstanceOriginE", "notifInstancePortfolioCode", "notifInstanceThirdPartyCode", "sentDeletedF", "sentOnD", "userCode", "userThirdName" ],
      "properties" : {
        "deletedF" : {
          "type" : "string",
          "description" : "Logical delete flag. Defines whether this recipient record has been logically deleted or not.\r\n\r\nLogically deleted notification recipient records are no longer displayed to the recipient.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "isReadF" : {
          "type" : "string",
          "description" : "A read status flag. Indicates whether the notification instance has been read by the user.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "linkedNotifType" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to.",
          "enum" : [ "None", "Reply", "Forward" ]
        },
        "notifInstanceCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceConfirmedDraftF" : {
          "type" : "boolean",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceCreationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceCreationUserCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceCreationUserManagerName" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceCreationUserThirdName" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceDraftF" : {
          "type" : "boolean",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceExternalReferenceC" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceNotifDefinitionCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceNotifImportanceE" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifInstanceNotifNatureE" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifInstanceNotifPriorityE" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "notifInstanceOriginE" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to.",
          "enum" : [ "System", "User" ]
        },
        "notifInstancePortfolioCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceThirdPartyCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "notifInstanceUrlC" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "sentDeletedF" : {
          "type" : "string",
          "description" : "Sent_deleted_f is used to indicate whether the sent items is deleted or not.\r\nif the value is 1 - sent item is deleted.\r\nif value is 0 - sent item is not deleted.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "sentOnD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the notification was sent to the user."
        },
        "userCode" : {
          "type" : "string",
          "description" : "The id of the user this notification instance was sent to."
        },
        "userThirdName" : {
          "type" : "string",
          "description" : "The name of the user this notification instance was sent to."
        }
      }
    },
    "SearchProfCompo" : {
      "type" : "object",
      "required" : [ "fullSearchPossibilityF", "functionName", "searchCriteriaCode", "searchCriteriaId", "searchProfileCode", "searchProfileId" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "entityName" : {
          "type" : "string"
        },
        "fullSearchPossibilityF" : {
          "type" : "boolean",
          "description" : "When this flag is set to yes, it allows the user to perform a standard search in which all the criteria are disponibles. This check box takes priority over the Search Profile check box. If the value of the Search Profile flag is FALSE (check box cleared) and the Search Profile Composition check box is TRUE (selected), the latter is taken into account."
        },
        "functionName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "searchCriteriaCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchCriteriaId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the parent search profile."
        },
        "searchProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of the parent search profile."
        }
      }
    },
    "SearchProfCompoWithPermValues" : {
      "type" : "object",
      "required" : [ "fullSearchPossibilityF", "functionName", "searchCriteriaCode", "searchCriteriaId", "searchProfileCode", "searchProfileId" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "entityName" : {
          "type" : "string"
        },
        "fullSearchPossibilityF" : {
          "type" : "boolean",
          "description" : "When this flag is set to yes, it allows the user to perform a standard search in which all the criteria are disponibles. This check box takes priority over the Search Profile check box. If the value of the Search Profile flag is FALSE (check box cleared) and the Search Profile Composition check box is TRUE (selected), the latter is taken into account."
        },
        "functionName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "searchCriteriaCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchCriteriaId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the parent search profile."
        },
        "searchProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of the parent search profile."
        }
      }
    },
    "SearchProfile" : {
      "type" : "object",
      "required" : [ "code", "fullSearchPossibilityF" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "'Business' identifier of an occurrence as seen by the end-user."
        },
        "fullSearchPossibilityF" : {
          "type" : "boolean",
          "description" : "when this flag is set to yes, it allows the user to perform a standard search in which all the criteria are disponibles."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "SearchQuestionnaireGenericAnswer" : {
      "type" : "object",
      "required" : [ "isDefaultF", "isNullF", "questElementDefAnswerDatatypeSqlnameC", "questElementDefCode", "questionnaireHistoCode", "valueFlag" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "-"
        },
        "isDefaultF" : {
          "type" : "boolean",
          "description" : "This attribute defines if the answer is a default one. Depending of the question definition, a default answer can be set either using a fixed value or using the previous answer given to the questionnaire."
        },
        "isNullF" : {
          "type" : "boolean",
          "description" : "This attribute defines if an answer has been defined (by the user or by a default value) or not. It helps avoiding displaying the question on summary pages or reporting document."
        },
        "questElementDefAnswerDatatypeSqlnameC" : {
          "type" : "string",
          "description" : "This attribute is the answer's link (foreign key) to the questionnaire element (question)."
        },
        "questElementDefCode" : {
          "type" : "string",
          "description" : "This attribute is the answer's link (foreign key) to the questionnaire element (question)."
        },
        "questionnaireHistoCode" : {
          "type" : "string",
          "description" : "This attribute is the answer's link (foreign key) to the questionnaire history (assessment)."
        },
        "valueDatetime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a datetime_t."
        },
        "valueEnum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enum_t."
        },
        "valueEnummask" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enummask_t."
        },
        "valueFlag" : {
          "type" : "boolean",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a flag_t"
        },
        "valueNumber" : {
          "type" : "number",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a number_t, amount_t or int_t."
        },
        "valueString" : {
          "type" : "string",
          "description" : "This attribute holds the answer reference to an object when its datatype (value_datatype_dict_id) is an info_t, note_t, string1000_t, string_2000_t, uni_info_t, uni_note_t, uni_string1000_t and uni_string2000_t."
        },
        "valueText" : {
          "type" : "string",
          "description" : "Not yet implemented."
        }
      }
    },
    "SearchQuestionnaireHisto" : {
      "type" : "object",
      "required" : [ "code", "portfolioCode", "questionnaireDefCode", "statusE", "thirdPartyCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "percentN" : {
          "type" : "number",
          "description" : "Provides the percentage of completion of the questionnaire history. Must be calculated by default value."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "scoreN" : {
          "type" : "number",
          "description" : "Provides a score of the questionnaire history. This field is optional. Based on the answers, it is possible to calculate a global score for a questionnaire."
        },
        "statusE" : {
          "type" : "string",
          "description" : "Provides the status of the questionnaire history. Once the status of the questionnaire history has been modified to \"Validated\", nothing can be updated on the questionnaire history except the status itself that can take the value \"Deprecated\".\r\n\r\nIf the status of the questionnaire history has been modified to \"Cancelled\", \"Rejected\", \"Deprecated\", or \"Expired\", nothing can be updated on the questionnaire history.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Validated", "Rejected", "Deprecated", "Expired" ]
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Provides a reference to the third-party linked to the questionnaire history."
        }
      }
    },
    "SearchReportProfCompo" : {
      "type" : "object",
      "required" : [ "reportCode", "reportProfileCode" ],
      "properties" : {
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportDenom" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "Reference to an occurrence in 'report profile'."
        }
      }
    },
    "SearchScreenProfCompo" : {
      "type" : "object",
      "required" : [ "functionName", "natureE", "rankN", "reportCode", "screenName", "screenProfileCode", "screenProfileId", "subtypeCode", "subtypeName", "typeName" ],
      "properties" : {
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "entityName" : {
          "type" : "string",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Contains the nature value of the attribute specified in the nature attribute (nat_attrib_dict_id) belonging to the entity (entity_dict_id).",
          "enum" : [ "<None>" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "From Triple'A ADVANTAGE R3.50 on,, you can define a rank at the Screen Prof Compo level that sorts the different User-Defined Screens belonging to the same context. The screens are sorted in ascending order (i.e. the screen with the lowest rank is displayed first, etc.). This lets you sort the operation input screens as you want, for example."
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "screenDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenEntityName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "screenProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "subtypeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "typeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        }
      }
    },
    "SearchSearchProfCompo" : {
      "type" : "object",
      "required" : [ "fullSearchPossibilityF", "functionName", "searchCriteriaCode", "searchCriteriaId", "searchProfileCode", "searchProfileId" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "entityName" : {
          "type" : "string"
        },
        "fullSearchPossibilityF" : {
          "type" : "boolean",
          "description" : "When this flag is set to yes, it allows the user to perform a standard search in which all the criteria are disponibles. This check box takes priority over the Search Profile check box. If the value of the Search Profile flag is FALSE (check box cleared) and the Search Profile Composition check box is TRUE (selected), the latter is taken into account."
        },
        "functionName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "searchCriteriaCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchCriteriaId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the parent search profile."
        },
        "searchProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of the parent search profile."
        }
      }
    },
    "TimeZone" : {
      "type" : "object",
      "required" : [ "code", "dbTimezoneF", "name", "utcOffset" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The Time zone code matches an IANA time zone database ID. \r\nThe IANA ID identifies a location by continent or ocean and then by the name of the location. Example: America/Chicago"
        },
        "dbTimezoneF" : {
          "type" : "boolean",
          "description" : "Identifies the time zone used by the database to store timestamp data type values. This time zone becomes the reference for the script key words when converting date time values.  Only one single time zone can be set to true. \r\nEven if you do not work in multiple time zones, this attribute setting is still required."
        },
        "denom" : {
          "type" : "string",
          "description" : "Denomination of the time zone. This field is optional."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the time zone (not necessarily unique). \r\nBy default the name has the code value.\r\nThis field is mandatory."
        },
        "utcOffset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the offset or time difference between the time zone local time and the Universal Time Coordinated (UTC).\r\nExamples: \r\n- Offset = 10:00:  is 10 hours after UTC.\r\n- Offset = -2:00 is 2 hours before UTC. \r\nThis offset is just an indication the system doesn't use. \r\nThe system relies on library (ICU) that supports the daylight saving time (DST) for  transformation between time zones in key word script."
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "activeF", "auditF", "batchUserF", "channelProfileCode", "code", "dataProfileCode", "dataSecuProfCode", "dataSecuProfId", "funcSecuProfCode", "guiUserF", "hasDbLoginF", "languageCode", "mainBusinessEntityCode", "mainBusinessEntityName", "managerCode", "maxRunningGuiN", "name", "parentUserName", "remotingUserF", "reportProfileCode", "rightToRunF", "screenProfileCode", "securityAdminF", "superuserF", "systemUserF", "tascUserF", "thirdPartyCode", "thirdWuiProfileE", "wuiUserF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Indicates whether the User is active or not. Mainly used for selection purposes."
        },
        "auditF" : {
          "type" : "boolean",
          "description" : "Specifies if the actions performed by the user are to be audited or not. Applies to the Sybase trigger based audit system. Please refer to the \"Audit Trail Functionality\" chapter in the \"System Management Guide\" for further details."
        },
        "batchUserF" : {
          "type" : "boolean",
          "description" : "Determines if user can access the application via batch processes"
        },
        "channelProfileCode" : {
          "type" : "string",
          "description" : "Identifier of the channel profile set for the user."
        },
        "channelProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the channel profile set for the user."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as displayed to the user."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Data Profile associated with a User. The Data Profile determines the data users can access. This only applies to entities for which data security is managed (portfolio, third party, etc.)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is mainly used for reporting purposes. It is used as the default when no denomination is associated with an occurrence in a particular language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the user.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the user in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the user in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the user in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the Function Security Profile associated with a User. The Function Security Profile determines which menu options and buttons in the Triple'A Graphical User Interface (GUI) are displayed to a particular user."
        },
        "guiContextT" : {
          "type" : "string",
          "description" : "The GUI Context field defines how the user is allowed to use the GUI. The information is read from the database when the user logs in and is saved when s/he quits the GUI. It contains TAGS delimited by square brackets ([ and ]) and also variables delimited by the equals sign (=).\r\n\r\nThe following TAGS are used:\r\n[MAIN]                : Main window\r\n[LOG]                 : Log window\r\n[FCT:valo]            : Specific property for one financial function (in this example, valo)\r\n[ENT:appl_param]      : Specific property for one entity (in this example, appl_param)\r\n\r\nThe following variables can be used:\r\nafter_save_mode       : Current save mode options, save and keep or copy or clear (MAIN)\r\ncopy_with_totals_f    : Value of option Copy to Clipboard with totals  (MAIN)\r\ncopy_formated_datas_f : Value of option Copy to Clipboard formatted data (MAIN)\r\nprint_with_code_f     : Value of option Print With Code (MAIN)\r\nextension             : Extension of a window (MAIN and FCT)\r\nfull_search_f         : Value is 1 if full search is activated for this entity (ENT)\r\nnature_e              : Last nature selected in a selection screen (ENT)\r\nmaximize_f            : value is 1 if a window is maximised (MAIN and FCT)\r\norigin                : Position of window (MAIN and FCT)\r\nsynonym_code          : code of the current codification (ENT)\r\nuse_screen_f          : if the value is 1, UD screens are used. Only for super-user (ENT)\r\nview_domain_f         : if the value is 1, if the domain information is shown in the financial window (FCT) \r\nview_toolbar_f        : if the value is 1, the tool bar is displayed in the financial window (FCT)"
        },
        "guiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a GUI or a BATCH user:\r\n0 = Batch user.\r\n1 = GUI user."
        },
        "hasDbLoginF" : {
          "type" : "boolean",
          "description" : "Indicates that a user has a Sybase login . In fact , when a user is linked to a manager , it means that it is used by the WUI , so a Sybase login is not necessary. \r\nThe Sybase login is only mandatory when the user is connected through the GUI."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mainBusinessEntityCode" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "mainBusinessEntityName" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Reference to a manager ID in the manager table.\r\nThe referenced manager is not updated when updating an appl_user. The following fields of a manager are not updated with the ones in appl_user :\r\n   - name,\r\n   - denom,\r\n   - language_dict_id,\r\n   - active_f,\r\n   - data_profile_id,\r\n   - data_secu_prof_id,\r\n   - report_profile_id."
        },
        "maxRunningGuiN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the maximum number of GUI sessions that the user is authorised to run simultaneously."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "osUserC" : {
          "type" : "string",
          "description" : "User login for the current Operating System."
        },
        "parentUserName" : {
          "type" : "string",
          "description" : "Specifies the identifier of a parent user. If this optional field is completed, the child user inherits some of the properties of the parent user. Please refer to the \"System Management Guide\" for more details."
        },
        "remotingUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via the Remoting layer"
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "Reference to the report profile associated with a user. When the user selects a report template, the list proposed corresponds to the Composition of the Report Profile associated with the user.\r\nThis reference is optional."
        },
        "resetD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Holds the date when the application user password gets reset."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Role of a user. Currently only used for TCIB",
          "enum" : [ "<None>", "Manager", "Advisory Client", "Discretionary Client" ]
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Screen Profile associated with a User. The Screen Profile determines the user-defined screen data that is displayed for each Triple'A entity. This particularly applies to operations and instruments."
        },
        "securityAdminF" : {
          "type" : "boolean",
          "description" : "Specifies if a user has the right to administrate user access to the various secured tables (portfolio, third party, strategy, strategy_link, etc.).\r\nThis type of user has the exclusive right to:\r\n-   Administrate the 'Data Security Profile' table.\r\n-   Associate a 'Data Security Profile' with an occurrence in a secured table.\r\n-   Associate a set of 'Data Security Profiles' with an individual user."
        },
        "superuserF" : {
          "type" : "boolean",
          "description" : "Specifies if a user is a Super-user or not. Super-users have access to every function and occurrence in the Triple'A tables."
        },
        "systemUserF" : {
          "type" : "boolean",
          "description" : "references the database owner and the technical users ( tasclogin users ) \r\nfor thoses particulars users, you cannot remove the Sybase login."
        },
        "tascUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via TASC"
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "foreign key to third_party entity"
        },
        "thirdWuiProfileE" : {
          "type" : "string",
          "description" : "foreign key to third_party entity",
          "enum" : [ "Default", "Client", "Advisory Client", "Discretionary Client" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Validity date for the current password.\r\nValidity date is also checked during the linked manager or third authentication."
        },
        "wuiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a WUI user.\r\nThe permitted values are:\r\n0 - No \r\n1 - Yes"
        }
      }
    },
    "UserPreference" : {
      "type" : "object",
      "required" : [ "natureE", "paramName" ],
      "properties" : {
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a user preference.\r\nThis field brings the capacity to classify parameters according to their purpose.",
          "enum" : [ "Region & Language", "Entity", "Function", "Table_Column", "Table_Sort_Order", "Color", "Domain", "Other" ]
        },
        "paramName" : {
          "type" : "string",
          "description" : "The parameter name defines the type of preference.\r\nExample of parameter names: \r\n- current-local: preferred language.\r\n- timezone: preferred time zone."
        },
        "paramValue" : {
          "type" : "string",
          "description" : "The name of the preference."
        }
      }
    },
    "UserPreferenceWithPermValues" : {
      "type" : "object",
      "required" : [ "natureE", "paramName" ],
      "properties" : {
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a user preference.\r\nThis field brings the capacity to classify parameters according to their purpose.",
          "enum" : [ "Region & Language", "Entity", "Function", "Table_Column", "Table_Sort_Order", "Color", "Domain", "Other" ]
        },
        "paramName" : {
          "type" : "string",
          "description" : "The parameter name defines the type of preference.\r\nExample of parameter names: \r\n- current-local: preferred language.\r\n- timezone: preferred time zone."
        },
        "paramValue" : {
          "type" : "string",
          "description" : "The name of the preference."
        }
      }
    },
    "UserReport" : {
      "type" : "object",
      "required" : [ "afterPageFooterF", "afterPageHeaderF", "automaticGenF", "beforePageFooterF", "beforePageHeaderF", "businessNatureE", "className", "code", "defaultDomainF", "extApplE", "natureE", "orientationF", "tocFooterF", "tocHeaderF" ],
      "properties" : {
        "afterPageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'after' page  of a report."
        },
        "automaticGenF" : {
          "type" : "boolean",
          "description" : "Flag indicating whethr the report can be generated automatically (1) or not (0).\r\nIf the report is generated automatically, it implies that the various scripts associated to the report may be overridden when using automatic report script generation."
        },
        "beforePageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates if whether report footer is displayed on the before pages of the report  ('1') or not ('0')."
        },
        "beforePageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the before page of the report  ('1') or not ('0')."
        },
        "beforePageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'before' page of a report."
        },
        "businessNatureE" : {
          "type" : "string",
          "description" : "Indicates the business nature of the report.",
          "enum" : [ "Financial", "Portfolio Audit", "Client Audit", "Questionnaire", "Financial Plan", "Other" ]
        },
        "className" : {
          "type" : "string",
          "description" : "This is a technical field. It represents the class name of the report (executable) to instantiate on the report servers. It allows for differentiating between the Triple'A code of a report and a possible different class name. Hence, it permits defining two different Triple'A Plus reports but using the same executable on the server."
        },
        "code" : {
          "type" : "string",
          "description" : "Name of an occurrence."
        },
        "defaultDomainF" : {
          "type" : "boolean",
          "description" : "Indicates whether all domain parameters are communicated to the external application."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is used mainly for reporting purpose. It is used as default when no denomination has been associated to an occurrence in the required language."
        },
        "extApplE" : {
          "type" : "string",
          "description" : "External application identifier.",
          "enum" : [ "<None>", "Visual Basic for Applications", "Seagate Crystal Reports" ]
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with german translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with english translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with french translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the web packaging."
        },
        "footerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the footer of a report."
        },
        "headerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the header of a report."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastGenD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last automatic generation of the SQR script associated to a report."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the technical nature of a report. It is used by the different frameworks to correctly manage the report execution.",
          "enum" : [ "<None>", "External", "Actuate e.Report", "FDX", "Actuate e.Spreadsheet" ]
        },
        "orientationF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report will be printed in a landscape (0) or portrait (1) orientation.\r\nThe default orientation is landscape."
        },
        "tocFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the table of content pages ('1') or not ('0')."
        },
        "tocHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the table of content pages ('1') or not ('0')."
        }
      }
    },
    "UserReportWithPermValues" : {
      "type" : "object",
      "required" : [ "afterPageFooterF", "afterPageHeaderF", "automaticGenF", "beforePageFooterF", "beforePageHeaderF", "businessNatureE", "className", "code", "defaultDomainF", "extApplE", "natureE", "orientationF", "tocFooterF", "tocHeaderF" ],
      "properties" : {
        "afterPageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'after' page  of a report."
        },
        "automaticGenF" : {
          "type" : "boolean",
          "description" : "Flag indicating whethr the report can be generated automatically (1) or not (0).\r\nIf the report is generated automatically, it implies that the various scripts associated to the report may be overridden when using automatic report script generation."
        },
        "beforePageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates if whether report footer is displayed on the before pages of the report  ('1') or not ('0')."
        },
        "beforePageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the before page of the report  ('1') or not ('0')."
        },
        "beforePageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'before' page of a report."
        },
        "businessNatureE" : {
          "type" : "string",
          "description" : "Indicates the business nature of the report.",
          "enum" : [ "Financial", "Portfolio Audit", "Client Audit", "Questionnaire", "Financial Plan", "Other" ]
        },
        "className" : {
          "type" : "string",
          "description" : "This is a technical field. It represents the class name of the report (executable) to instantiate on the report servers. It allows for differentiating between the Triple'A code of a report and a possible different class name. Hence, it permits defining two different Triple'A Plus reports but using the same executable on the server."
        },
        "code" : {
          "type" : "string",
          "description" : "Name of an occurrence."
        },
        "defaultDomainF" : {
          "type" : "boolean",
          "description" : "Indicates whether all domain parameters are communicated to the external application."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is used mainly for reporting purpose. It is used as default when no denomination has been associated to an occurrence in the required language."
        },
        "extApplE" : {
          "type" : "string",
          "description" : "External application identifier.",
          "enum" : [ "<None>", "Visual Basic for Applications", "Seagate Crystal Reports" ]
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with german translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with english translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with french translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the web packaging."
        },
        "footerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the footer of a report."
        },
        "headerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the header of a report."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastGenD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last automatic generation of the SQR script associated to a report."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the technical nature of a report. It is used by the different frameworks to correctly manage the report execution.",
          "enum" : [ "<None>", "External", "Actuate e.Report", "FDX", "Actuate e.Spreadsheet" ]
        },
        "natureE_permValues" : {
          "type" : "array",
          "description" : "permitted values for attribute natureE",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "name"
              },
              "rank" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Display order of the permitted value"
              },
              "label" : {
                "type" : "string",
                "description" : "Localized label"
              },
              "value" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "The permitted value itself."
              }
            }
          }
        },
        "orientationF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report will be printed in a landscape (0) or portrait (1) orientation.\r\nThe default orientation is landscape."
        },
        "tocFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the table of content pages ('1') or not ('0')."
        },
        "tocHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the table of content pages ('1') or not ('0')."
        }
      }
    },
    "UserWithPermValues" : {
      "type" : "object",
      "required" : [ "activeF", "auditF", "batchUserF", "channelProfileCode", "code", "dataProfileCode", "dataSecuProfCode", "dataSecuProfId", "funcSecuProfCode", "guiUserF", "hasDbLoginF", "languageCode", "mainBusinessEntityCode", "mainBusinessEntityName", "managerCode", "maxRunningGuiN", "name", "parentUserName", "remotingUserF", "reportProfileCode", "rightToRunF", "screenProfileCode", "securityAdminF", "superuserF", "systemUserF", "tascUserF", "thirdPartyCode", "thirdWuiProfileE", "wuiUserF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Indicates whether the User is active or not. Mainly used for selection purposes."
        },
        "auditF" : {
          "type" : "boolean",
          "description" : "Specifies if the actions performed by the user are to be audited or not. Applies to the Sybase trigger based audit system. Please refer to the \"Audit Trail Functionality\" chapter in the \"System Management Guide\" for further details."
        },
        "batchUserF" : {
          "type" : "boolean",
          "description" : "Determines if user can access the application via batch processes"
        },
        "channelProfileCode" : {
          "type" : "string",
          "description" : "Identifier of the channel profile set for the user."
        },
        "channelProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the channel profile set for the user."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as displayed to the user."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Data Profile associated with a User. The Data Profile determines the data users can access. This only applies to entities for which data security is managed (portfolio, third party, etc.)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is mainly used for reporting purposes. It is used as the default when no denomination is associated with an occurrence in a particular language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the user.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the user in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the user in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the user in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the Function Security Profile associated with a User. The Function Security Profile determines which menu options and buttons in the Triple'A Graphical User Interface (GUI) are displayed to a particular user."
        },
        "guiContextT" : {
          "type" : "string",
          "description" : "The GUI Context field defines how the user is allowed to use the GUI. The information is read from the database when the user logs in and is saved when s/he quits the GUI. It contains TAGS delimited by square brackets ([ and ]) and also variables delimited by the equals sign (=).\r\n\r\nThe following TAGS are used:\r\n[MAIN]                : Main window\r\n[LOG]                 : Log window\r\n[FCT:valo]            : Specific property for one financial function (in this example, valo)\r\n[ENT:appl_param]      : Specific property for one entity (in this example, appl_param)\r\n\r\nThe following variables can be used:\r\nafter_save_mode       : Current save mode options, save and keep or copy or clear (MAIN)\r\ncopy_with_totals_f    : Value of option Copy to Clipboard with totals  (MAIN)\r\ncopy_formated_datas_f : Value of option Copy to Clipboard formatted data (MAIN)\r\nprint_with_code_f     : Value of option Print With Code (MAIN)\r\nextension             : Extension of a window (MAIN and FCT)\r\nfull_search_f         : Value is 1 if full search is activated for this entity (ENT)\r\nnature_e              : Last nature selected in a selection screen (ENT)\r\nmaximize_f            : value is 1 if a window is maximised (MAIN and FCT)\r\norigin                : Position of window (MAIN and FCT)\r\nsynonym_code          : code of the current codification (ENT)\r\nuse_screen_f          : if the value is 1, UD screens are used. Only for super-user (ENT)\r\nview_domain_f         : if the value is 1, if the domain information is shown in the financial window (FCT) \r\nview_toolbar_f        : if the value is 1, the tool bar is displayed in the financial window (FCT)"
        },
        "guiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a GUI or a BATCH user:\r\n0 = Batch user.\r\n1 = GUI user."
        },
        "hasDbLoginF" : {
          "type" : "boolean",
          "description" : "Indicates that a user has a Sybase login . In fact , when a user is linked to a manager , it means that it is used by the WUI , so a Sybase login is not necessary. \r\nThe Sybase login is only mandatory when the user is connected through the GUI."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mainBusinessEntityCode" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "mainBusinessEntityName" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Reference to a manager ID in the manager table.\r\nThe referenced manager is not updated when updating an appl_user. The following fields of a manager are not updated with the ones in appl_user :\r\n   - name,\r\n   - denom,\r\n   - language_dict_id,\r\n   - active_f,\r\n   - data_profile_id,\r\n   - data_secu_prof_id,\r\n   - report_profile_id."
        },
        "maxRunningGuiN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the maximum number of GUI sessions that the user is authorised to run simultaneously."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "osUserC" : {
          "type" : "string",
          "description" : "User login for the current Operating System."
        },
        "parentUserName" : {
          "type" : "string",
          "description" : "Specifies the identifier of a parent user. If this optional field is completed, the child user inherits some of the properties of the parent user. Please refer to the \"System Management Guide\" for more details."
        },
        "remotingUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via the Remoting layer"
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "Reference to the report profile associated with a user. When the user selects a report template, the list proposed corresponds to the Composition of the Report Profile associated with the user.\r\nThis reference is optional."
        },
        "resetD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Holds the date when the application user password gets reset."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Role of a user. Currently only used for TCIB",
          "enum" : [ "<None>", "Manager", "Advisory Client", "Discretionary Client" ]
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Screen Profile associated with a User. The Screen Profile determines the user-defined screen data that is displayed for each Triple'A entity. This particularly applies to operations and instruments."
        },
        "securityAdminF" : {
          "type" : "boolean",
          "description" : "Specifies if a user has the right to administrate user access to the various secured tables (portfolio, third party, strategy, strategy_link, etc.).\r\nThis type of user has the exclusive right to:\r\n-   Administrate the 'Data Security Profile' table.\r\n-   Associate a 'Data Security Profile' with an occurrence in a secured table.\r\n-   Associate a set of 'Data Security Profiles' with an individual user."
        },
        "superuserF" : {
          "type" : "boolean",
          "description" : "Specifies if a user is a Super-user or not. Super-users have access to every function and occurrence in the Triple'A tables."
        },
        "systemUserF" : {
          "type" : "boolean",
          "description" : "references the database owner and the technical users ( tasclogin users ) \r\nfor thoses particulars users, you cannot remove the Sybase login."
        },
        "tascUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via TASC"
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "foreign key to third_party entity"
        },
        "thirdWuiProfileE" : {
          "type" : "string",
          "description" : "foreign key to third_party entity",
          "enum" : [ "Default", "Client", "Advisory Client", "Discretionary Client" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Validity date for the current password.\r\nValidity date is also checked during the linked manager or third authentication."
        },
        "wuiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a WUI user.\r\nThe permitted values are:\r\n0 - No \r\n1 - Yes"
        }
      }
    },
    "createAnswerPermittedValueDefInput" : {
      "type" : "object",
      "required" : [ "defValueF", "name", "navigationSpecificityE", "permValNatN", "questionnaireElementDefCode", "questionnaireElementDefId", "questionnaireElementDefQuestionnaireDefCode", "rankN" ],
      "properties" : {
        "defValueF" : {
          "type" : "boolean",
          "description" : "This attribute defines if the answer permitted value of a Multiple-Choice question is considered as the default answer. This attribute is used during the generation and assessment of dynamic questionnaires in conjunction with Questionnaire Element Definition def_value_e attribute."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a description of the answer permitted value."
        },
        "navigationSpecificityE" : {
          "type" : "boolean",
          "description" : "This attribute permit defining some limited navigation specificity for dynamic questionnaire."
        },
        "permValNatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The answer permitted value itself. This value is always numeric."
        },
        "questionnaireElementDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the display order of the answer permitted value."
        },
        "scoreN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines the score of an answer. It will be used to compute the questionnaire scoring based on answered questions."
        }
      }
    },
    "createAnswerPermittedValueDefSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AnswerPermittedValueDefWithPermValues"
        }
      }
    },
    "createAnswerPermittedValueLabelInput" : {
      "type" : "object",
      "required" : [ "answerPermittedValueDefId", "denom", "languageCode" ],
      "properties" : {
        "answerPermittedValueDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the answer permitted value."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a denomination of the answer permitted value label."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a reference to the language entity. Specifies the language of the label."
        }
      }
    },
    "createAnswerPermittedValueLabelSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AnswerPermittedValueLabelWithPermValues"
        }
      }
    },
    "createApplicationChannelProfileComposInput" : {
      "type" : "object",
      "required" : [ "applChannelCode", "extServiceProfCode", "formatProfileCode", "funcSecuProfCode", "lastUserName", "reportProfileCode", "screenProfileCode", "searchProfileCode" ],
      "properties" : {
        "applChannelCode" : {
          "type" : "string",
          "description" : "References a channel."
        },
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an External Service Profile."
        },
        "formatProfileCode" : {
          "type" : "string",
          "description" : "References a format profile."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "References a Function Security Profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this channel in the profile."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "References a Report Profile."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "References a Screen Profile."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "References a Search Profile."
        },
        "sessionTimeoutSecN" : {
          "type" : "number",
          "description" : "Specifies the number of seconds after which a session, for this channel and profile, is deleted and the user will have to log in again."
        }
      }
    },
    "createApplicationChannelProfileComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ApplChannelProfCompoWithPermValues"
        }
      }
    },
    "createApplicationChannelProfilesInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier that is displayed to the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nThis attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this profile."
        }
      }
    },
    "createApplicationChannelProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ChannelProfileWithPermValues"
        }
      }
    },
    "createDataProfileComposInput" : {
      "type" : "object",
      "required" : [ "authDeleteF", "authUpdateF", "dataProfileId", "dataSecuProfCode", "dataSecuProfId" ],
      "properties" : {
        "authDeleteF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is authorised to delete occurrences in secured tables (1) or not (0).  If not, s/he only has the right to view and possibly update occurrences (see auth_update_f)."
        },
        "authUpdateF" : {
          "type" : "boolean",
          "description" : "Specifies if a user can update an occurrence in a secured table (1) or just view it (0)."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "createDataProfileComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataProfCompoWithPermValues"
        }
      }
    },
    "createDataProfileInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique 'business' identifier of a data profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "createDataProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataProfileWithPermValues"
        }
      }
    },
    "createDataSecurityProfileInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        }
      }
    },
    "createDataSecurityProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataSecuProfWithPermValues"
        }
      }
    },
    "createExtServiceProfCompoInput" : {
      "type" : "object",
      "required" : [ "extServiceProfId", "externalServiceCode", "externalServiceId", "functionName", "natureE", "rankN" ],
      "properties" : {
        "extServiceProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service profile to which an external service is linked."
        },
        "externalServiceCode" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceDenom" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service that is associated with an external service profile."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the external service.",
          "enum" : [ "Risk Check", "Lombard Check", "Financial Function", "Buying Power" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the call order of the external services."
        }
      }
    },
    "createExtServiceProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExtServiceProfCompoWithPermValues"
        }
      }
    },
    "createExtServiceProfileInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as displayed to the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "createExtServiceProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExtServiceProfileWithPermValues"
        }
      }
    },
    "createExternalServiceInput" : {
      "type" : "object",
      "required" : [ "code", "natureE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Business identifier of the occurrence as seen by the end-user."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides the denomination of this occurrence."
        },
        "folderName" : {
          "type" : "string",
          "description" : "Not used"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides the name of this occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of an occurrence.",
          "enum" : [ "None", "Risk", "Lombard", "Search", "Buying Power" ]
        },
        "timeoutT" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the timeout in second used to abort the synchronous call to this external service."
        },
        "urlAddress" : {
          "type" : "string",
          "description" : "Provides the URL address used to call the external service adapter."
        }
      }
    },
    "createExternalServiceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExternalServiceWithPermValues"
        }
      }
    },
    "createFormatProfComposInput" : {
      "type" : "object",
      "required" : [ "defaultF", "formatCode", "formatFunctionName", "formatId", "formatNatureE", "formatProfileId", "rankN", "refFormatCode" ],
      "properties" : {
        "defaultF" : {
          "type" : "boolean",
          "description" : "Indicates whether the format is a default format. If that is the case, this particular format will be displayed first when opening the window. There should be one default per functionnality (i.e. valorisation, operation history, cash & liquidity, performance measurments,...). (Not yet implemented)."
        },
        "formatCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatDenom" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatEntityName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatFunctionName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatNatureE" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence.",
          "enum" : [ "Domain", "Detailed List", "Summary List", "Graphic", "Matrix", "Report", "Table", "Zoom", "Edit List", "Dynamic List", "Export Interface", "TSL Post Processing SQL", "Persisted Data", "Search Data", "Subscription", "Enrichment of the subscription" ]
        },
        "formatProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the order in which the various formats are presented in the menus and icon bar of a 'financial function'."
        },
        "refFormatCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "refFormatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        }
      }
    },
    "createFormatProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FormatProfCompoWithPermValues"
        }
      }
    },
    "createFormatProfileInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Identifier of an occurrence as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "createFormatProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FormatProfileWithPermValues"
        }
      }
    },
    "createFuncSecuProfilesInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "createFuncSecuProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FuncSecuProfileWithPermValues"
        }
      }
    },
    "createInvestmentProfileQuestionnaireInput" : {
      "type" : "object",
      "required" : [ "ageCategory", "financialNeeds", "incomeExpectation", "investmentKnowledge", "investmentObjective", "investmentPeriod", "marketFallBehaviour", "maxLossToleranceCapacity", "profileDescription", "proposedStrategyCode", "proposedStrategyName", "questionnaireHistoCode", "selectedStrategyCode", "selectedStrategyName" ],
      "properties" : {
        "ageCategory" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the age category.",
          "enum" : [ "NOTDEFINED", "18_TO_BELOW_30", "30_TO_BELOW_40", "40_TO_BELOW_50", "50_TO_BELOW_60", "60_AND_ABOVE" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Investment Profile questionnaire.\r\nElement of nature comment."
        },
        "financialNeeds" : {
          "type" : "string",
          "description" : "Provides a question relative to the financial needs.",
          "enum" : [ "NOTDEFINED", "VERY_EASILY", "EASILY", "DIFFICULT", "VERY_DIFFICULT" ]
        },
        "generalDescription" : {
          "type" : "string",
          "description" : "Provides a general description of the Investment Profile questionnaire. (This is not used.)"
        },
        "incomeExpectation" : {
          "type" : "string",
          "description" : "Provides the question that is relative to the income expectations.",
          "enum" : [ "NOTDEFINED", "RISE_WELL_AHEAD_OF_INFLATION", "KEEP_PACE_WITH_INFLATION", "FALL", "FLUCTUATE_FROM_YEAR_TO_YEAR" ]
        },
        "investmentKnowledge" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of investments.",
          "enum" : [ "NOTDEFINED", "NONE", "LIMITED", "GOOD", "EXTENSIVE" ]
        },
        "investmentObjective" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the primary objective for investing.",
          "enum" : [ "NOTDEFINED", "CAPITAL_PRESERVATION", "INCOME_STREAM", "STEADY_CAPITAL_APPRECIATION", "HIGH_CAPITAL_APPRECIATION" ]
        },
        "investmentPeriod" : {
          "type" : "string",
          "description" : "Provides the investment period.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_YEARS", "BETWEEN_3_AND_5_YEARS", "BETWEEN_5_AND_10_YEARS", "10_YEARS_AND_ABOVE" ]
        },
        "marketFallBehaviour" : {
          "type" : "string",
          "description" : "Provides a question relative to behaviour when the market falls.",
          "enum" : [ "NOTDEFINED", "ACCEPT_MINIMAL_DECLINES", "ACCEPT_SOME_DECLINES", "ACCEPT_MODERATE_DECLINES", "TAKE_LOSSES_AND_LARGE_FLUCT" ]
        },
        "maxLossToleranceCapacity" : {
          "type" : "string",
          "description" : "Provides a question relative to the maximum loss tolerance.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_PERCENT", "BETWEEN_3_AND_10", "BETWEEN_10_AND_20", "BETWEEN_20_AND_25", "OVER_25_PERCENT" ]
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Investment Profile questionnaire. Used by input controls to identify which answers need to be checked. This is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Investment Profile questionnaire."
        },
        "profileDescription" : {
          "type" : "string",
          "description" : "Based on the score of the questionnaire, the system will define the Investment Profile. This Investment Profile is used to determine the best strategy to propose for future investments.",
          "enum" : [ "NOTDEFINED", "SECURE", "CONSERVATIVE", "BALANCED", "ACTIVE", "DYNAMIC" ]
        },
        "proposedStrategyCode" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "proposedStrategyName" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "questionnaireHistoCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire history."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the investment profile questionnaire report generated after the questionnaire is completed or under review."
        },
        "riskToleranceDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about risk tolerance."
        },
        "score" : {
          "type" : "number",
          "description" : "Determines the score of the Investment Profile questionnaire calculated from the answers provided."
        },
        "selectedStrategyCode" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyInvProfRiskLevelN" : {
          "type" : "number",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyName" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "timeHorizonDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about time horizon."
        }
      }
    },
    "createInvestmentProfileQuestionnaireSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InvestmentProfileQuestionnaireWithPermValues"
        }
      }
    },
    "createMiFIDQuestionnaireInput" : {
      "type" : "object",
      "required" : [ "bestExecutionPolicy", "classification", "educationLevel", "knowComplexInstruments", "knowExpCommodityDerivatives", "knowExpCreditDerivatives", "knowExpCurrencyDerivatives", "knowExpEcoStatDerivatives", "knowExpIndexDerivatives", "knowExpInterestDerivatives", "knowExpOtherComplexInstr", "knowExpSecurityDerivatives", "languageCode", "questionnaireHistoCode", "residenceCountryCode", "riskCountryCode", "taxCountryCode" ],
      "properties" : {
        "bestExecutionPolicy" : {
          "type" : "string",
          "description" : "Provides a question relative to the best execution policy document.",
          "enum" : [ "NOT_DEFINED", "NOT_SIGNED", "SIGNED", "PENDING", "MISSING" ]
        },
        "classification" : {
          "type" : "string",
          "description" : "Provides a question relative to the classification of the client.",
          "enum" : [ "NONE", "RETAIL", "PROFESSIONNAL_PER_SE", "PROFESSIONNAL_ON_REQUEST", "ELIGIBLE_COUNTERPARTY", "INSTITUTIONAL" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Suitability and Appropriateness questionnaire.\r\nElement of nature comment."
        },
        "educationLevel" : {
          "type" : "string",
          "description" : "Provides a question relative to the client's education level.",
          "enum" : [ "NONE", "NOT_DEFINED", "HIGH_SCHOOL", "GRADUATE", "POST_GRADUATE" ]
        },
        "knowComplexInstruments" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of complex instruments.",
          "enum" : [ "KNOW_COMPLEX_INSTR_NOT_DEF", "KNOW_COMPLEX_INSTR_YES", "KNOW_COMPLEX_INSTR_NO" ]
        },
        "knowExpCommodityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of commodity derivatives.",
          "enum" : [ "KNOW_EXP_COM_DERIV_NOT_DEF", "KNOW_EXP_COM_DERIV_YES", "KNOW_EXP_COM_DERIV_NO" ]
        },
        "knowExpCreditDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of credit derivatives.",
          "enum" : [ "KNOW_EXP_CRED_DERIV_NOT_DEF", "KNOW_EXP_CRED_DERIV_YES", "KNOW_EXP_CRED_DERIV_NO" ]
        },
        "knowExpCurrencyDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to currency derivatives.",
          "enum" : [ "KNOW_EXP_CURR_DERIV_NOT_DEF", "KNOW_EXP_CURR_DERIV_YES", "KNOW_EXP_CURR_DERIV_NO" ]
        },
        "knowExpEcoStatDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of economic statistics derivatives.",
          "enum" : [ "KNOW_ECO_STAT_DERIV_NOT_DEF", "KNOW_ECO_STAT_DERIV_YES", "KNOW_ECO_STAT_DERIV_NO" ]
        },
        "knowExpIndexDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to index derivatives.",
          "enum" : [ "KNOW_EXP_IND_DERIV_NOT_DEF", "KNOW_EXP_IND_DERIV_YES", "KNOW_EXP_IND_DERIV_NO" ]
        },
        "knowExpInterestDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of interest derivatives.",
          "enum" : [ "KNOW_EXP_INT_DERIV_NOT_DEF", "KNOW_EXP_INT_DERIV_YES", "KNOW_EXP_INT_DERIV_NO" ]
        },
        "knowExpOtherComplexInstr" : {
          "type" : "string",
          "description" : "Provides a question relative to knowledge of other complex instruments.",
          "enum" : [ "KNOW_EXP_OTHER_INST_NOT_DEF", "KNOW_EXP_OTHER_INST_YES", "KNOW_EXP_OTHER_INST_NO" ]
        },
        "knowExpSecurityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the knowledge on security derivatives.",
          "enum" : [ "KNOW_EXP_SECU_DERIV_NOT_DEF", "KNOW_EXP_SECU_DERIV_YES", "KNOW_EXP_SECU_DERIV_NO" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the language of the client. Reference to the language entity."
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Suitability and Appropriateness questionnaire. Used by input controls to identify which answers need to be checked. It is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Suitability and Appropriateness questionnaire."
        },
        "questionnaireHistoCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire history."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the suitability & appropriateness questionnaire report generated after the questionnaire is completed or under review."
        },
        "residenceCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the residence country of the client. Reference to geographic entity."
        },
        "riskCountryCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the risk country of the client. Reference to geographic entity."
        },
        "taxCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the tax country of the client. Reference to geographic entity."
        }
      }
    },
    "createMiFIDQuestionnaireSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/MiFIDQuestionnaireWithPermValues"
        }
      }
    },
    "createNotificationDefinitionsInput" : {
      "type" : "object",
      "required" : [ "code", "creationD", "creationUserCode", "creationUserId", "notifImportanceE", "notifNatureE", "notifPriorityE" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "A unique business code for an occurence."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the occurence."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the user who created the occurence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "The importance. Each notification can communicate its importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The Priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL pattern to be launched when following up on the notification. \r\nSince this URL is often not static, but contains an ID of the object the notification was related to, it is possible to inject placehholders, which are replaced during the creation of the notification instance based on the notification definition."
        }
      }
    },
    "createNotificationDefinitionsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotifDefinitionWithPermValues"
        }
      }
    },
    "createNotificationInstanceInput" : {
      "type" : "object",
      "required" : [ "code", "confirmedDraftF", "creationD", "creationUserCode", "draftF", "linkedNotifInstanceCode", "linkedNotifType", "notifDefinitionCode", "notifImportanceE", "notifNatureE", "notifPriorityE", "originE", "portfolioCode", "thirdPartyCode" ],
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body of the message. This field is only used if the notification instance is a user message."
        },
        "code" : {
          "type" : "string",
          "description" : "A unique business code per occurence. Usually generated by the system when creating the notification instance."
        },
        "confirmedDraftF" : {
          "type" : "boolean",
          "description" : "If the notification instance is a user message, this field defines whether the user confirmed that the message is a draft. Messages that have this flag set to 1 are displayed in the list of draft messages."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time of the instance."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the notification instance."
        },
        "draftF" : {
          "type" : "boolean",
          "description" : "If this notification instance is a user message, then this field defines whether the message is a technical draft or not. \r\n\r\nA technical draft message is a message that has been created by the user but has not yet been sent. This is a transitional state, which should only last for a couple of minutes. \r\n\r\nWhen finished with the edition of the message, the user will either send it (which will reset the draft_f) or confirm the message to be a draft (which will set the flag confirmed_draft_f)."
        },
        "externalReferenceC" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For objects that do not exist in Triple A core, this is an external reference, usually coded as URI."
        },
        "forwardRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to forward this message or not."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkedNotifInstanceBodyC" : {
          "type" : "string",
          "description" : "The body of the message that was replied to/forwarded from. This field is only used if the notification instance is a user message."
        },
        "linkedNotifInstanceCode" : {
          "type" : "string",
          "description" : "Notif instance Code of the message that was replied to/forwarded from."
        },
        "linkedNotifInstanceSubjectC" : {
          "type" : "string",
          "description" : "The subject of a user message  that was replied to/forwarded from. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "linkedNotifType" : {
          "type" : "string",
          "description" : "If this notification instance is a message and it is linked to another message pointed to by notif_instance_id, this field defines whether the message is a reply or a forward.",
          "enum" : [ "None", "Reply", "Forward" ]
        },
        "notifDefinitionCode" : {
          "type" : "string",
          "description" : "The code of the notification definition, if the notification instance is based on a definition."
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "Notification importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The notification priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "originE" : {
          "type" : "string",
          "description" : "The notification instance origin. If 0 or null, the instance was sent by the system. If 1, the notification instance was sent by a user and is in fact a user message.",
          "enum" : [ "System", "User" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a portfolio."
        },
        "replyRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to reply to this message or not."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject of a user message. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a third party."
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL that should be launched when following up on the notification. \r\nEach notification provides a textual information to the user on the event/situation that caused its sending. The user then in most cases is provided a link that redirects him to the location within the software user interface that was at the origin of the notification."
        }
      }
    },
    "createNotificationInstanceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotificationInstanceWithPermValues"
        }
      }
    },
    "createNotificationRecipientInput" : {
      "type" : "object",
      "required" : [ "deletedF", "isReadF", "notificationInstanceCode", "sentDeletedF", "sentOnD", "userCode" ],
      "properties" : {
        "deletedF" : {
          "type" : "string",
          "description" : "Logical delete flag. Defines whether this recipient record has been logically deleted or not.\r\n\r\nLogically deleted notification recipient records are no longer displayed to the recipient.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "isReadF" : {
          "type" : "string",
          "description" : "A read status flag. Indicates whether the notification instance has been read by the user.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "notificationInstanceCode" : {
          "type" : "string",
          "description" : "The notification instance this record is linked to."
        },
        "sentDeletedF" : {
          "type" : "string",
          "description" : "Sent_deleted_f is used to indicate whether the sent items is deleted or not.\r\nif the value is 1 - sent item is deleted.\r\nif value is 0 - sent item is not deleted.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "sentOnD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the notification was sent to the user."
        },
        "userCode" : {
          "type" : "string",
          "description" : "The Code of the user this notification instance was sent to."
        }
      }
    },
    "createNotificationRecipientSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotificationRecipientWithPermValues"
        }
      }
    },
    "createNotificationSubjectBodyDefinitionInput" : {
      "type" : "object",
      "required" : [ "languageCode" ],
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body, that is the full textual description of the notification. This text can been entered as RTF text on the Web User Interface."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "The code of the language the subject/body is held in."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject."
        }
      }
    },
    "createNotificationSubjectBodyDefinitionSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotifSubjectBodyDefWithPermValues"
        }
      }
    },
    "createQuestionnaireDefsInput" : {
      "type" : "object",
      "required" : [ "categoryE", "code", "creationUserName", "dataSecuProf2Code", "dataSecuProfCode", "deleteRightF", "lastUserName", "natureE", "scoringNatureE", "statusE", "updateRightF", "validationUserName" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition starts to be valid."
        },
        "categoryE" : {
          "type" : "string",
          "description" : "-",
          "enum" : [ "Static", "Dynamic", "Library" ]
        },
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire definition and is displayed to the end user. This field is mandatory."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the creation date of the questionnaire definition."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "creationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "dataSecuProf2Code" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This is an optional reference that is used to control Triple'A Plus Web third-party access to the instrument."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "The delete right defines whether the current user has the right to delete this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire definition denomination that is not necessarily unique. This field is optional."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition is no longer valid. The end date is not automatically managed."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "Provides questionnaire definition name that is not necessarily unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Allows for the characterization of different natures of questionnaire definition. This field is mandatory.",
          "enum" : [ "None", "Client Profile", "Investment Profile", "Financial Profile", "Risk Profile", "Legal Profile", "Financial Plan", "Investment Plan", "Savings Plan", "Retirement Plan", "Education Plan", "Life Insurance Plan", "Tax Plan" ]
        },
        "revisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The revision is a global technical number identifying questionnaires. In conjunction with the parent revision, it permits understanding the questionnaires revision tree."
        },
        "scoringNatureE" : {
          "type" : "string",
          "description" : "This attribute permits defining the scoring nature of a questionnaire. It has no impact on static questionnaires and are principally used for dynamic questionnaire.",
          "enum" : [ "None", "Sum", "Custom" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the questionnaire definition. This field is mandatory.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Waiting Business Validation", "Waiting Technical Completion", "Waiting Testing", "Validated", "Rejected", "Active", "Suspended", "Deprecated", "Expired" ]
        },
        "typeExtDenomination" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "The update right defines whether the current user has the right to update this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "validationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date of validation of the questionnaire definition."
        },
        "validationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "validationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "versionN" : {
          "type" : "number",
          "description" : "Provides the version number of the questionnaire definition. This field is optional."
        }
      }
    },
    "createQuestionnaireDefsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireDefWithPermValues"
        }
      }
    },
    "createQuestionnaireElementDefInput" : {
      "type" : "object",
      "required" : [ "answerDatatypeSqlnameC", "code", "defValueE", "mandatoryF", "natureE", "questionnaireDefCode", "questionnaireDefId", "questionnaireSectionDefId", "questionnaireSectionDefNatureE", "typeCode" ],
      "properties" : {
        "answerDatatypeSqlnameC" : {
          "type" : "string",
          "description" : "Provides a reference to the datatype of the answer linked to the questionnaire element."
        },
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire element that is displayed to the end user. This field is mandatory."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides a creation date of the questionnaire element."
        },
        "defValueE" : {
          "type" : "string",
          "description" : "This attribute permit defining questions default value rule. It is used during the generation and assessment of dynamic questionnaires and is only applicable for Multiple-Choice questions.",
          "enum" : [ "None", "Inherit", "Fixed", "Initial and inherit", "Custom" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire element denomination that is not necessarily unique. This field is optional."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mandatoryF" : {
          "type" : "boolean",
          "description" : "Defines whether the questionnaire element is mandatory or not. This field is mandatory."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a questionnaire element name that is not necessarily unique. This field is mandatory."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the questionnaire element. This field is mandatory.",
          "enum" : [ "Question", "Score", "Comment", "Technical", "Virtual" ]
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireSectionDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "questionnaireSectionDefNatureE" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory.",
          "enum" : [ "None", "Standard", "Summary", "Technical" ]
        },
        "questionnaireSectionDefRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the rank of the questionnaire element in the associated questionnaire section."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire element."
        }
      }
    },
    "createQuestionnaireElementDefSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireElementDefWithPermValues"
        }
      }
    },
    "createQuestionnaireHistoInput" : {
      "type" : "object",
      "required" : [ "code", "portfolioCode", "questionnaireDefCode", "statusE", "thirdPartyCode" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Provides a unique business identifier of the questionnaire history that is displayed to the end user. This field is mandatory."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "percentN" : {
          "type" : "number",
          "description" : "Provides the percentage of completion of the questionnaire history. Must be calculated by default value."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "scoreN" : {
          "type" : "number",
          "description" : "Provides a score of the questionnaire history. This field is optional. Based on the answers, it is possible to calculate a global score for a questionnaire."
        },
        "statusE" : {
          "type" : "string",
          "description" : "Provides the status of the questionnaire history. Once the status of the questionnaire history has been modified to \"Validated\", nothing can be updated on the questionnaire history except the status itself that can take the value \"Deprecated\".\r\n\r\nIf the status of the questionnaire history has been modified to \"Cancelled\", \"Rejected\", \"Deprecated\", or \"Expired\", nothing can be updated on the questionnaire history.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Validated", "Rejected", "Deprecated", "Expired" ]
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Provides a reference to the third-party linked to the questionnaire history."
        }
      }
    },
    "createQuestionnaireHistoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireHistoWithPermValues"
        }
      }
    },
    "createReportProfComposInput" : {
      "type" : "object",
      "required" : [ "reportCode" ],
      "properties" : {
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportDenom" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in report."
        },
        "reportProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in 'report profile'."
        }
      }
    },
    "createReportProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ReportProfCompoWithPermValues"
        }
      }
    },
    "createReportProfilesInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as seen by the user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "createReportProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ReportProfileWithPermValues"
        }
      }
    },
    "createScheduleDefinitionInput" : {
      "type" : "object",
      "required" : [ "aprilF", "augustF", "dayOfWeekE", "decemberF", "februaryF", "frequencyE", "fridayF", "januaryF", "julyF", "juneF", "marchF", "mayF", "mondayF", "monthE", "novemberF", "object", "octoberF", "saturdayF", "septemberF", "sundayF", "thursdayF", "tuesdayF", "wednesdayF", "yearToDateF" ],
      "properties" : {
        "aprilF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "augustF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "dayOfMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If execution frequency is monthly, defines the sole day within the month during which the process should be executed."
        },
        "dayOfWeekE" : {
          "type" : "string",
          "description" : "If execution frequency is monthly, defines the sole weekday during which the process should be executed.",
          "enum" : [ "None", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Last" ]
        },
        "decemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "endTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end time of execution. Used if a process should be executed every <n> minutes, with a start and stop time, for the days defined by the frequency."
        },
        "expirationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expiration date of the schedule, after the schedule will not be executed anymore."
        },
        "februaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "frequencyE" : {
          "type" : "string",
          "description" : "The frequency of the schedule.",
          "enum" : [ "Once", "Daily", "Weekly", "Monthly", "Annual" ]
        },
        "fridayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "januaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "julyF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "juneF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "marchF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mondayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "monthE" : {
          "type" : "string",
          "description" : "If frequency set to yearly, used to define the month. Not used.",
          "enum" : [ "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
        },
        "novemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The object instance id of the entity type the schedule is related to. For instance the alert defintion id."
        },
        "octoberF" : {
          "type" : "boolean",
          "description" : "Yes."
        },
        "recurMinutesN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The recurrence. Defines for a recurring schedule, that it should be executed every <n> minutes."
        },
        "repeatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Repeat n. Not used."
        },
        "saturdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "septemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "startD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start date of the schedule. For a one time schedule, this is the sole date of execution."
        },
        "startTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start time. For a one time schedule, this is the sole time of execution."
        },
        "sundayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "thursdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "tuesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "wednesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "yearToDateF" : {
          "type" : "boolean",
          "description" : "Manages the modification of the initial date of the report domain."
        }
      }
    },
    "createScheduleDefinitionSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ScheduleDefWithPermValues"
        }
      }
    },
    "createScreenProfCompoInput" : {
      "type" : "object",
      "required" : [ "functionName", "natureE", "rankN", "reportCode", "screenName", "screenProfileId", "subtypeCode", "subtypeName", "typeName" ],
      "properties" : {
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "entityName" : {
          "type" : "string",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Contains the nature value of the attribute specified in the nature attribute (nat_attrib_dict_id) belonging to the entity (entity_dict_id).",
          "enum" : [ "<None>" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "From Triple'A ADVANTAGE R3.50 on,, you can define a rank at the Screen Prof Compo level that sorts the different User-Defined Screens belonging to the same context. The screens are sorted in ascending order (i.e. the screen with the lowest rank is displayed first, etc.). This lets you sort the operation input screens as you want, for example."
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "screenDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenEntityName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "subtypeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "typeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        }
      }
    },
    "createScreenProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ScreenProfCompoWithPermValues"
        }
      }
    },
    "createScreenProfileInput" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "'Business' identifier of an occurrence as seen by the end-user."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "createScreenProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ScreenProfileWithPermValues"
        }
      }
    },
    "createSearchProfComposInput" : {
      "type" : "object",
      "required" : [ "fullSearchPossibilityF", "functionName", "searchCriteriaCode", "searchCriteriaId", "searchProfileCode", "searchProfileId" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "entityName" : {
          "type" : "string"
        },
        "fullSearchPossibilityF" : {
          "type" : "boolean",
          "description" : "When this flag is set to yes, it allows the user to perform a standard search in which all the criteria are disponibles. This check box takes priority over the Search Profile check box. If the value of the Search Profile flag is FALSE (check box cleared) and the Search Profile Composition check box is TRUE (selected), the latter is taken into account."
        },
        "functionName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "searchCriteriaCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchCriteriaId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the parent search profile."
        },
        "searchProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of the parent search profile."
        }
      }
    },
    "createSearchProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/SearchProfCompoWithPermValues"
        }
      }
    },
    "createUserInput" : {
      "type" : "object",
      "required" : [ "activeF", "auditF", "batchUserF", "channelProfileCode", "code", "dataProfileCode", "dataSecuProfCode", "dataSecuProfId", "funcSecuProfCode", "guiUserF", "hasDbLoginF", "languageCode", "mainBusinessEntityCode", "mainBusinessEntityName", "managerCode", "maxRunningGuiN", "name", "parentUserName", "remotingUserF", "reportProfileCode", "rightToRunF", "screenProfileCode", "securityAdminF", "superuserF", "systemUserF", "tascUserF", "thirdPartyCode", "thirdWuiProfileE", "wuiUserF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Indicates whether the User is active or not. Mainly used for selection purposes."
        },
        "auditF" : {
          "type" : "boolean",
          "description" : "Specifies if the actions performed by the user are to be audited or not. Applies to the Sybase trigger based audit system. Please refer to the \"Audit Trail Functionality\" chapter in the \"System Management Guide\" for further details."
        },
        "batchUserF" : {
          "type" : "boolean",
          "description" : "Determines if user can access the application via batch processes"
        },
        "channelProfileCode" : {
          "type" : "string",
          "description" : "Identifier of the channel profile set for the user."
        },
        "channelProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the channel profile set for the user."
        },
        "code" : {
          "type" : "string",
          "description" : "Unique identifier, as displayed to the user."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Data Profile associated with a User. The Data Profile determines the data users can access. This only applies to entities for which data security is managed (portfolio, third party, etc.)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is mainly used for reporting purposes. It is used as the default when no denomination is associated with an occurrence in a particular language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the user.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the user in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the user in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the user in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the Function Security Profile associated with a User. The Function Security Profile determines which menu options and buttons in the Triple'A Graphical User Interface (GUI) are displayed to a particular user."
        },
        "guiContextT" : {
          "type" : "string",
          "description" : "The GUI Context field defines how the user is allowed to use the GUI. The information is read from the database when the user logs in and is saved when s/he quits the GUI. It contains TAGS delimited by square brackets ([ and ]) and also variables delimited by the equals sign (=).\r\n\r\nThe following TAGS are used:\r\n[MAIN]                : Main window\r\n[LOG]                 : Log window\r\n[FCT:valo]            : Specific property for one financial function (in this example, valo)\r\n[ENT:appl_param]      : Specific property for one entity (in this example, appl_param)\r\n\r\nThe following variables can be used:\r\nafter_save_mode       : Current save mode options, save and keep or copy or clear (MAIN)\r\ncopy_with_totals_f    : Value of option Copy to Clipboard with totals  (MAIN)\r\ncopy_formated_datas_f : Value of option Copy to Clipboard formatted data (MAIN)\r\nprint_with_code_f     : Value of option Print With Code (MAIN)\r\nextension             : Extension of a window (MAIN and FCT)\r\nfull_search_f         : Value is 1 if full search is activated for this entity (ENT)\r\nnature_e              : Last nature selected in a selection screen (ENT)\r\nmaximize_f            : value is 1 if a window is maximised (MAIN and FCT)\r\norigin                : Position of window (MAIN and FCT)\r\nsynonym_code          : code of the current codification (ENT)\r\nuse_screen_f          : if the value is 1, UD screens are used. Only for super-user (ENT)\r\nview_domain_f         : if the value is 1, if the domain information is shown in the financial window (FCT) \r\nview_toolbar_f        : if the value is 1, the tool bar is displayed in the financial window (FCT)"
        },
        "guiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a GUI or a BATCH user:\r\n0 = Batch user.\r\n1 = GUI user."
        },
        "hasDbLoginF" : {
          "type" : "boolean",
          "description" : "Indicates that a user has a Sybase login . In fact , when a user is linked to a manager , it means that it is used by the WUI , so a Sybase login is not necessary. \r\nThe Sybase login is only mandatory when the user is connected through the GUI."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mainBusinessEntityCode" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "mainBusinessEntityName" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Reference to a manager ID in the manager table.\r\nThe referenced manager is not updated when updating an appl_user. The following fields of a manager are not updated with the ones in appl_user :\r\n   - name,\r\n   - denom,\r\n   - language_dict_id,\r\n   - active_f,\r\n   - data_profile_id,\r\n   - data_secu_prof_id,\r\n   - report_profile_id."
        },
        "maxRunningGuiN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the maximum number of GUI sessions that the user is authorised to run simultaneously."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "osUserC" : {
          "type" : "string",
          "description" : "User login for the current Operating System."
        },
        "parentUserName" : {
          "type" : "string",
          "description" : "Specifies the identifier of a parent user. If this optional field is completed, the child user inherits some of the properties of the parent user. Please refer to the \"System Management Guide\" for more details."
        },
        "remotingUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via the Remoting layer"
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "Reference to the report profile associated with a user. When the user selects a report template, the list proposed corresponds to the Composition of the Report Profile associated with the user.\r\nThis reference is optional."
        },
        "resetD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Holds the date when the application user password gets reset."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Role of a user. Currently only used for TCIB",
          "enum" : [ "<None>", "Manager", "Advisory Client", "Discretionary Client" ]
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Screen Profile associated with a User. The Screen Profile determines the user-defined screen data that is displayed for each Triple'A entity. This particularly applies to operations and instruments."
        },
        "securityAdminF" : {
          "type" : "boolean",
          "description" : "Specifies if a user has the right to administrate user access to the various secured tables (portfolio, third party, strategy, strategy_link, etc.).\r\nThis type of user has the exclusive right to:\r\n-   Administrate the 'Data Security Profile' table.\r\n-   Associate a 'Data Security Profile' with an occurrence in a secured table.\r\n-   Associate a set of 'Data Security Profiles' with an individual user."
        },
        "superuserF" : {
          "type" : "boolean",
          "description" : "Specifies if a user is a Super-user or not. Super-users have access to every function and occurrence in the Triple'A tables."
        },
        "systemUserF" : {
          "type" : "boolean",
          "description" : "references the database owner and the technical users ( tasclogin users ) \r\nfor thoses particulars users, you cannot remove the Sybase login."
        },
        "tascUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via TASC"
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "foreign key to third_party entity"
        },
        "thirdWuiProfileE" : {
          "type" : "string",
          "description" : "foreign key to third_party entity",
          "enum" : [ "Default", "Client", "Advisory Client", "Discretionary Client" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Validity date for the current password.\r\nValidity date is also checked during the linked manager or third authentication."
        },
        "wuiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a WUI user.\r\nThe permitted values are:\r\n0 - No \r\n1 - Yes"
        }
      }
    },
    "createUserPreferenceInput" : {
      "type" : "object",
      "required" : [ "natureE", "paramName" ],
      "properties" : {
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a user preference.\r\nThis field brings the capacity to classify parameters according to their purpose.",
          "enum" : [ "Region & Language", "Entity", "Function", "Table_Column", "Table_Sort_Order", "Color", "Domain", "Other" ]
        },
        "paramName" : {
          "type" : "string",
          "description" : "The parameter name defines the type of preference.\r\nExample of parameter names: \r\n- current-local: preferred language.\r\n- timezone: preferred time zone."
        },
        "paramValue" : {
          "type" : "string",
          "description" : "The name of the preference."
        }
      }
    },
    "createUserPreferenceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserPreferenceWithPermValues"
        }
      }
    },
    "createUserReportInput" : {
      "type" : "object",
      "required" : [ "afterPageFooterF", "afterPageHeaderF", "automaticGenF", "beforePageFooterF", "beforePageHeaderF", "businessNatureE", "className", "code", "defaultDomainF", "extApplE", "natureE", "orientationF", "tocFooterF", "tocHeaderF" ],
      "properties" : {
        "afterPageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'after' page  of a report."
        },
        "automaticGenF" : {
          "type" : "boolean",
          "description" : "Flag indicating whethr the report can be generated automatically (1) or not (0).\r\nIf the report is generated automatically, it implies that the various scripts associated to the report may be overridden when using automatic report script generation."
        },
        "beforePageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates if whether report footer is displayed on the before pages of the report  ('1') or not ('0')."
        },
        "beforePageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the before page of the report  ('1') or not ('0')."
        },
        "beforePageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'before' page of a report."
        },
        "businessNatureE" : {
          "type" : "string",
          "description" : "Indicates the business nature of the report.",
          "enum" : [ "Financial", "Portfolio Audit", "Client Audit", "Questionnaire", "Financial Plan", "Other" ]
        },
        "className" : {
          "type" : "string",
          "description" : "This is a technical field. It represents the class name of the report (executable) to instantiate on the report servers. It allows for differentiating between the Triple'A code of a report and a possible different class name. Hence, it permits defining two different Triple'A Plus reports but using the same executable on the server."
        },
        "code" : {
          "type" : "string",
          "description" : "Name of an occurrence."
        },
        "defaultDomainF" : {
          "type" : "boolean",
          "description" : "Indicates whether all domain parameters are communicated to the external application."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is used mainly for reporting purpose. It is used as default when no denomination has been associated to an occurrence in the required language."
        },
        "extApplE" : {
          "type" : "string",
          "description" : "External application identifier.",
          "enum" : [ "<None>", "Visual Basic for Applications", "Seagate Crystal Reports" ]
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with german translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with english translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with french translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the web packaging."
        },
        "footerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the footer of a report."
        },
        "headerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the header of a report."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastGenD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last automatic generation of the SQR script associated to a report."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the technical nature of a report. It is used by the different frameworks to correctly manage the report execution.",
          "enum" : [ "<None>", "External", "Actuate e.Report", "FDX", "Actuate e.Spreadsheet" ]
        },
        "orientationF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report will be printed in a landscape (0) or portrait (1) orientation.\r\nThe default orientation is landscape."
        },
        "tocFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the table of content pages ('1') or not ('0')."
        },
        "tocHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the table of content pages ('1') or not ('0')."
        }
      }
    },
    "createUserReportSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserReportWithPermValues"
        }
      }
    },
    "createUserSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserWithPermValues"
        }
      }
    },
    "createfuncSecurityProfComposInput" : {
      "type" : "object",
      "required" : [ "createF", "deleteF", "funcSecuProfId", "functionName", "maxStatusE", "minStatusE", "realTimeF", "riskViewF", "securityLevelE", "subtypeName", "typeName", "updateF", "viewF", "visibleF" ],
      "properties" : {
        "asyncThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the number of portfolios from which the system will launch the function in asynchronous mode.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) only for financial functions with WUI asynchronous mechanism and with the minimum/maximum statuses set to Cancelled."
        },
        "createF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Create actions for the corresponding function. If not, it implies that the Create buttons or choices in the menus are 'disabled' for the user."
        },
        "deleteF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Delete actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user.\r\nParticular case for Update Fields Functions: delete_f indicates if a user can (value 0, checkbox unchecked) or cannot (value 1 checkbox checked) update operations that he created or modified previously."
        },
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "entityName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "executionThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt defines the number of portfolios from which the system will block the execution of the function.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function used in the WUI with the minimum/maximum statuses set to Cancelled."
        },
        "funcSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionProcName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular maximum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "maxStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the maxixum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "minStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular minimum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "minStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the minimum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "realTimeF" : {
          "type" : "boolean",
          "description" : "Not used."
        },
        "riskViewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has access to the Risk options when running a financial function from the domain window. If no access given, it implies that some buttons or choices in drop-down lists in the domain are 'disabled' for the user."
        },
        "securityLevelE" : {
          "type" : "string",
          "description" : "Not used.",
          "enum" : [ "Inherit", "No Secured" ]
        },
        "slicingThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt is used to improve system performances by slicing large requests on financial functions.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function with the minimum/maximum statuses set to Cancelled. Currently used for pre-computation jobs."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "typeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "updateF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Update actions for the corresponding function. If not, it implies that the Update buttons or choices in the menus are 'disabled' for the user."
        },
        "viewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible View actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user."
        },
        "visibleF" : {
          "type" : "boolean",
          "description" : "Normally, when disabling a function for a user, the entry in the menu is disabled (but still visible). This is managed by the fact that no Function Security Compo is present for the function.\r\nHowever, if a record is present in Function Security Compo with no rights at all and with the Visible flag set to 0, the menu entry disappears."
        }
      }
    },
    "createfuncSecurityProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FuncSecuProfCompoWithPermValues"
        }
      }
    },
    "getAnswerPermittedValueDefSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AnswerPermittedValueDef"
        }
      }
    },
    "getAnswerPermittedValueLabelSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AnswerPermittedValueLabel"
        }
      }
    },
    "getApplicationChannelProfileComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ApplChannelProfCompo"
        }
      }
    },
    "getApplicationChannelProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ChannelProfile"
        }
      }
    },
    "getBatchResultsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchBatchResult"
          }
        }
      }
    },
    "getDataProfileComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataProfCompo"
        }
      }
    },
    "getDataProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataProfile"
        }
      }
    },
    "getDataSecurityProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataSecuProf"
        }
      }
    },
    "getExtServiceProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExtServiceProfCompo"
        }
      }
    },
    "getExtServiceProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExtServiceProfile"
        }
      }
    },
    "getExternalServiceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExternalService"
        }
      }
    },
    "getFormatProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FormatProfCompo"
        }
      }
    },
    "getFormatProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FormatProfile"
        }
      }
    },
    "getFourEyesFieldsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Admin in Connect - View the current and proposed values for a user in Change Set",
          "items" : {
            "type" : "object",
            "properties" : {
              "currFuncSecProfile" : {
                "type" : "string",
                "description" : "Current value of the Function Security profile for the user"
              },
              "propScreenProfile" : {
                "type" : "string",
                "description" : "Proposed value of the Screen profile for the user"
              },
              "currDataSecProfile" : {
                "type" : "string",
                "description" : "Current value of the Data Security Profile for the user"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose (OData mandatory element)"
              },
              "propDataProfile" : {
                "type" : "string",
                "description" : "Proposed value of the Data profile for the user"
              },
              "formatProfile" : {
                "type" : "string",
                "description" : "Format profile of the user"
              },
              "propChannelProfile" : {
                "type" : "string",
                "description" : "Proposed value of the Channel profile for the user"
              },
              "userCode" : {
                "type" : "string",
                "description" : "User code"
              },
              "currScreenProfile" : {
                "type" : "string",
                "description" : "Current value of the Screen profile for the user"
              },
              "propFuncSecProfile" : {
                "type" : "string",
                "description" : "Proposed value of the Function Security profile for the user"
              },
              "currReportProfile" : {
                "type" : "string",
                "description" : "Current value of the Report Profile for the user"
              },
              "changeSetCode" : {
                "type" : "string",
                "description" : "Code of the changeSet"
              },
              "propDataSecProfile" : {
                "type" : "string",
                "description" : "Proposed value of the Data Security profile for the user"
              },
              "thirdPartyName" : {
                "type" : "string",
                "description" : "Third Party Name"
              },
              "managerCode" : {
                "type" : "string",
                "description" : "Manager Code"
              },
              "thirdPartyLang" : {
                "type" : "string",
                "description" : "Third Party Language"
              },
              "currDataProfile" : {
                "type" : "string",
                "description" : "Current value of the Data profile for the user"
              },
              "thirdPartyCode" : {
                "type" : "string",
                "description" : "Third Party Code"
              },
              "id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Id of the user"
              },
              "propReportProfile" : {
                "type" : "string",
                "description" : "Proposed value of the Report profile for the user"
              },
              "currChannelProfile" : {
                "type" : "string",
                "description" : "Current value of the Channel Profile for the user"
              }
            }
          }
        }
      }
    },
    "getFourEyesUsersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Administration in Connect - Users from draft & to validate - Change Set",
          "items" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "string",
                "description" : "User code"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Sequence number for technical purpose (OData mandatory element)"
              },
              "deleteRightF" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Right to cancel the user in working state"
              },
              "shAction" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Action code performed on the user"
              },
              "serverFilter" : {
                "type" : "boolean",
                "description" : "Server filter"
              },
              "shActionLabel" : {
                "type" : "string",
                "description" : "Action performed on the user"
              },
              "managerId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Manager Id of the user"
              },
              "thirdPartyId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Third Party id of the user"
              },
              "changeSetCode" : {
                "type" : "string",
                "description" : "Code of the changeSet"
              },
              "updateRightF" : {
                "type" : "boolean",
                "description" : "Right to Update"
              },
              "lastUpdate" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Last Update date of the user"
              },
              "name" : {
                "type" : "string",
                "description" : "User name"
              },
              "mainBusEntity" : {
                "type" : "string",
                "description" : "Main Business entity name"
              },
              "validateRight" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Right to Validate or Review"
              },
              "wfStatus" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Workflow status of the changeSet"
              }
            }
          }
        }
      }
    },
    "getFuncSecuProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FuncSecuProfile"
        }
      }
    },
    "getInvestmentProfileQuestionnaireSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InvestmentProfileQuestionnaire"
        }
      }
    },
    "getLoginHistorySuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LoginHistory"
          }
        }
      }
    },
    "getMiFIDQuestionnaireSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/MiFIDQuestionnaire"
        }
      }
    },
    "getNotificationDefinitionsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotifDefinition"
        }
      }
    },
    "getNotificationInstanceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotificationInstance"
        }
      }
    },
    "getNotificationRecipientSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotificationRecipient"
        }
      }
    },
    "getNotificationSubjectBodyDefinitionSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotifSubjectBodyDef"
        }
      }
    },
    "getParamSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Param"
        }
      }
    },
    "getQuestionnaireDefsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireDef"
        }
      }
    },
    "getQuestionnaireElementDefSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireElementDef"
        }
      }
    },
    "getQuestionnaireGenericAnswersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchQuestionnaireGenericAnswer"
          }
        }
      }
    },
    "getQuestionnaireHistoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireHisto"
        }
      }
    },
    "getReportProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ReportProfCompo"
        }
      }
    },
    "getReportProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ReportProfile"
        }
      }
    },
    "getScheduleDefinitionSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ScheduleDef"
        }
      }
    },
    "getScreenProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchScreenProfCompo"
          }
        }
      }
    },
    "getScreenProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ScreenProfile"
        }
      }
    },
    "getSearchProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchSearchProfCompo"
          }
        }
      }
    },
    "getSearchProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/SearchProfile"
        }
      }
    },
    "getTimeZoneSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/TimeZone"
        }
      }
    },
    "getUserPreferenceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserPreference"
        }
      }
    },
    "getUserReportSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserReport"
        }
      }
    },
    "getUserSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "modifyApplicationChannelProfileCompoInput" : {
      "type" : "object",
      "required" : [ "extServiceProfCode", "formatProfileCode", "funcSecuProfCode", "lastUserName", "reportProfileCode", "screenProfileCode", "searchProfileCode" ],
      "properties" : {
        "extServiceProfCode" : {
          "type" : "string",
          "description" : "References an External Service Profile."
        },
        "formatProfileCode" : {
          "type" : "string",
          "description" : "References a format profile."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "References a Function Security Profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "maxSessionN" : {
          "type" : "number",
          "description" : "Identifies the maximum number of simultaneous sessions for this channel in the profile."
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "References a Report Profile."
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "References a Screen Profile."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "References a Search Profile."
        },
        "sessionTimeoutSecN" : {
          "type" : "number",
          "description" : "Specifies the number of seconds after which a session, for this channel and profile, is deleted and the user will have to log in again."
        }
      }
    },
    "modifyApplicationChannelProfileCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ApplChannelProfCompoWithPermValues"
        }
      }
    },
    "modifyDataProfileComposInput" : {
      "type" : "object",
      "required" : [ "authDeleteF", "authUpdateF", "dataProfileId", "dataSecuProfCode", "dataSecuProfId" ],
      "properties" : {
        "authDeleteF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is authorised to delete occurrences in secured tables (1) or not (0).  If not, s/he only has the right to view and possibly update occurrences (see auth_update_f)."
        },
        "authUpdateF" : {
          "type" : "boolean",
          "description" : "Specifies if a user can update an occurrence in a secured table (1) or just view it (0)."
        },
        "dataProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_profile table. This reference points to the data profile which is composed of several records of the data profile composition."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This mandatory field is part of the business key of the Data Profile Composition.\r\nIt references an occurrence in the data_secu_prof table. This reference points to the data security profile that composes the data profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "modifyDataProfileComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataProfCompoWithPermValues"
        }
      }
    },
    "modifyDataProfileInput" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "modifyDataProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataProfileWithPermValues"
        }
      }
    },
    "modifyDataSecurityProfileInput" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        }
      }
    },
    "modifyDataSecurityProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/DataSecuProfWithPermValues"
        }
      }
    },
    "searchApplicationChannelProfileComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchApplChannelProfCompo"
          }
        }
      }
    },
    "searchApplicationSessionHistoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchApplSessionHisto"
          }
        }
      }
    },
    "searchDataProfileComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchDataProfCompo"
          }
        }
      }
    },
    "searchExtServiceProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchExtServiceProfCompo"
          }
        }
      }
    },
    "searchFuncSecuProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchFuncSecuProfCompo"
          }
        }
      }
    },
    "searchNotificationSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchNotificationRecipient"
          }
        }
      }
    },
    "searchQuestionnaireHistoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchQuestionnaireHisto"
          }
        }
      }
    },
    "searchReportProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SearchReportProfCompo"
          }
        }
      }
    },
    "selUserPreferenceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserPreference"
          }
        }
      }
    },
    "startGenericQuestionnaireSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireHisto"
        }
      }
    },
    "updateAnswerPermittedValueDefInput" : {
      "type" : "object",
      "required" : [ "defValueF", "name", "navigationSpecificityE", "permValNatN", "questionnaireElementDefCode", "questionnaireElementDefId", "questionnaireElementDefQuestionnaireDefCode", "rankN" ],
      "properties" : {
        "defValueF" : {
          "type" : "boolean",
          "description" : "This attribute defines if the answer permitted value of a Multiple-Choice question is considered as the default answer. This attribute is used during the generation and assessment of dynamic questionnaires in conjunction with Questionnaire Element Definition def_value_e attribute."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a description of the answer permitted value."
        },
        "navigationSpecificityE" : {
          "type" : "boolean",
          "description" : "This attribute permit defining some limited navigation specificity for dynamic questionnaire."
        },
        "permValNatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The answer permitted value itself. This value is always numeric."
        },
        "questionnaireElementDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "questionnaireElementDefQuestionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire element definition."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the display order of the answer permitted value."
        },
        "scoreN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute defines the score of an answer. It will be used to compute the questionnaire scoring based on answered questions."
        }
      }
    },
    "updateAnswerPermittedValueDefSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AnswerPermittedValueDefWithPermValues"
        }
      }
    },
    "updateAnswerPermittedValueLabelInput" : {
      "type" : "object",
      "required" : [ "answerPermittedValueDefId", "denom", "languageCode" ],
      "properties" : {
        "answerPermittedValueDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the answer permitted value."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a denomination of the answer permitted value label."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a reference to the language entity. Specifies the language of the label."
        }
      }
    },
    "updateAnswerPermittedValueLabelSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/AnswerPermittedValueLabelWithPermValues"
        }
      }
    },
    "updateExtServiceProfCompoInput" : {
      "type" : "object",
      "required" : [ "extServiceProfId", "externalServiceCode", "externalServiceId", "functionName", "natureE", "rankN" ],
      "properties" : {
        "extServiceProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service profile to which an external service is linked."
        },
        "externalServiceCode" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceDenom" : {
          "type" : "string",
          "description" : "References an external service that is associated with an external service profile."
        },
        "externalServiceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "References an external service that is associated with an external service profile."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "For the Financial Function nature, this references a function that is associated with an external service profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the external service.",
          "enum" : [ "Risk Check", "Lombard Check", "Financial Function", "Buying Power" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the call order of the external services."
        }
      }
    },
    "updateExtServiceProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExtServiceProfCompoWithPermValues"
        }
      }
    },
    "updateExtServiceProfileInput" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all IDs in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "updateExtServiceProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExtServiceProfileWithPermValues"
        }
      }
    },
    "updateExternalServiceInput" : {
      "type" : "object",
      "required" : [ "natureE" ],
      "properties" : {
        "denom" : {
          "type" : "string",
          "description" : "Provides the denomination of this occurrence."
        },
        "folderName" : {
          "type" : "string",
          "description" : "Not used"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides the name of this occurrence."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Nature of an occurrence.",
          "enum" : [ "None", "Risk", "Lombard", "Search", "Buying Power" ]
        },
        "timeoutT" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the timeout in second used to abort the synchronous call to this external service."
        },
        "urlAddress" : {
          "type" : "string",
          "description" : "Provides the URL address used to call the external service adapter."
        }
      }
    },
    "updateExternalServiceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ExternalServiceWithPermValues"
        }
      }
    },
    "updateFormatProfComposInput" : {
      "type" : "object",
      "required" : [ "defaultF", "formatFunctionName", "formatId", "formatNatureE", "formatProfileId", "rankN", "refFormatCode" ],
      "properties" : {
        "defaultF" : {
          "type" : "boolean",
          "description" : "Indicates whether the format is a default format. If that is the case, this particular format will be displayed first when opening the window. There should be one default per functionnality (i.e. valorisation, operation history, cash & liquidity, performance measurments,...). (Not yet implemented)."
        },
        "formatDenom" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatEntityName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatFunctionName" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "formatNatureE" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence.",
          "enum" : [ "Domain", "Detailed List", "Summary List", "Graphic", "Matrix", "Report", "Table", "Zoom", "Edit List", "Dynamic List", "Export Interface", "TSL Post Processing SQL", "Persisted Data", "Search Data", "Subscription", "Enrichment of the subscription" ]
        },
        "formatProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Indicates the order in which the various formats are presented in the menus and icon bar of a 'financial function'."
        },
        "refFormatCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "refFormatId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        }
      }
    },
    "updateFormatProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FormatProfCompoWithPermValues"
        }
      }
    },
    "updateFormatProfileInput" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "updateFormatProfileSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FormatProfileWithPermValues"
        }
      }
    },
    "updateFuncSecuProfCompoInput" : {
      "type" : "object",
      "required" : [ "createF", "deleteF", "funcSecuProfId", "functionName", "maxStatusE", "minStatusE", "realTimeF", "riskViewF", "securityLevelE", "subtypeName", "typeName", "updateF", "viewF", "visibleF" ],
      "properties" : {
        "asyncThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Defines the number of portfolios from which the system will launch the function in asynchronous mode.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) only for financial functions with WUI asynchronous mechanism and with the minimum/maximum statuses set to Cancelled."
        },
        "createF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Create actions for the corresponding function. If not, it implies that the Create buttons or choices in the menus are 'disabled' for the user."
        },
        "deleteF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Delete actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user.\r\nParticular case for Update Fields Functions: delete_f indicates if a user can (value 0, checkbox unchecked) or cannot (value 1 checkbox checked) update operations that he created or modified previously."
        },
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "entityName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function, optional reference to a particular entity for which edit rights may be different from the other entitites."
        },
        "executionThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt defines the number of portfolios from which the system will block the execution of the function.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function used in the WUI with the minimum/maximum statuses set to Cancelled."
        },
        "funcSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function security profile to which a function is linked."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "functionProcName" : {
          "type" : "string",
          "description" : "Reference to a function that is associated to a function security profile."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "maxStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular maximum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "maxStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the maxixum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "minStatusE" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular minimum status range for which edit rights may be different from the other states.",
          "enum" : [ "Cancelled", "Expired", "Validation Rejected", "Rejected", "Simulation", "To Validate", "To Group", "To Send", "Sent", "Received", "Cancellation To Send", "Cancellation Sent", "Cancellation Received", "Cancellation Placed", "Placed", "Partially Executed", "Executed", "External Position", "Accounted", "Post Accounted" ]
        },
        "minStatusParam" : {
          "type" : "string",
          "description" : "Technical field not visible in the GUI to store the minimum status related parameter (parameter SYS_OPSTATUS_XXX). Used to manage import/export of function security profile compositions."
        },
        "realTimeF" : {
          "type" : "boolean",
          "description" : "Not used."
        },
        "riskViewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has access to the Risk options when running a financial function from the domain window. If no access given, it implies that some buttons or choices in drop-down lists in the domain are 'disabled' for the user."
        },
        "securityLevelE" : {
          "type" : "string",
          "description" : "Not used.",
          "enum" : [ "Inherit", "No Secured" ]
        },
        "slicingThresholdN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute is used only for the Web packaging.\r\n\r\nIt is used to improve system performances by slicing large requests on financial functions.\r\n\r\nIt must be defined in function security profile composition (func_secu_prof_compo) for each function with the minimum/maximum statuses set to Cancelled. Currently used for pre-computation jobs."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular sub-type for which edit rights may be different from the other types."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "typeName" : {
          "type" : "string",
          "description" : "In case of the 'Administration' function on the 'operation' entity (or any specific nature of operation), optional reference to a particular type for which edit rights may be different from the other types."
        },
        "updateF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible Update actions for the corresponding function. If not, it implies that the Update buttons or choices in the menus are 'disabled' for the user."
        },
        "viewF" : {
          "type" : "boolean",
          "description" : "Indicates whether the user has an access to the possible View actions for the corresponding function. If not, it implies that the Delete buttons or choices in the menus are 'disabled' for the user."
        },
        "visibleF" : {
          "type" : "boolean",
          "description" : "Normally, when disabling a function for a user, the entry in the menu is disabled (but still visible). This is managed by the fact that no Function Security Compo is present for the function.\r\nHowever, if a record is present in Function Security Compo with no rights at all and with the Visible flag set to 0, the menu entry disappears."
        }
      }
    },
    "updateFuncSecuProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FuncSecuProfCompoWithPermValues"
        }
      }
    },
    "updateFuncSecuProfilesInput" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "updateFuncSecuProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/FuncSecuProfileWithPermValues"
        }
      }
    },
    "updateInvestmentProfileQuestionnaireInput" : {
      "type" : "object",
      "required" : [ "ageCategory", "financialNeeds", "incomeExpectation", "investmentKnowledge", "investmentObjective", "investmentPeriod", "marketFallBehaviour", "maxLossToleranceCapacity", "profileDescription", "proposedStrategyCode", "proposedStrategyName", "selectedStrategyCode", "selectedStrategyName" ],
      "properties" : {
        "ageCategory" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the age category.",
          "enum" : [ "NOTDEFINED", "18_TO_BELOW_30", "30_TO_BELOW_40", "40_TO_BELOW_50", "50_TO_BELOW_60", "60_AND_ABOVE" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Investment Profile questionnaire.\r\nElement of nature comment."
        },
        "financialNeeds" : {
          "type" : "string",
          "description" : "Provides a question relative to the financial needs.",
          "enum" : [ "NOTDEFINED", "VERY_EASILY", "EASILY", "DIFFICULT", "VERY_DIFFICULT" ]
        },
        "generalDescription" : {
          "type" : "string",
          "description" : "Provides a general description of the Investment Profile questionnaire. (This is not used.)"
        },
        "incomeExpectation" : {
          "type" : "string",
          "description" : "Provides the question that is relative to the income expectations.",
          "enum" : [ "NOTDEFINED", "RISE_WELL_AHEAD_OF_INFLATION", "KEEP_PACE_WITH_INFLATION", "FALL", "FLUCTUATE_FROM_YEAR_TO_YEAR" ]
        },
        "investmentKnowledge" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of investments.",
          "enum" : [ "NOTDEFINED", "NONE", "LIMITED", "GOOD", "EXTENSIVE" ]
        },
        "investmentObjective" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the primary objective for investing.",
          "enum" : [ "NOTDEFINED", "CAPITAL_PRESERVATION", "INCOME_STREAM", "STEADY_CAPITAL_APPRECIATION", "HIGH_CAPITAL_APPRECIATION" ]
        },
        "investmentPeriod" : {
          "type" : "string",
          "description" : "Provides the investment period.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_YEARS", "BETWEEN_3_AND_5_YEARS", "BETWEEN_5_AND_10_YEARS", "10_YEARS_AND_ABOVE" ]
        },
        "marketFallBehaviour" : {
          "type" : "string",
          "description" : "Provides a question relative to behaviour when the market falls.",
          "enum" : [ "NOTDEFINED", "ACCEPT_MINIMAL_DECLINES", "ACCEPT_SOME_DECLINES", "ACCEPT_MODERATE_DECLINES", "TAKE_LOSSES_AND_LARGE_FLUCT" ]
        },
        "maxLossToleranceCapacity" : {
          "type" : "string",
          "description" : "Provides a question relative to the maximum loss tolerance.",
          "enum" : [ "NOTDEFINED", "LESS_THAN_3_PERCENT", "BETWEEN_3_AND_10", "BETWEEN_10_AND_20", "BETWEEN_20_AND_25", "OVER_25_PERCENT" ]
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Investment Profile questionnaire. Used by input controls to identify which answers need to be checked. This is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Investment Profile questionnaire."
        },
        "profileDescription" : {
          "type" : "string",
          "description" : "Based on the score of the questionnaire, the system will define the Investment Profile. This Investment Profile is used to determine the best strategy to propose for future investments.",
          "enum" : [ "NOTDEFINED", "SECURE", "CONSERVATIVE", "BALANCED", "ACTIVE", "DYNAMIC" ]
        },
        "proposedStrategyCode" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "proposedStrategyName" : {
          "type" : "string",
          "description" : "Proposes the best investment strategy associated to the profile, based on the score of the questionnaire."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the investment profile questionnaire report generated after the questionnaire is completed or under review."
        },
        "riskToleranceDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about risk tolerance."
        },
        "score" : {
          "type" : "number",
          "description" : "Determines the score of the Investment Profile questionnaire calculated from the answers provided."
        },
        "selectedStrategyCode" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyInvProfRiskLevelN" : {
          "type" : "number",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "selectedStrategyName" : {
          "type" : "string",
          "description" : "Provides the investment strategy selected after the questionnaire is completed."
        },
        "timeHorizonDescription" : {
          "type" : "string",
          "description" : "Describes the goal of answering the questions about time horizon."
        }
      }
    },
    "updateInvestmentProfileQuestionnaireSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/InvestmentProfileQuestionnaireWithPermValues"
        }
      }
    },
    "updateMiFIDQuestionnaireInput" : {
      "type" : "object",
      "required" : [ "bestExecutionPolicy", "classification", "educationLevel", "knowComplexInstruments", "knowExpCommodityDerivatives", "knowExpCreditDerivatives", "knowExpCurrencyDerivatives", "knowExpEcoStatDerivatives", "knowExpIndexDerivatives", "knowExpInterestDerivatives", "knowExpOtherComplexInstr", "knowExpSecurityDerivatives", "languageCode", "residenceCountryCode", "riskCountryCode", "taxCountryCode" ],
      "properties" : {
        "bestExecutionPolicy" : {
          "type" : "string",
          "description" : "Provides a question relative to the best execution policy document.",
          "enum" : [ "NOT_DEFINED", "NOT_SIGNED", "SIGNED", "PENDING", "MISSING" ]
        },
        "classification" : {
          "type" : "string",
          "description" : "Provides a question relative to the classification of the client.",
          "enum" : [ "NONE", "RETAIL", "PROFESSIONNAL_PER_SE", "PROFESSIONNAL_ON_REQUEST", "ELIGIBLE_COUNTERPARTY", "INSTITUTIONAL" ]
        },
        "description" : {
          "type" : "string",
          "description" : "Provides a description of the goal of the Suitability and Appropriateness questionnaire.\r\nElement of nature comment."
        },
        "educationLevel" : {
          "type" : "string",
          "description" : "Provides a question relative to the client's education level.",
          "enum" : [ "NONE", "NOT_DEFINED", "HIGH_SCHOOL", "GRADUATE", "POST_GRADUATE" ]
        },
        "knowComplexInstruments" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of complex instruments.",
          "enum" : [ "KNOW_COMPLEX_INSTR_NOT_DEF", "KNOW_COMPLEX_INSTR_YES", "KNOW_COMPLEX_INSTR_NO" ]
        },
        "knowExpCommodityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of commodity derivatives.",
          "enum" : [ "KNOW_EXP_COM_DERIV_NOT_DEF", "KNOW_EXP_COM_DERIV_YES", "KNOW_EXP_COM_DERIV_NO" ]
        },
        "knowExpCreditDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of credit derivatives.",
          "enum" : [ "KNOW_EXP_CRED_DERIV_NOT_DEF", "KNOW_EXP_CRED_DERIV_YES", "KNOW_EXP_CRED_DERIV_NO" ]
        },
        "knowExpCurrencyDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to currency derivatives.",
          "enum" : [ "KNOW_EXP_CURR_DERIV_NOT_DEF", "KNOW_EXP_CURR_DERIV_YES", "KNOW_EXP_CURR_DERIV_NO" ]
        },
        "knowExpEcoStatDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of economic statistics derivatives.",
          "enum" : [ "KNOW_ECO_STAT_DERIV_NOT_DEF", "KNOW_ECO_STAT_DERIV_YES", "KNOW_ECO_STAT_DERIV_NO" ]
        },
        "knowExpIndexDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to index derivatives.",
          "enum" : [ "KNOW_EXP_IND_DERIV_NOT_DEF", "KNOW_EXP_IND_DERIV_YES", "KNOW_EXP_IND_DERIV_NO" ]
        },
        "knowExpInterestDerivatives" : {
          "type" : "string",
          "description" : "Provides a question relative to the knowledge of interest derivatives.",
          "enum" : [ "KNOW_EXP_INT_DERIV_NOT_DEF", "KNOW_EXP_INT_DERIV_YES", "KNOW_EXP_INT_DERIV_NO" ]
        },
        "knowExpOtherComplexInstr" : {
          "type" : "string",
          "description" : "Provides a question relative to knowledge of other complex instruments.",
          "enum" : [ "KNOW_EXP_OTHER_INST_NOT_DEF", "KNOW_EXP_OTHER_INST_YES", "KNOW_EXP_OTHER_INST_NO" ]
        },
        "knowExpSecurityDerivatives" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the knowledge on security derivatives.",
          "enum" : [ "KNOW_EXP_SECU_DERIV_NOT_DEF", "KNOW_EXP_SECU_DERIV_YES", "KNOW_EXP_SECU_DERIV_NO" ]
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the language of the client. Reference to the language entity."
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides the current page of the Suitability and Appropriateness questionnaire. Used by input controls to identify which answers need to be checked. It is a technical element."
        },
        "percentCompletion" : {
          "type" : "number",
          "description" : "Provides the current percentage of completion of the Suitability and Appropriateness questionnaire."
        },
        "questionnaireHistoId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire history."
        },
        "reportDomainId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides the suitability & appropriateness questionnaire report generated after the questionnaire is completed or under review."
        },
        "residenceCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the residence country of the client. Reference to geographic entity."
        },
        "riskCountryCode" : {
          "type" : "string",
          "description" : "Provides a question relative to the risk country of the client. Reference to geographic entity."
        },
        "taxCountryCode" : {
          "type" : "string",
          "description" : "Provides a question that is relative to the tax country of the client. Reference to geographic entity."
        }
      }
    },
    "updateMiFIDQuestionnaireSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/MiFIDQuestionnaireWithPermValues"
        }
      }
    },
    "updateNotificationDefinitionsInput" : {
      "type" : "object",
      "required" : [ "creationD", "creationUserCode", "creationUserId", "notifImportanceE", "notifNatureE", "notifPriorityE" ],
      "properties" : {
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the occurence."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the user who created the occurence."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "The importance. Each notification can communicate its importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The Priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL pattern to be launched when following up on the notification. \r\nSince this URL is often not static, but contains an ID of the object the notification was related to, it is possible to inject placehholders, which are replaced during the creation of the notification instance based on the notification definition."
        }
      }
    },
    "updateNotificationDefinitionsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotifDefinitionWithPermValues"
        }
      }
    },
    "updateNotificationInstanceInput" : {
      "type" : "object",
      "required" : [ "confirmedDraftF", "creationD", "creationUserCode", "draftF", "linkedNotifInstanceCode", "linkedNotifType", "notifDefinitionCode", "notifImportanceE", "notifNatureE", "notifPriorityE", "originE", "portfolioCode", "thirdPartyCode" ],
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body of the message. This field is only used if the notification instance is a user message."
        },
        "confirmedDraftF" : {
          "type" : "boolean",
          "description" : "If the notification instance is a user message, this field defines whether the user confirmed that the message is a draft. Messages that have this flag set to 1 are displayed in the list of draft messages."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The creation date/time of the instance."
        },
        "creationUserCode" : {
          "type" : "string",
          "description" : "The id of the user who created the notification instance."
        },
        "draftF" : {
          "type" : "boolean",
          "description" : "If this notification instance is a user message, then this field defines whether the message is a technical draft or not. \r\n\r\nA technical draft message is a message that has been created by the user but has not yet been sent. This is a transitional state, which should only last for a couple of minutes. \r\n\r\nWhen finished with the edition of the message, the user will either send it (which will reset the draft_f) or confirm the message to be a draft (which will set the flag confirmed_draft_f)."
        },
        "externalReferenceC" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For objects that do not exist in Triple A core, this is an external reference, usually coded as URI."
        },
        "forwardRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to forward this message or not."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "linkedNotifInstanceBodyC" : {
          "type" : "string",
          "description" : "The body of the message that was replied to/forwarded from. This field is only used if the notification instance is a user message."
        },
        "linkedNotifInstanceCode" : {
          "type" : "string",
          "description" : "Notif instance Code of the message that was replied to/forwarded from."
        },
        "linkedNotifInstanceSubjectC" : {
          "type" : "string",
          "description" : "The subject of a user message  that was replied to/forwarded from. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "linkedNotifType" : {
          "type" : "string",
          "description" : "If this notification instance is a message and it is linked to another message pointed to by notif_instance_id, this field defines whether the message is a reply or a forward.",
          "enum" : [ "None", "Reply", "Forward" ]
        },
        "notifDefinitionCode" : {
          "type" : "string",
          "description" : "The code of the notification definition, if the notification instance is based on a definition."
        },
        "notifImportanceE" : {
          "type" : "string",
          "description" : "Notification importance.",
          "enum" : [ "None", "Success", "Failure", "Information", "Warning", "Error" ]
        },
        "notifNatureE" : {
          "type" : "string",
          "description" : "The notification nature.",
          "enum" : [ "None", "Alert", "Report", "Task Assignment", "Task Reminder", "Task Creation", "Contact Creation", "Alert Processing", "User Message" ]
        },
        "notifPriorityE" : {
          "type" : "string",
          "description" : "The notification priority.",
          "enum" : [ "None", "Low", "Medium", "High" ]
        },
        "originE" : {
          "type" : "string",
          "description" : "The notification instance origin. If 0 or null, the instance was sent by the system. If 1, the notification instance was sent by a user and is in fact a user message.",
          "enum" : [ "System", "User" ]
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a portfolio."
        },
        "replyRightF" : {
          "type" : "boolean",
          "description" : "Not used.\r\n\r\nA calculated field that defines whether the user has the right to reply to this message or not."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject of a user message. Only used for notification instances that are user messages (origin_e = 1)."
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Each notification instance can be linked to one or more objects. For instance a third party."
        },
        "urlC" : {
          "type" : "string",
          "description" : "The URL that should be launched when following up on the notification. \r\nEach notification provides a textual information to the user on the event/situation that caused its sending. The user then in most cases is provided a link that redirects him to the location within the software user interface that was at the origin of the notification."
        }
      }
    },
    "updateNotificationInstanceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotificationInstanceWithPermValues"
        }
      }
    },
    "updateNotificationRecipientInput" : {
      "type" : "object",
      "required" : [ "deletedF", "isReadF", "sentDeletedF", "sentOnD" ],
      "properties" : {
        "deletedF" : {
          "type" : "string",
          "description" : "Logical delete flag. Defines whether this recipient record has been logically deleted or not.\r\n\r\nLogically deleted notification recipient records are no longer displayed to the recipient.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "isReadF" : {
          "type" : "string",
          "description" : "A read status flag. Indicates whether the notification instance has been read by the user.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "sentDeletedF" : {
          "type" : "string",
          "description" : "Sent_deleted_f is used to indicate whether the sent items is deleted or not.\r\nif the value is 1 - sent item is deleted.\r\nif value is 0 - sent item is not deleted.",
          "enum" : [ "FALSE", "TRUE" ]
        },
        "sentOnD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the notification was sent to the user."
        }
      }
    },
    "updateNotificationRecipientSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotificationRecipientWithPermValues"
        }
      }
    },
    "updateNotificationSubjectBodyDefinitionInput" : {
      "type" : "object",
      "properties" : {
        "bodyC" : {
          "type" : "string",
          "description" : "The body, that is the full textual description of the notification. This text can been entered as RTF text on the Web User Interface."
        },
        "subjectC" : {
          "type" : "string",
          "description" : "The subject."
        }
      }
    },
    "updateNotificationSubjectBodyDefinitionSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/NotifSubjectBodyDefWithPermValues"
        }
      }
    },
    "updateQuestionnaireDefsInput" : {
      "type" : "object",
      "required" : [ "categoryE", "creationUserName", "dataSecuProf2Code", "dataSecuProfCode", "deleteRightF", "lastUserName", "natureE", "scoringNatureE", "statusE", "updateRightF", "validationUserName" ],
      "properties" : {
        "beginD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition starts to be valid."
        },
        "categoryE" : {
          "type" : "string",
          "description" : "-",
          "enum" : [ "Static", "Dynamic", "Library" ]
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the creation date of the questionnaire definition."
        },
        "creationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "creationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who created the questionnaire definition."
        },
        "dataSecuProf2Code" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This is an optional reference that is used to control Triple'A Plus Web third-party access to the instrument."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Provides a reference to the security profile to which the occurrence belongs. This mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean",
          "description" : "The delete right defines whether the current user has the right to delete this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire definition denomination that is not necessarily unique. This field is optional."
        },
        "endD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date on which the questionnaire definition is no longer valid. The end date is not automatically managed."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastUserId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastUserName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "description" : "Provides questionnaire definition name that is not necessarily unique."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Allows for the characterization of different natures of questionnaire definition. This field is mandatory.",
          "enum" : [ "None", "Client Profile", "Investment Profile", "Financial Profile", "Risk Profile", "Legal Profile", "Financial Plan", "Investment Plan", "Savings Plan", "Retirement Plan", "Education Plan", "Life Insurance Plan", "Tax Plan" ]
        },
        "revisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The revision is a global technical number identifying questionnaires. In conjunction with the parent revision, it permits understanding the questionnaires revision tree."
        },
        "scoringNatureE" : {
          "type" : "string",
          "description" : "This attribute permits defining the scoring nature of a questionnaire. It has no impact on static questionnaires and are principally used for dynamic questionnaire.",
          "enum" : [ "None", "Sum", "Custom" ]
        },
        "statusE" : {
          "type" : "string",
          "description" : "Defines the status of the questionnaire definition. This field is mandatory.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Waiting Business Validation", "Waiting Technical Completion", "Waiting Testing", "Validated", "Rejected", "Active", "Suspended", "Deprecated", "Expired" ]
        },
        "typeExtDenomination" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the type of questionnaire definition. This field is optional."
        },
        "updateRightF" : {
          "type" : "boolean",
          "description" : "The update right defines whether the current user has the right to update this questionnaire definition occurrence. It is defined by the value set in the data profile compo."
        },
        "validationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides the date of validation of the questionnaire definition."
        },
        "validationUserId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "validationUserName" : {
          "type" : "string",
          "description" : "Provides a reference to the user who validated the questionnaire definition."
        },
        "versionN" : {
          "type" : "number",
          "description" : "Provides the version number of the questionnaire definition. This field is optional."
        }
      }
    },
    "updateQuestionnaireDefsSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireDefWithPermValues"
        }
      }
    },
    "updateQuestionnaireElementDefInput" : {
      "type" : "object",
      "required" : [ "answerDatatypeSqlnameC", "defValueE", "mandatoryF", "natureE", "questionnaireDefCode", "questionnaireDefId", "questionnaireSectionDefId", "questionnaireSectionDefNatureE", "typeCode" ],
      "properties" : {
        "answerDatatypeSqlnameC" : {
          "type" : "string",
          "description" : "Provides a reference to the datatype of the answer linked to the questionnaire element."
        },
        "creationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Provides a creation date of the questionnaire element."
        },
        "defValueE" : {
          "type" : "string",
          "description" : "This attribute permit defining questions default value rule. It is used during the generation and assessment of dynamic questionnaires and is only applicable for Multiple-Choice questions.",
          "enum" : [ "None", "Inherit", "Fixed", "Initial and inherit", "Custom" ]
        },
        "denom" : {
          "type" : "string",
          "description" : "Provides a questionnaire element denomination that is not necessarily unique. This field is optional."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mandatoryF" : {
          "type" : "boolean",
          "description" : "Defines whether the questionnaire element is mandatory or not. This field is mandatory."
        },
        "name" : {
          "type" : "string",
          "description" : "Provides a questionnaire element name that is not necessarily unique. This field is mandatory."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of the questionnaire element. This field is mandatory.",
          "enum" : [ "Question", "Score", "Comment", "Technical", "Virtual" ]
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition. This field is mandatory."
        },
        "questionnaireSectionDefId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "questionnaireSectionDefNatureE" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory.",
          "enum" : [ "None", "Standard", "Summary", "Technical" ]
        },
        "questionnaireSectionDefRankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire section. This field is mandatory."
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the rank of the questionnaire element in the associated questionnaire section."
        },
        "typeCode" : {
          "type" : "string",
          "description" : "Provides a reference to the type of questionnaire element."
        }
      }
    },
    "updateQuestionnaireElementDefSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireElementDefWithPermValues"
        }
      }
    },
    "updateQuestionnaireGenericAnswersInput" : {
      "type" : "object",
      "required" : [ "isNullF", "valueFlag" ],
      "properties" : {
        "isNullF" : {
          "type" : "boolean",
          "description" : "This attribute defines if an answer has been defined (by the user or by a default value) or not. It helps avoiding displaying the question on summary pages or reporting document."
        },
        "valueDatetime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a datetime_t."
        },
        "valueEnum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enum_t."
        },
        "valueEnummask" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is an enummask_t."
        },
        "valueFlag" : {
          "type" : "boolean",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a flag_t"
        },
        "valueNumber" : {
          "type" : "number",
          "description" : "This attribute holds the answer value when its datatype (value_datatype_dict_id) is a number_t, amount_t or int_t."
        },
        "valueString" : {
          "type" : "string",
          "description" : "This attribute holds the answer reference to an object when its datatype (value_datatype_dict_id) is an info_t, note_t, string1000_t, string_2000_t, uni_info_t, uni_note_t, uni_string1000_t and uni_string2000_t."
        },
        "valueText" : {
          "type" : "string",
          "description" : "Not yet implemented."
        }
      }
    },
    "updateQuestionnaireGenericAnswersSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireGenericAnswerWithPermValues"
        }
      }
    },
    "updateQuestionnaireHistoInput" : {
      "type" : "object",
      "required" : [ "portfolioCode", "questionnaireDefCode", "statusE", "thirdPartyCode" ],
      "properties" : {
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "percentN" : {
          "type" : "number",
          "description" : "Provides the percentage of completion of the questionnaire history. Must be calculated by default value."
        },
        "portfolioCode" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "portfolioDenom" : {
          "type" : "string",
          "description" : "Provides a reference to the portfolio linked to the questionnaire history."
        },
        "questionnaireDefCode" : {
          "type" : "string",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "questionnaireDefRevisionN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Provides a reference to the questionnaire definition."
        },
        "scoreN" : {
          "type" : "number",
          "description" : "Provides a score of the questionnaire history. This field is optional. Based on the answers, it is possible to calculate a global score for a questionnaire."
        },
        "statusE" : {
          "type" : "string",
          "description" : "Provides the status of the questionnaire history. Once the status of the questionnaire history has been modified to \"Validated\", nothing can be updated on the questionnaire history except the status itself that can take the value \"Deprecated\".\r\n\r\nIf the status of the questionnaire history has been modified to \"Cancelled\", \"Rejected\", \"Deprecated\", or \"Expired\", nothing can be updated on the questionnaire history.",
          "enum" : [ "Cancelled", "In Progress", "To Validate", "Validated", "Rejected", "Deprecated", "Expired" ]
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "Provides a reference to the third-party linked to the questionnaire history."
        }
      }
    },
    "updateQuestionnaireHistoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/QuestionnaireHistoWithPermValues"
        }
      }
    },
    "updateReportProfComposInput" : {
      "type" : "object",
      "properties" : {
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "reportDenom" : {
          "type" : "string",
          "description" : "Reference to an occurrence in report."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in report."
        },
        "reportProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence in 'report profile'."
        }
      }
    },
    "updateReportProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ReportProfCompoWithPermValues"
        }
      }
    },
    "updateReportProfilesInput" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "updateReportProfilesSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ReportProfileWithPermValues"
        }
      }
    },
    "updateScheduleDefinitionInput" : {
      "type" : "object",
      "required" : [ "aprilF", "augustF", "dayOfWeekE", "decemberF", "februaryF", "frequencyE", "fridayF", "januaryF", "julyF", "juneF", "marchF", "mayF", "mondayF", "monthE", "novemberF", "object", "octoberF", "saturdayF", "septemberF", "sundayF", "thursdayF", "tuesdayF", "wednesdayF", "yearToDateF" ],
      "properties" : {
        "aprilF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "augustF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "dayOfMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "If execution frequency is monthly, defines the sole day within the month during which the process should be executed."
        },
        "dayOfWeekE" : {
          "type" : "string",
          "description" : "If execution frequency is monthly, defines the sole weekday during which the process should be executed.",
          "enum" : [ "None", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Last" ]
        },
        "decemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "endTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end time of execution. Used if a process should be executed every <n> minutes, with a start and stop time, for the days defined by the frequency."
        },
        "expirationD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expiration date of the schedule, after the schedule will not be executed anymore."
        },
        "februaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "frequencyE" : {
          "type" : "string",
          "description" : "The frequency of the schedule.",
          "enum" : [ "Once", "Daily", "Weekly", "Monthly", "Annual" ]
        },
        "fridayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "januaryF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "julyF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "juneF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "marchF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "mondayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "monthE" : {
          "type" : "string",
          "description" : "If frequency set to yearly, used to define the month. Not used.",
          "enum" : [ "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
        },
        "novemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "object" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The object instance id of the entity type the schedule is related to. For instance the alert defintion id."
        },
        "octoberF" : {
          "type" : "boolean",
          "description" : "Yes."
        },
        "recurMinutesN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The recurrence. Defines for a recurring schedule, that it should be executed every <n> minutes."
        },
        "repeatN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Repeat n. Not used."
        },
        "saturdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "septemberF" : {
          "type" : "boolean",
          "description" : "If execution frequency is monthly, defines whether the related process should be executed during that month."
        },
        "startD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start date of the schedule. For a one time schedule, this is the sole date of execution."
        },
        "startTimeD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start time. For a one time schedule, this is the sole time of execution."
        },
        "sundayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "thursdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "tuesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "wednesdayF" : {
          "type" : "boolean",
          "description" : "If execution frequency is weekly, defines whether the related process should be executed during that weekday."
        },
        "yearToDateF" : {
          "type" : "boolean",
          "description" : "Manages the modification of the initial date of the report domain."
        }
      }
    },
    "updateScheduleDefinitionSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ScheduleDefWithPermValues"
        }
      }
    },
    "updateScreenProfCompoInput" : {
      "type" : "object",
      "required" : [ "functionName", "natureE", "rankN", "reportCode", "screenName", "screenProfileId", "subtypeCode", "subtypeName", "typeName" ],
      "properties" : {
        "entityDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "entityName" : {
          "type" : "string",
          "description" : "Reference to the entity for which a screen is attached in a screen profile.\r\nThis entity must necessarily be the same as the entity which characterises the screen itself."
        },
        "functionDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "functionName" : {
          "type" : "string",
          "description" : "Unique identifier of an occurrence. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity having a 'enum_t' datatype."
        },
        "natureE" : {
          "type" : "string",
          "description" : "Contains the nature value of the attribute specified in the nature attribute (nat_attrib_dict_id) belonging to the entity (entity_dict_id).",
          "enum" : [ "<None>" ]
        },
        "rankN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "From Triple'A ADVANTAGE R3.50 on,, you can define a rank at the Screen Prof Compo level that sorts the different User-Defined Screens belonging to the same context. The screens are sorted in ascending order (i.e. the screen with the lowest rank is displayed first, etc.). This lets you sort the operation input screens as you want, for example."
        },
        "reportCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of an occurrence."
        },
        "reportId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of an occurrence."
        },
        "screenDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenEntityName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenName" : {
          "type" : "string",
          "description" : "Reference to an occurrence of 'dict_screen' which charaterises the screen profile.\r\nThe entity of that screen must correspond to the 'entity' of the occurrence."
        },
        "screenProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the screen profile to which a screen profile composition necessarily belongs."
        },
        "subtypeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table and being a sub-type of the type attribute (i.e. the sub_type_id fields in the 'operation' and 'instrument' table)."
        },
        "subtypeCode" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "subtypeName" : {
          "type" : "string",
          "description" : "Reference to a particular sub-type if the 'Sub-Type attribute' is specified."
        },
        "typeAttribDict" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeAttribName" : {
          "type" : "string",
          "description" : "Reference to one of the attribute of the entity being a foreign key on the 'type' table."
        },
        "typeId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        },
        "typeName" : {
          "type" : "string",
          "description" : "Reference to a particular type if the 'type attribute' is specified."
        }
      }
    },
    "updateScreenProfCompoSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/ScreenProfCompoWithPermValues"
        }
      }
    },
    "updateSearchProfComposInput" : {
      "type" : "object",
      "required" : [ "fullSearchPossibilityF", "functionName", "searchCriteriaCode", "searchCriteriaId", "searchProfileCode", "searchProfileId" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "entityName" : {
          "type" : "string"
        },
        "fullSearchPossibilityF" : {
          "type" : "boolean",
          "description" : "When this flag is set to yes, it allows the user to perform a standard search in which all the criteria are disponibles. This check box takes priority over the Search Profile check box. If the value of the Search Profile flag is FALSE (check box cleared) and the Search Profile Composition check box is TRUE (selected), the latter is taken into account."
        },
        "functionName" : {
          "type" : "string"
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "searchCriteriaCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchCriteriaId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of a search criteria."
        },
        "searchProfileCode" : {
          "type" : "string",
          "description" : "Unique technical identifier of the parent search profile."
        },
        "searchProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique technical identifier of the parent search profile."
        }
      }
    },
    "updateSearchProfComposSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/SearchProfCompoWithPermValues"
        }
      }
    },
    "updateUserInput" : {
      "type" : "object",
      "required" : [ "activeF", "auditF", "batchUserF", "channelProfileCode", "dataProfileCode", "dataSecuProfCode", "dataSecuProfId", "funcSecuProfCode", "guiUserF", "hasDbLoginF", "languageCode", "mainBusinessEntityCode", "mainBusinessEntityName", "managerCode", "maxRunningGuiN", "name", "parentUserName", "remotingUserF", "reportProfileCode", "rightToRunF", "screenProfileCode", "securityAdminF", "superuserF", "systemUserF", "tascUserF", "thirdPartyCode", "thirdWuiProfileE", "wuiUserF" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Indicates whether the User is active or not. Mainly used for selection purposes."
        },
        "auditF" : {
          "type" : "boolean",
          "description" : "Specifies if the actions performed by the user are to be audited or not. Applies to the Sybase trigger based audit system. Please refer to the \"Audit Trail Functionality\" chapter in the \"System Management Guide\" for further details."
        },
        "batchUserF" : {
          "type" : "boolean",
          "description" : "Determines if user can access the application via batch processes"
        },
        "channelProfileCode" : {
          "type" : "string",
          "description" : "Identifier of the channel profile set for the user."
        },
        "channelProfileId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of the channel profile set for the user."
        },
        "dataProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Data Profile associated with a User. The Data Profile determines the data users can access. This only applies to entities for which data security is managed (portfolio, third party, etc.)."
        },
        "dataSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "dataSecuProfId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Reference to the security profile to which the occurrence belongs.\r\nThis mandatory reference controls user access to the occurrence."
        },
        "deleteRightF" : {
          "type" : "boolean"
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is mainly used for reporting purposes. It is used as the default when no denomination is associated with an occurrence in a particular language."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the user.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead. At least, if no denominations are available, the name is used.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Denomination in German.\r\nThis is the denomination of the user in German. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language German too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Denomination in English.\r\nThis is the denomination of the user in English. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language English too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Denomination in French.\r\nThis is the denomination of the user in French. It is automatically generated as the extended attribute \"ext_denomination\" is defined as multilanguage and the language French too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "It is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "funcSecuProfCode" : {
          "type" : "string",
          "description" : "Reference to the Function Security Profile associated with a User. The Function Security Profile determines which menu options and buttons in the Triple'A Graphical User Interface (GUI) are displayed to a particular user."
        },
        "guiContextT" : {
          "type" : "string",
          "description" : "The GUI Context field defines how the user is allowed to use the GUI. The information is read from the database when the user logs in and is saved when s/he quits the GUI. It contains TAGS delimited by square brackets ([ and ]) and also variables delimited by the equals sign (=).\r\n\r\nThe following TAGS are used:\r\n[MAIN]                : Main window\r\n[LOG]                 : Log window\r\n[FCT:valo]            : Specific property for one financial function (in this example, valo)\r\n[ENT:appl_param]      : Specific property for one entity (in this example, appl_param)\r\n\r\nThe following variables can be used:\r\nafter_save_mode       : Current save mode options, save and keep or copy or clear (MAIN)\r\ncopy_with_totals_f    : Value of option Copy to Clipboard with totals  (MAIN)\r\ncopy_formated_datas_f : Value of option Copy to Clipboard formatted data (MAIN)\r\nprint_with_code_f     : Value of option Print With Code (MAIN)\r\nextension             : Extension of a window (MAIN and FCT)\r\nfull_search_f         : Value is 1 if full search is activated for this entity (ENT)\r\nnature_e              : Last nature selected in a selection screen (ENT)\r\nmaximize_f            : value is 1 if a window is maximised (MAIN and FCT)\r\norigin                : Position of window (MAIN and FCT)\r\nsynonym_code          : code of the current codification (ENT)\r\nuse_screen_f          : if the value is 1, UD screens are used. Only for super-user (ENT)\r\nview_domain_f         : if the value is 1, if the domain information is shown in the financial window (FCT) \r\nview_toolbar_f        : if the value is 1, the tool bar is displayed in the financial window (FCT)"
        },
        "guiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a GUI or a BATCH user:\r\n0 = Batch user.\r\n1 = GUI user."
        },
        "hasDbLoginF" : {
          "type" : "boolean",
          "description" : "Indicates that a user has a Sybase login . In fact , when a user is linked to a manager , it means that it is used by the WUI , so a Sybase login is not necessary. \r\nThe Sybase login is only mandatory when the user is connected through the GUI."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity. \r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "languageCode" : {
          "type" : "string",
          "description" : "Unique identifier of a language. These values are fixed by OAMS and cannot be modified."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mainBusinessEntityCode" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "mainBusinessEntityName" : {
          "type" : "string",
          "description" : "References a business entity defined as the main business entity of the bank employee (represented by a Triple'A Plus Core user (record of the table appl_user)). Only one main business entity is allowed per bank employee. If the user defines another main business entity, then it automatically overrides the previous main business entity.\r\n\r\nRemarks:\r\nIf Triple'A Plus is plugged on the back-office system T24, it is recommended (for cohesion between the two systems) that the main business entity represents a record of the T24 application COMPANY.\r\n\r\nIf the main business entity represents a record of the T24 application COMPANY, it is recommended (for cohesion between the two systems) that it represents a master or a lead company.\r\n\r\nThe main business entity can also indirectly be defined on the bank employee through the business entity user composition (table bus_entity_user_compo) using the attribute Main Business Entity (main_bus_entity_f)."
        },
        "managerCode" : {
          "type" : "string",
          "description" : "Reference to a manager ID in the manager table.\r\nThe referenced manager is not updated when updating an appl_user. The following fields of a manager are not updated with the ones in appl_user :\r\n   - name,\r\n   - denom,\r\n   - language_dict_id,\r\n   - active_f,\r\n   - data_profile_id,\r\n   - data_secu_prof_id,\r\n   - report_profile_id."
        },
        "maxRunningGuiN" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies the maximum number of GUI sessions that the user is authorised to run simultaneously."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of an occurrence. This short name does not have to be unique."
        },
        "osUserC" : {
          "type" : "string",
          "description" : "User login for the current Operating System."
        },
        "parentUserName" : {
          "type" : "string",
          "description" : "Specifies the identifier of a parent user. If this optional field is completed, the child user inherits some of the properties of the parent user. Please refer to the \"System Management Guide\" for more details."
        },
        "remotingUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via the Remoting layer"
        },
        "reportProfileCode" : {
          "type" : "string",
          "description" : "Reference to the report profile associated with a user. When the user selects a report template, the list proposed corresponds to the Composition of the Report Profile associated with the user.\r\nThis reference is optional."
        },
        "resetD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Holds the date when the application user password gets reset."
        },
        "rightToRunF" : {
          "type" : "boolean",
          "description" : "Technical information used to assess the rights on the script functions like update fields, order grouping etc."
        },
        "roleE" : {
          "type" : "string",
          "description" : "Role of a user. Currently only used for TCIB",
          "enum" : [ "<None>", "Manager", "Advisory Client", "Discretionary Client" ]
        },
        "screenProfileCode" : {
          "type" : "string",
          "description" : "Reference to the Screen Profile associated with a User. The Screen Profile determines the user-defined screen data that is displayed for each Triple'A entity. This particularly applies to operations and instruments."
        },
        "securityAdminF" : {
          "type" : "boolean",
          "description" : "Specifies if a user has the right to administrate user access to the various secured tables (portfolio, third party, strategy, strategy_link, etc.).\r\nThis type of user has the exclusive right to:\r\n-   Administrate the 'Data Security Profile' table.\r\n-   Associate a 'Data Security Profile' with an occurrence in a secured table.\r\n-   Associate a set of 'Data Security Profiles' with an individual user."
        },
        "superuserF" : {
          "type" : "boolean",
          "description" : "Specifies if a user is a Super-user or not. Super-users have access to every function and occurrence in the Triple'A tables."
        },
        "systemUserF" : {
          "type" : "boolean",
          "description" : "references the database owner and the technical users ( tasclogin users ) \r\nfor thoses particulars users, you cannot remove the Sybase login."
        },
        "tascUserF" : {
          "type" : "boolean",
          "description" : "Determines if the user can access the application via TASC"
        },
        "thirdPartyCode" : {
          "type" : "string",
          "description" : "foreign key to third_party entity"
        },
        "thirdWuiProfileE" : {
          "type" : "string",
          "description" : "foreign key to third_party entity",
          "enum" : [ "Default", "Client", "Advisory Client", "Discretionary Client" ]
        },
        "updateRightF" : {
          "type" : "boolean"
        },
        "validityD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Validity date for the current password.\r\nValidity date is also checked during the linked manager or third authentication."
        },
        "wuiUserF" : {
          "type" : "boolean",
          "description" : "Specifies if the user is a WUI user.\r\nThe permitted values are:\r\n0 - No \r\n1 - Yes"
        }
      }
    },
    "updateUserPreferenceInput" : {
      "type" : "object",
      "required" : [ "natureE" ],
      "properties" : {
        "natureE" : {
          "type" : "string",
          "description" : "Specifies the nature of a user preference.\r\nThis field brings the capacity to classify parameters according to their purpose.",
          "enum" : [ "Region & Language", "Entity", "Function", "Table_Column", "Table_Sort_Order", "Color", "Domain", "Other" ]
        },
        "paramValue" : {
          "type" : "string",
          "description" : "The name of the preference."
        }
      }
    },
    "updateUserPreferenceSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserPreferenceWithPermValues"
        }
      }
    },
    "updateUserReportInput" : {
      "type" : "object",
      "required" : [ "afterPageFooterF", "afterPageHeaderF", "automaticGenF", "beforePageFooterF", "beforePageHeaderF", "businessNatureE", "className", "defaultDomainF", "extApplE", "natureE", "orientationF", "tocFooterF", "tocHeaderF" ],
      "properties" : {
        "afterPageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the after page of the report ('1') or not ('0')."
        },
        "afterPageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'after' page  of a report."
        },
        "automaticGenF" : {
          "type" : "boolean",
          "description" : "Flag indicating whethr the report can be generated automatically (1) or not (0).\r\nIf the report is generated automatically, it implies that the various scripts associated to the report may be overridden when using automatic report script generation."
        },
        "beforePageFooterF" : {
          "type" : "boolean",
          "description" : "Indicates if whether report footer is displayed on the before pages of the report  ('1') or not ('0')."
        },
        "beforePageHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the before page of the report  ('1') or not ('0')."
        },
        "beforePageNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the 'before' page of a report."
        },
        "businessNatureE" : {
          "type" : "string",
          "description" : "Indicates the business nature of the report.",
          "enum" : [ "Financial", "Portfolio Audit", "Client Audit", "Questionnaire", "Financial Plan", "Other" ]
        },
        "className" : {
          "type" : "string",
          "description" : "This is a technical field. It represents the class name of the report (executable) to instantiate on the report servers. It allows for differentiating between the Triple'A code of a report and a possible different class name. Hence, it permits defining two different Triple'A Plus reports but using the same executable on the server."
        },
        "defaultDomainF" : {
          "type" : "boolean",
          "description" : "Indicates whether all domain parameters are communicated to the external application."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of an occurrence. This long name is used mainly for reporting purpose. It is used as default when no denomination has been associated to an occurrence in the required language."
        },
        "extApplE" : {
          "type" : "string",
          "description" : "External application identifier.",
          "enum" : [ "<None>", "Visual Basic for Applications", "Seagate Crystal Reports" ]
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "It is an extended denomination that is used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationDe" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with german translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationEn" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with english translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extDenominationFr" : {
          "type" : "string",
          "description" : "Extended denomination precomputed with french translated denomination. Used by front-ends to access pre-computed denomination based on selected language."
        },
        "extSqlCalcD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Extended attribute that cannot be edited by the user but requires a data pre-computation (refer to the Triple'A Plus Web TSL Operating Guide).\r\n\r\nThis attribute is used only for the web packaging."
        },
        "footerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the footer of a report."
        },
        "headerNameC" : {
          "type" : "string",
          "description" : "Reference to the name of a file which contains the script for the header of a report."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "lastGenD" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date of the last automatic generation of the SQR script associated to a report."
        },
        "lastModifD" : {
          "type" : "string",
          "format" : "date-time"
        },
        "natureE" : {
          "type" : "string",
          "description" : "Indicates the technical nature of a report. It is used by the different frameworks to correctly manage the report execution.",
          "enum" : [ "<None>", "External", "Actuate e.Report", "FDX", "Actuate e.Spreadsheet" ]
        },
        "orientationF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report will be printed in a landscape (0) or portrait (1) orientation.\r\nThe default orientation is landscape."
        },
        "tocFooterF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report footer is displayed on the table of content pages ('1') or not ('0')."
        },
        "tocHeaderF" : {
          "type" : "boolean",
          "description" : "Indicates whether the report header is displayed on the table of content pages ('1') or not ('0')."
        }
      }
    },
    "updateUserReportSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserReportWithPermValues"
        }
      }
    },
    "updateUserSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/UserWithPermValues"
        }
      }
    }
  }
}