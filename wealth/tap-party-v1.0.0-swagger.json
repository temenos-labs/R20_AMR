{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1.0.0",
    "title" : "Party Enterprise API"
  },
  "basePath" : "/triplea/api/v1.0.0/party",
  "security" : [ {
    "tapBasicAuth" : [ ],
    "X-Channel" : [ ]
  } ],
  "paths" : {
    "/customers" : {
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Create Customer",
        "operationId" : "createCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/createCustomerInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createCustomerSuccessResponse"
            }
          },
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/createCustomerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/customers/{customerCode}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get a Customer",
        "operationId" : "getCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerCode",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getCustomerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Customers" ],
        "summary" : "Update Customer",
        "operationId" : "updateCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "complete_only",
          "in" : "query",
          "description" : "if true runs only the initials / default values(if interactiveToken is passed). Useful for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "if true,runs the initials / default values(if interactiveToken is passed) and input controls. Usefull for the interactive edition.The insert/update will be not executed.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "interactiveToken",
          "in" : "query",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only .",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "functionScreenCode",
          "in" : "query",
          "description" : "Force script evaluation with the specified screen.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerCode",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updateCustomerInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/updateCustomerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "Delete Customer",
        "operationId" : "deleteCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerCode",
          "in" : "path",
          "description" : "Reference given to a third party by the company to\r\nidentify it.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/customers/{customerCode}/miFIDs" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get ThirdParty MiFID",
        "operationId" : "getThirdPartyMiFIDExport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getThirdPartyMiFIDExportSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/customers/{customerCode}/portfolios" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Portfolios by Customer",
        "operationId" : "getPortfoliosCustomer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerCode",
          "in" : "path",
          "description" : "code of third party",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The start page from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Random and unique string for each page. Used for security purpose and cahe",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/getPortfoliosCustomerSuccessResponse"
            }
          },
          "400" : {
            "description" : "Bad Request, input control error",
            "schema" : {
              "$ref" : "#/definitions/HeaderResponse"
            }
          },
          "404" : {
            "description" : "Object not found",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          },
          "500" : {
            "description" : "Server error",
            "schema" : {
              "$ref" : "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "tapBasicAuth" : {
      "description" : "Tap Basic Authentication",
      "type" : "basic"
    },
    "X-Channel" : {
      "description" : "name of Channel",
      "type" : "apiKey",
      "name" : "X-Channel",
      "in" : "header"
    }
  },
  "definitions" : {
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string",
          "enum" : [ "WARNING", "ERROR", "INFO" ]
        }
      },
      "title" : "ApiResponse"
    },
    "Audit" : {
      "type" : "object",
      "properties" : {
        "startTime" : {
          "type" : "string"
        },
        "endTime" : {
          "type" : "string"
        },
        "totalTime" : {
          "type" : "string"
        },
        "processTime" : {
          "type" : "string"
        },
        "scriptTime" : {
          "type" : "string"
        },
        "otherTime" : {
          "type" : "string"
        }
      },
      "title" : "Audit"
    },
    "Customer" : {
      "type" : "object",
      "required" : [ "activeF", "clientF", "code", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "currencyDenom" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "residGeoDenom" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "taxGeoDenom" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Indicates the type of third party."
        }
      }
    },
    "CustomerWithPermValues" : {
      "type" : "object",
      "required" : [ "activeF", "clientF", "code", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "currencyDenom" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "residGeoDenom" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "taxGeoDenom" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Indicates the type of third party."
        }
      }
    },
    "HeaderCreateResponse" : {
      "type" : "object",
      "properties" : {
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MessageResponse"
          }
        },
        "interactiveToken" : {
          "type" : "string",
          "description" : "Token generated during the interactive edition. This token is necessary for locked automatically the fields during a sequuence of calls complete_only / complete_validate_only ."
        }
      },
      "title" : "HeaderCreateResponse"
    },
    "HeaderListResponse" : {
      "type" : "object",
      "properties" : {
        "Pagination" : {
          "$ref" : "#/definitions/Pagination"
        },
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        }
      },
      "title" : "HeaderListResponse"
    },
    "HeaderResponse" : {
      "type" : "object",
      "properties" : {
        "Audit" : {
          "$ref" : "#/definitions/Audit"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MessageResponse"
          }
        }
      },
      "title" : "HeaderResponse"
    },
    "MessageResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "level" : {
          "type" : "string",
          "enum" : [ "WARNING", "ERROR", "INFO" ]
        },
        "message" : {
          "type" : "string"
        }
      },
      "title" : "MessageResponse"
    },
    "Pagination" : {
      "type" : "object",
      "properties" : {
        "page" : {
          "type" : "integer",
          "format" : "int32"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        },
        "token" : {
          "type" : "string",
          "description" : "token used by server"
        }
      },
      "title" : "Pagination"
    },
    "createCustomerInput" : {
      "type" : "object",
      "required" : [ "activeF", "clientF", "code", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "code" : {
          "type" : "string",
          "description" : "Reference given to a third party by the company to\r\nidentify it."
        },
        "currencyDenom" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "residGeoDenom" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "taxGeoDenom" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Indicates the type of third party."
        }
      }
    },
    "createCustomerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerWithPermValues"
        }
      }
    },
    "getCustomerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderResponse"
        },
        "body" : {
          "$ref" : "#/definitions/Customer"
        }
      }
    },
    "getPortfoliosCustomerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "Summary information for the list of portfolios of a client",
          "items" : {
            "type" : "object",
            "properties" : {
              "RefCurrency" : {
                "type" : "string",
                "description" : "Reference currency"
              },
              "PortfolioManagedSince" : {
                "type" : "string",
                "format" : "date",
                "description" : "Portfolio Managed Since"
              },
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "seqno"
              },
              "ConsoMV" : {
                "type" : "number",
                "description" : "Consolidated market value"
              },
              "PortfolioIPRiskLevel" : {
                "type" : "number",
                "description" : "Portfolio IP risk level"
              },
              "custRoleE" : {
                "type" : "string",
                "description" : "Customer Role"
              },
              "UniquePortfolio" : {
                "type" : "boolean",
                "description" : "UNIQUE PORTFOLIO"
              },
              "PortfolioMV" : {
                "type" : "number",
                "description" : "Portfolio market value"
              },
              "PortfolioIPName" : {
                "type" : "string",
                "description" : "Portfolio IP name"
              },
              "ParentPortfolioId" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "Parent Portfolio Hierarchy Level"
              },
              "ClientName" : {
                "type" : "string",
                "description" : "Client Name"
              },
              "PortfolioServiceType" : {
                "type" : "string",
                "description" : "Portfolio Service Type"
              },
              "ConsoPL" : {
                "type" : "number",
                "description" : "Consolidated P&L"
              },
              "PortfolioHierarchyLevel" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Portfolio Hierarchy Level"
              },
              "UnrealizedPL" : {
                "type" : "number",
                "description" : "UnrealizedPL"
              },
              "ClientCode" : {
                "type" : "string",
                "description" : "Client Code"
              },
              "portfolio_id" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "ptf id"
              },
              "AcctFilter" : {
                "type" : "boolean",
                "description" : "Account Flag Filter"
              },
              "custParticpantPercentage" : {
                "type" : "number",
                "description" : "custParticpantPercentage"
              },
              "PortfolioCode" : {
                "type" : "string",
                "description" : "Portfolio Code"
              },
              "PortfolioName" : {
                "type" : "string",
                "description" : "Portfolio Name"
              },
              "PortfolioPL" : {
                "type" : "number",
                "description" : "Portfolio P&L"
              },
              "statusE" : {
                "type" : "string",
                "description" : "Portfolio Status"
              }
            }
          }
        }
      }
    },
    "getThirdPartyMiFIDExportSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderListResponse"
        },
        "body" : {
          "type" : "array",
          "description" : "MiFID Profile Information",
          "items" : {
            "type" : "object",
            "properties" : {
              "seqno" : {
                "type" : "integer",
                "format" : "int64",
                "description" : "seqno"
              },
              "ext_bi_invalid_mifid" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "MiFID profile invalid"
              },
              "ext_mifid_expiry_d" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "MiFID profile expiry date"
              },
              "ext_mifid_rvw_status" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "MiFID profile review status"
              },
              "ext_mifid_cur_status" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Current MiFID profile status"
              },
              "ext_bi_mifid_pnd_val" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "MiFID prof review pending val"
              }
            }
          }
        }
      }
    },
    "updateCustomerInput" : {
      "type" : "object",
      "required" : [ "activeF", "clientF", "name" ],
      "properties" : {
        "activeF" : {
          "type" : "boolean",
          "description" : "Describes the state of the Third Party. If a Third Party is inactive, it does not appear on default selection lists."
        },
        "clientF" : {
          "type" : "boolean",
          "description" : "Indicates that this third party will appear on the client selection list."
        },
        "currencyDenom" : {
          "type" : "string",
          "description" : "Mandatory reference currency of the third party.\r\nIs used when consolidation at the client level are requested."
        },
        "denom" : {
          "type" : "string",
          "description" : "Long name of the occurrence. Multi-lingual denominations are found in the denomination table."
        },
        "extDenomination" : {
          "type" : "string",
          "description" : "Denomination\r\nIt is an extended attribute which cannot be edited by the user but require a data pre-computation (see Triple'A Plus Web TSL Operating Guide).\r\nThis is the denomination of the third party.\r\nDenomination is displayed in user's language, but if it is not available then the default translation is used instead.\r\nThis extended attribute is defined as \"Multilingual\" and requires that some languages are defined as \"Multilingual\" too.\r\n\r\nThis attribute is used only for the Web Packaging."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier of the entity.\r\n\r\nAs for all ids in the database, this attribute is technical and will normally never be seen by the user. This field is mandatory and is computed by the system."
        },
        "name" : {
          "type" : "string",
          "description" : "Short name of the occurrence."
        },
        "residGeoDenom" : {
          "type" : "string",
          "description" : "Legal residence of the third party."
        },
        "taxGeoDenom" : {
          "type" : "string",
          "description" : "Fiscal residence of the third party."
        },
        "typeDenom" : {
          "type" : "string",
          "description" : "Indicates the type of third party."
        }
      }
    },
    "updateCustomerSuccessResponse" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/HeaderCreateResponse"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerWithPermValues"
        }
      }
    }
  }
}