{
  "swagger" : "2.0",
  "info" : {
    "description" : "Allows the creation, viewing and management of customers.",
    "version" : "v1.0.0",
    "title" : "Party Customer Secure Messages APIs"
  },
  "host" : "api.temenos.com",
  "basePath" : "/api/v1.0.0/",
  "schemes" : [ "http", "https" ],
  "security" : [ {
    "basicAuth" : [ ]
  } ],
  "paths" : {
    "/party/customers/{customerId}/consents" : {
      "get" : {
        "operationId" : "getCustomerConsents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "propertyClassId",
          "in" : "query",
          "description" : "The identifier of a condition that is used to build a product",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerConsentsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerConsentsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/travelNotifications" : {
      "get" : {
        "operationId" : "getCustomerTravelNotifications",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100297"
        }, {
          "name" : "overallStatus",
          "in" : "query",
          "description" : "Contains the overall status",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "overallStatusNE",
          "in" : "query",
          "description" : "Overall status not equal to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "travelNotificationId",
          "in" : "query",
          "description" : "Denotes the identifier associated with the travel for notifications",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerTravelNotificationsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerTravelNotificationsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/contactDetails" : {
      "get" : {
        "operationId" : "getCustomerContactDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100100"
        }, {
          "name" : "customerName",
          "in" : "query",
          "description" : "Name of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "street",
          "in" : "query",
          "description" : "Contains the first line of customer's base address, example building number, street number etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "town",
          "in" : "query",
          "description" : "Contains the name of the town in which the travel has taken place",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postcode",
          "in" : "query",
          "description" : "Identifies the address postal code for the customer.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateOfBirth",
          "in" : "query",
          "description" : "The date of birth of an individual customer",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "customerStatus",
          "in" : "query",
          "description" : "The internal bank status of a customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerType",
          "in" : "query",
          "description" : "Illustrates the capacity in which a client is acting.Possible Values : Customer, Broker, Depository, Client, Counterparty, External Account Manager",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerContactDetailsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerContactDetailsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      },
      "put" : {
        "operationId" : "updateCustomerContactDetail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100100"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerContactDetail"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerContactDetailResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerContactDetailResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/deliveryPreferences" : {
      "get" : {
        "operationId" : "getCustomerDeliveryPreferences",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100336"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDeliveryPreferencesResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDeliveryPreferencesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "operationId" : "createCustomerDeliveryPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100336"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerDeliveryPreference1"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDeliveryPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDeliveryPreferenceResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "operationId" : "updateCustomerDeliveryPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100336"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerDeliveryPreference"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDeliveryPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDeliveryPreferenceResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "operationId" : "deleteCustomerDeliveryPreference",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100336"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerDeliveryPreferenceResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerDeliveryPreferenceResponse2"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/adverts" : {
      "get" : {
        "operationId" : "getCustomerAdverts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100336"
        }, {
          "name" : "languageId",
          "in" : "query",
          "description" : "Represents the language code of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerAdvertsResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerAdvertsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/adverts/{advertId}" : {
      "put" : {
        "operationId" : "updateAdvert",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "advertId",
          "in" : "path",
          "description" : "Contains the identifier associated to the advertisement respective to the customer of the account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Advert"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AdvertResponse",
            "schema" : {
              "$ref" : "#/definitions/AdvertResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/adverts" : {
      "post" : {
        "operationId" : "createAdvert",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Advert1"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AdvertResponse",
            "schema" : {
              "$ref" : "#/definitions/AdvertResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/documents/{documentId}" : {
      "put" : {
        "operationId" : "updateDocumentandImage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "description" : "Based on documentCode, the field defaults the required document codes",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentandImage"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DocumentandImageResponse",
            "schema" : {
              "$ref" : "#/definitions/DocumentandImageResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "operationId" : "deleteDocumentandImage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "documentId",
          "in" : "path",
          "description" : "Based on documentCode, the field defaults the required document codes",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DocumentandImageResponse",
            "schema" : {
              "$ref" : "#/definitions/DocumentandImageResponse2"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/documents/fileUploads/{uploadId}" : {
      "post" : {
        "operationId" : "createProfilePictureUpload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uploadId",
          "in" : "path",
          "description" : "The unique identifier of the uploaded file",
          "required" : true,
          "type" : "string",
          "x-example" : "IM1907902062"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProfilePictureUpload1"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProfilePictureUploadResponse",
            "schema" : {
              "$ref" : "#/definitions/ProfilePictureUploadResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "operationId" : "updateProfilePictureUpload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uploadId",
          "in" : "path",
          "description" : "The unique identifier of the uploaded file",
          "required" : true,
          "type" : "string",
          "x-example" : "IM1907902062"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProfilePictureUpload"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProfilePictureUploadResponse",
            "schema" : {
              "$ref" : "#/definitions/ProfilePictureUploadResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "operationId" : "deleteProfilePictureUpload",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "uploadId",
          "in" : "path",
          "description" : "The unique identifier of the uploaded file",
          "required" : true,
          "type" : "string",
          "x-example" : "IM1907902062"
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ProfilePictureUploadResponse",
            "schema" : {
              "$ref" : "#/definitions/ProfilePictureUploadResponse2"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/secureMessages" : {
      "get" : {
        "operationId" : "getSecureMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "messageId",
          "in" : "query",
          "description" : "The holds the record key of the message ID.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "parentMessageIdNE",
          "in" : "query",
          "description" : "Parent message id not equal to",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "parentMessageId",
          "in" : "query",
          "description" : "Identifier of the parent message.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "toCustomerId",
          "in" : "query",
          "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fromCustomerId",
          "in" : "query",
          "description" : "The Customer ID from which the message is triggered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageStatus",
          "in" : "query",
          "description" : "Status of the message",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SecureMessagesResponse",
            "schema" : {
              "$ref" : "#/definitions/SecureMessagesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      },
      "post" : {
        "operationId" : "createSecureMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SecureMessage"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SecureMessageResponse",
            "schema" : {
              "$ref" : "#/definitions/SecureMessageResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/secureMessages/{secureMessageId}" : {
      "get" : {
        "operationId" : "readSecureMessage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "secureMessageId",
          "in" : "path",
          "description" : "Contains the usable amount in the balance",
          "required" : true,
          "type" : "string",
          "x-example" : "SM1810766127"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "SecureMessageResponse",
            "schema" : {
              "$ref" : "#/definitions/SecureMessageResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/beneficiaries" : {
      "get" : {
        "operationId" : "getCustomerBeneficiary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "100283"
        }, {
          "name" : "nickName",
          "in" : "query",
          "description" : "Nickname of the beneficiary",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerBeneficiaryResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerBeneficiaryResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/portfolios/{portfolioId}/overdueSettlements" : {
      "get" : {
        "operationId" : "getOverdueSettlements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "portfolioId",
          "in" : "path",
          "description" : "Id of the portfolio or security account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "query",
          "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "brokerId",
          "in" : "query",
          "description" : "The identifier of the broker",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tradeDate",
          "in" : "query",
          "description" : "Standard date field which records trade date of the account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "valueDate",
          "in" : "query",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "depository",
          "in" : "query",
          "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "Contains all details of each individual currency, for example, currency name, number of decimal places together with other information such as the buy and sell rates",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "instrumentId",
          "in" : "query",
          "description" : "The identifier of the instrument",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deliveryInstruction",
          "in" : "query",
          "description" : "Customer's directions to a bank as to the disposition of funds and securities in the customer's account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionType",
          "in" : "query",
          "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "quantity",
          "in" : "query",
          "description" : "The nominal quantity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "stockExchange",
          "in" : "query",
          "description" : "The stock exchange identifier",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OverdueSettlementsResponse",
            "schema" : {
              "$ref" : "#/definitions/OverdueSettlementsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/documents" : {
      "post" : {
        "operationId" : "createDocumentandImage",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DocumentandImage1"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DocumentandImageResponse",
            "schema" : {
              "$ref" : "#/definitions/DocumentandImageResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/images/{imageReference}" : {
      "get" : {
        "operationId" : "getDocumentandImages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "imageReference",
          "in" : "path",
          "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to",
          "required" : true,
          "type" : "string",
          "x-example" : "190198"
        }, {
          "name" : "imageApplication",
          "in" : "query",
          "description" : "Indicates the domain name (technical identifier) the image/document is attached to. E.g., Customer, Payments, Loans, Deposits, etc..,",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "imageType",
          "in" : "query",
          "description" : "Indicates the internal classification of images - such as Photographs, Documents, Passports, etc..,",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "imageReferenceId",
          "in" : "query",
          "description" : "Contains the identifier associated to the image reference",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "DocumentandImagesResponse",
            "schema" : {
              "$ref" : "#/definitions/DocumentandImagesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/alertRequests" : {
      "get" : {
        "operationId" : "getAlertRequests",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contractReference",
          "in" : "query",
          "description" : "Contains the contract reference",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscribe",
          "in" : "query",
          "description" : "Enables an alert service",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "alertRequestId",
          "in" : "query",
          "description" : "The unique identifier of the alert request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "AlertRequestsResponse",
            "schema" : {
              "$ref" : "#/definitions/AlertRequestsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/openBankingConnections/{connectionId}" : {
      "post" : {
        "operationId" : "createOpenBankingConnection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connectionId",
          "in" : "path",
          "description" : "Contains the id associated to the connect reference respective to a transaction of the account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenBankingConnection"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OpenBankingConnectionResponse",
            "schema" : {
              "$ref" : "#/definitions/OpenBankingConnectionResponse"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      },
      "put" : {
        "operationId" : "removeOpenBankingConnection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connectionId",
          "in" : "path",
          "description" : "Contains the id associated to the connect reference respective to a transaction of the account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenBankingConnection1"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OpenBankingConnectionResponse",
            "schema" : {
              "$ref" : "#/definitions/OpenBankingConnectionResponse1"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/connectionReconnections/{connectionId}" : {
      "put" : {
        "operationId" : "reconnectOpenBankingConnection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connectionId",
          "in" : "path",
          "description" : "Contains the id associated to the connect reference respective to a transaction of the account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenBankingConnection2"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OpenBankingConnectionResponse",
            "schema" : {
              "$ref" : "#/definitions/OpenBankingConnectionResponse2"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/connectionRefreshes/{connectionId}" : {
      "put" : {
        "operationId" : "refreshOpenBankingConnection",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connectionId",
          "in" : "path",
          "description" : "Contains the id associated to the connect reference respective to a transaction of the account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payload",
          "description" : "body Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OpenBankingConnection3"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OpenBankingConnectionResponse",
            "schema" : {
              "$ref" : "#/definitions/OpenBankingConnectionResponse3"
            }
          },
          "default" : {
            "description" : "ScreenErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/ScreenErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/consents/thirdPartyProviderConsents" : {
      "get" : {
        "operationId" : "getThirdPartyProviderConsents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "connectionId",
          "in" : "query",
          "description" : "Contains the id associated to the connect reference respective to a transaction of the account",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currentState",
          "in" : "query",
          "description" : "Contains the current state of the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "connectionStatus",
          "in" : "query",
          "description" : "Contains the connection status of the transaction",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ThirdPartyProviderConsentsResponse",
            "schema" : {
              "$ref" : "#/definitions/ThirdPartyProviderConsentsResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/accountServicingProviders/" : {
      "get" : {
        "operationId" : "getOtherBanksToConnectTo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "openBankingId",
          "in" : "query",
          "description" : "Identifies the open banking number of the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "query",
          "description" : "ISO country code of the financial institution. ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "setActive",
          "in" : "query",
          "description" : "Flag to set the connection status to active",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "extSourceProvider",
          "in" : "query",
          "description" : "Contains the name of the external source provider for the customer",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OtherBanksToConnectToResponse",
            "schema" : {
              "$ref" : "#/definitions/OtherBanksToConnectToResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    },
    "/party/customers/{customerId}/onlineBeneficiaries" : {
      "get" : {
        "operationId" : "getCustomerBeneficiaries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "type" : "string",
          "x-example" : "190098"
        }, {
          "name" : "externalBeneficiaryFlag",
          "in" : "query",
          "description" : "Flag to identify if the beneficiary is external",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentScheme",
          "in" : "query",
          "description" : "Payment scheme details",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "credentials",
          "in" : "query",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "companyId",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerBeneficiariesResponse",
            "schema" : {
              "$ref" : "#/definitions/CustomerBeneficiariesResponse"
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "schema" : {
              "$ref" : "#/definitions/QueryErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "QueryHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            },
            "parse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records per page"
        },
        "page_start" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The record from which the response should be displayed"
        },
        "total_size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of records present"
        },
        "page_token" : {
          "type" : "string",
          "description" : "Unique id expected to get as part of response from t24 on every enquiry request"
        }
      }
    },
    "CustomerConsentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerConsentsResponseBody"
        }
      },
      "description" : "CustomerConsentsResponse"
    },
    "CustomerConsentsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "consentTypes" : {
            "type" : "array",
            "description" : "The consent type of for which permission is given.  Drop down list pre-defined at product level and defaulted to the account.",
            "items" : {
              "type" : "object",
              "properties" : {
                "consentType" : {
                  "type" : "string",
                  "description" : "Consent Type for which the consent is given"
                },
                "consentGiven" : {
                  "type" : "string",
                  "description" : "Identifies whether the consent has been given to the customer to perform the transaction"
                },
                "consentBlock" : {
                  "type" : "string",
                  "description" : "Indicates whether consent is blocked or not. No personal data of the Client will be shared by the Bank for any purpose when the consent is blocked."
                },
                "blockNotes" : {
                  "type" : "string",
                  "description" : "Indicates the reason for which the consent is blocked."
                },
                "consentWithdraw" : {
                  "type" : "string",
                  "description" : "Identifies whether the consent has been withdrawn to the customer to perform the transaction"
                },
                "withdrawNotes" : {
                  "type" : "string",
                  "description" : "Notes to facilitate why the consent has been withdrawn"
                },
                "consentTypeName" : {
                  "type" : "string",
                  "description" : "Contains the name of the type of consent given to the customer"
                },
                "subTypes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "consentSubType" : {
                        "type" : "string",
                        "description" : "Indicates the consent sub type linked to corresponding consent type."
                      },
                      "consentSubTypeGiven" : {
                        "type" : "string",
                        "description" : "Contains the sub type of consent given to the customer"
                      }
                    }
                  }
                }
              }
            }
          },
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "effectiveDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date on which the principal movement is effected"
          },
          "productId" : {
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "expiryDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date an agreement such as an arrangement, product, credit facility or limit is due to expire"
          }
        }
      }
    },
    "ErrorHeader" : {
      "properties" : {
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "The CURR.NO. of the record"
            },
            "parse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "QueryErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/QueryErrorResponseBody"
        }
      },
      "description" : "QueryErrorResponse"
    },
    "QueryErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The identifier of the error message"
        },
        "message" : {
          "type" : "string",
          "description" : "The actual t24 error message"
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type"
        }
      }
    },
    "CustomerTravelNotificationsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerTravelNotificationsResponseBody"
        }
      },
      "description" : "CustomerTravelNotificationsResponse"
    },
    "CustomerTravelNotificationsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "travelNotifications" : {
            "type" : "array",
            "description" : "The identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId.",
            "items" : {
              "type" : "object",
              "properties" : {
                "countryId" : {
                  "type" : "string",
                  "description" : "ISO country code of the financial institution. ",
                  "maxLength" : 2
                },
                "startDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Contains the date on which the transaction or payment gets initiated."
                },
                "endDate" : {
                  "type" : "string",
                  "format" : "date",
                  "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
                },
                "startTime" : {
                  "type" : "string",
                  "description" : "Contains the time job was started",
                  "maxLength" : 5
                },
                "endTime" : {
                  "type" : "string",
                  "description" : "Contains the time the job  ended.",
                  "maxLength" : 5
                },
                "visitPurpose" : {
                  "type" : "string",
                  "description" : "Specifies the purpose of the travel",
                  "maxLength" : 15
                },
                "scheduleType" : {
                  "type" : "string",
                  "description" : "The type of event schedule. The main ones are interest payment (IP) , principal increase (PI), rate reset (RR).",
                  "maxLength" : 35
                },
                "travelStatus" : {
                  "type" : "string",
                  "description" : "Indicates the status of travel.",
                  "maxLength" : 35
                },
                "additionalInformation" : {
                  "type" : "string",
                  "description" : "Additional Information provided to add context",
                  "maxLength" : 100
                },
                "contactDetails" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "contactDetail" : {
                        "type" : "string",
                        "description" : "Contains the contact details of the traveller",
                        "maxLength" : 100
                      }
                    }
                  }
                },
                "accountIds" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "accountId" : {
                        "type" : "string",
                        "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
                        "maxLength" : 19
                      }
                    }
                  }
                }
              }
            }
          },
          "travelNotificationId" : {
            "type" : "string",
            "description" : "Denotes the identifier associated with the travel for notifications",
            "maxLength" : 15
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          },
          "overallStatus" : {
            "type" : "string",
            "description" : "Contains the overall status",
            "maxLength" : 35
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          }
        }
      }
    },
    "CustomerContactDetailsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerContactDetailsResponseBody"
        }
      },
      "description" : "CustomerContactDetailsResponse"
    },
    "CustomerContactDetailsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "addressDetails" : {
            "type" : "array",
            "description" : "Holds unstructured address information, e.g. Contact Person. Building, Floor, Apartment, Street Number, Street Name, Town, Area, Code",
            "items" : {
              "type" : "object",
              "properties" : {
                "street" : {
                  "type" : "string",
                  "description" : "Contains the first line of customer's base address, example building number, street number etc.",
                  "maxLength" : 35
                },
                "address" : {
                  "type" : "string",
                  "description" : "Communication Address of the Customer",
                  "maxLength" : 35
                },
                "addressCity" : {
                  "type" : "string",
                  "description" : "The town and/or city component of the base address of a customer",
                  "maxLength" : 35
                },
                "postCode" : {
                  "type" : "string",
                  "description" : "Identifies the address postal code for the customer.",
                  "maxLength" : 35
                },
                "country" : {
                  "type" : "string",
                  "description" : "Identifies the country of the customer.",
                  "maxLength" : 35
                }
              }
            }
          },
          "contactDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "phoneNumber" : {
                  "type" : "string",
                  "description" : "The phone number of the customer or prospect",
                  "maxLength" : 17
                },
                "officePhoneNumber" : {
                  "type" : "string",
                  "description" : "The office phone number of the customer",
                  "maxLength" : 17
                },
                "smsNumber" : {
                  "type" : "string",
                  "description" : "The mobile SMS number of the customer",
                  "maxLength" : 17
                },
                "emailId" : {
                  "type" : "string",
                  "description" : "Contains the email identifier of the customer",
                  "maxLength" : 50
                },
                "faxNumber" : {
                  "type" : "string",
                  "description" : "Fax number of the Customer",
                  "maxLength" : 17
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 10
          },
          "customerName" : {
            "type" : "string",
            "description" : "Name of the customer",
            "maxLength" : 35
          },
          "dateOfBirth" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date of birth of an individual customer"
          },
          "customerStatus" : {
            "type" : "string",
            "description" : "The internal bank status of a customer",
            "maxLength" : 4
          },
          "customerStatusName" : {
            "type" : "string",
            "description" : "Contains the status of the customer transaction",
            "maxLength" : 4
          },
          "customerType" : {
            "type" : "string",
            "description" : "Illustrates the capacity in which a client is acting.Possible Values : Customer, Broker, Depository, Client, Counterparty, External Account Manager",
            "maxLength" : 35
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          }
        }
      }
    },
    "PayloadHeader" : {
      "properties" : {
        "override" : {
          "type" : "object",
          "properties" : {
            "overrideDetails" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "The identifier of the override"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Contains the description of purpose of the payment."
                  },
                  "responseCode" : {
                    "type" : "string",
                    "description" : "The user input to accept/reject the override."
                  }
                }
              }
            }
          }
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            }
          }
        }
      }
    },
    "CustomerContactDetail" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerContactDetailBody"
        }
      },
      "description" : "CustomerContactDetail"
    },
    "CustomerContactDetailBody" : {
      "type" : "object",
      "properties" : {
        "contactDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect"
              },
              "smsNumber" : {
                "type" : "string",
                "description" : "The mobile SMS number of the customer"
              },
              "emailId" : {
                "type" : "string",
                "description" : "Contains the email identifier of the customer"
              }
            }
          }
        },
        "officePhoneNumbers" : {
          "type" : "array",
          "description" : "The office phone number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "officePhoneNumber" : {
                "type" : "string",
                "description" : "The office phone number of the customer"
              }
            }
          }
        },
        "faxNumbers" : {
          "type" : "array",
          "description" : "Fax number of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "faxNumber" : {
                "type" : "string",
                "description" : "Fax number of the Customer"
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database."
              }
            }
          }
        }
      }
    },
    "ScreenHeader" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The Identifier of the record created"
        },
        "status" : {
          "type" : "string",
          "description" : "Status identifier of the account. The values are 'DELETED' if the account is closed, 'BLOCKED' is there are any posting restrictions & 'ENABLED' for active accounts."
        },
        "transactionStatus" : {
          "type" : "string",
          "description" : "Contains the current status of the transaction. For example: 'ACCC': 'AcceptedSettlementCompleted' - Settlement on the creditor's account has been completed.'ACCP': 'AcceptedCustomerProfile' - Preceding check of technical validation was successful. Customer profile check was also successful.'CANC': 'Cancelled' Payment initiation has been cancelled before execution Remark: This codeis accepted as new code by ISO20022.'RCVD': 'Received' - Payment initiation has been received by the receiving agent."
        },
        "audit" : {
          "type" : "object",
          "properties" : {
            "T24_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to response by T24"
            },
            "versionNumber" : {
              "type" : "string",
              "description" : "Current number of the record"
            },
            "parse_time" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Time taken to parse the response by IRIS"
            }
          }
        }
      }
    },
    "CustomerContactDetailResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerContactDetailResponseBody"
        }
      },
      "description" : "CustomerContactDetailResponse"
    },
    "CustomerContactDetailResponseBody" : {
      "type" : "object",
      "properties" : {
        "contactDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "phoneNumber" : {
                "type" : "string",
                "description" : "The phone number of the customer or prospect"
              },
              "smsNumber" : {
                "type" : "string",
                "description" : "The mobile SMS number of the customer"
              },
              "emailId" : {
                "type" : "string",
                "description" : "Contains the email identifier of the customer"
              }
            }
          }
        },
        "officePhoneNumbers" : {
          "type" : "array",
          "description" : "The office phone number of the customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "officePhoneNumber" : {
                "type" : "string",
                "description" : "The office phone number of the customer"
              }
            }
          }
        },
        "faxNumbers" : {
          "type" : "array",
          "description" : "Fax number of the Customer",
          "items" : {
            "type" : "object",
            "properties" : {
              "faxNumber" : {
                "type" : "string",
                "description" : "Fax number of the Customer"
              }
            }
          }
        },
        "overrides" : {
          "type" : "array",
          "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
          "items" : {
            "type" : "object",
            "properties" : {
              "override" : {
                "type" : "string",
                "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database."
              }
            }
          }
        }
      }
    },
    "overrideBody" : {
      "properties" : {
        "overrideDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "The identifier of the override"
              },
              "description" : {
                "type" : "string",
                "description" : "The actual override message"
              }
            }
          }
        }
      }
    },
    "ScreenErrorResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ErrorHeader"
        },
        "error" : {
          "$ref" : "#/definitions/ScreenErrorResponseBody"
        },
        "override" : {
          "$ref" : "#/definitions/overrideBody"
        }
      },
      "description" : "ScreenErrorResponse"
    },
    "ScreenErrorResponseBody" : {
      "type" : "object",
      "properties" : {
        "errorDetails" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "fieldName" : {
                "type" : "string",
                "description" : "The name of the field"
              },
              "code" : {
                "type" : "string",
                "description" : "The identifier of the error message"
              },
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message"
              }
            }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The identifier of error type"
        }
      }
    },
    "CustomerDeliveryPreferencesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryPreferencesResponseBody"
        }
      },
      "description" : "CustomerDeliveryPreferencesResponse"
    },
    "CustomerDeliveryPreferencesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "groups" : {
            "type" : "array",
            "description" : "Carrier to be used for sending messages",
            "items" : {
              "type" : "object",
              "properties" : {
                "messageGroupId" : {
                  "type" : "string",
                  "description" : "Contains the starting message id of the conversation",
                  "maxLength" : 35
                },
                "carriers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "carrierId" : {
                        "type" : "string",
                        "description" : "Contains the identifier associated to the carrier respective to a transaction of the account",
                        "maxLength" : 10
                      },
                      "required" : {
                        "type" : "string",
                        "description" : "Flag to set the channel to communicate",
                        "maxLength" : 8
                      },
                      "carrierPosition" : {
                        "type" : "string",
                        "description" : "Identifies the position of the carrier in the arrangement",
                        "maxLength" : 3
                      }
                    }
                  }
                }
              }
            }
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 35
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          }
        }
      }
    },
    "CustomerDeliveryPreference" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryPreferenceBody"
        }
      },
      "description" : "CustomerDeliveryPreference"
    },
    "CustomerDeliveryPreferenceBody" : {
      "type" : "object",
      "properties" : {
        "groups" : {
          "type" : "array",
          "description" : "Carrier to be used for sending messages",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation"
              },
              "carriers" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "carrierId" : {
                      "type" : "string",
                      "description" : "Contains the identifier associated to the carrier respective to a transaction of the account"
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Flag to set the channel to communicate"
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "Identifies the position of the carrier in the arrangement"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CustomerDeliveryPreferenceResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryPreferenceResponseBody"
        }
      },
      "description" : "CustomerDeliveryPreferenceResponse"
    },
    "CustomerDeliveryPreferenceResponseBody" : {
      "type" : "object",
      "properties" : {
        "groups" : {
          "type" : "array",
          "description" : "Carrier to be used for sending messages",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation"
              },
              "carriers" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "carrierId" : {
                      "type" : "string",
                      "description" : "Contains the identifier associated to the carrier respective to a transaction of the account"
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Flag to set the channel to communicate"
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "Identifies the position of the carrier in the arrangement"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CustomerDeliveryPreference1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryPreference1Body"
        }
      },
      "description" : "CustomerDeliveryPreference1"
    },
    "CustomerDeliveryPreference1Body" : {
      "type" : "object",
      "properties" : {
        "groups" : {
          "type" : "array",
          "description" : "Carrier to be used for sending messages",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation"
              },
              "carriers" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "carrierId" : {
                      "type" : "string",
                      "description" : "Contains the identifier associated to the carrier respective to a transaction of the account"
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Flag to set the channel to communicate"
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "Identifies the position of the carrier in the arrangement"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CustomerDeliveryPreferenceResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryPreferenceResponse1Body"
        }
      },
      "description" : "CustomerDeliveryPreferenceResponse1"
    },
    "CustomerDeliveryPreferenceResponse1Body" : {
      "type" : "object",
      "properties" : {
        "groups" : {
          "type" : "array",
          "description" : "Carrier to be used for sending messages",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation"
              },
              "carriers" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "carrierId" : {
                      "type" : "string",
                      "description" : "Contains the identifier associated to the carrier respective to a transaction of the account"
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Flag to set the channel to communicate"
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "Identifies the position of the carrier in the arrangement"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CustomerDeliveryPreferenceResponse2" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerDeliveryPreferenceResponse2Body"
        }
      },
      "description" : "CustomerDeliveryPreferenceResponse2"
    },
    "CustomerDeliveryPreferenceResponse2Body" : {
      "type" : "object",
      "properties" : {
        "groups" : {
          "type" : "array",
          "description" : "Carrier to be used for sending messages",
          "items" : {
            "type" : "object",
            "properties" : {
              "messageGroupId" : {
                "type" : "string",
                "description" : "Contains the starting message id of the conversation"
              },
              "carriers" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "carrierId" : {
                      "type" : "string",
                      "description" : "Contains the identifier associated to the carrier respective to a transaction of the account"
                    },
                    "required" : {
                      "type" : "string",
                      "description" : "Flag to set the channel to communicate"
                    },
                    "carrierPosition" : {
                      "type" : "string",
                      "description" : "Identifies the position of the carrier in the arrangement"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CustomerAdvertsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerAdvertsResponseBody"
        }
      },
      "description" : "CustomerAdvertsResponse"
    },
    "CustomerAdvertsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "opportunities" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "opportunityProductId" : {
                  "type" : "string",
                  "description" : "Contains the identifier of the product in the opportunity"
                },
                "opportunityDirection" : {
                  "type" : "string",
                  "description" : "Contains the direction of the product in the opportunity"
                },
                "opportunityGeneratorId" : {
                  "type" : "string",
                  "description" : "Contains the identifier of the generator in the opportunity"
                },
                "opportunityTemplateId" : {
                  "type" : "string",
                  "description" : "Contains the identifier of the opportunity template"
                },
                "opportunityTemplateDisplayName" : {
                  "type" : "string",
                  "description" : "Contains the display name of the opportunity template"
                },
                "opportunityStatus" : {
                  "type" : "string",
                  "description" : "Contains the status of the opportunity"
                },
                "opportunityProbabilitySuccess" : {
                  "type" : "string",
                  "description" : "Denotes the probability of success in opportunity"
                },
                "opportunityDisplayName" : {
                  "type" : "string",
                  "description" : "Contains the display name of the opportunity"
                }
              }
            }
          },
          "advertDocs" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "advertDocImageId" : {
                  "type" : "string",
                  "description" : "Contains the identifier for the image of the document of the advertisement"
                },
                "advertDocImageType" : {
                  "type" : "string",
                  "description" : "Types of the image documents of the advertisement"
                },
                "advertDocImageMediaType" : {
                  "type" : "string",
                  "description" : "Types of the image document media in the advertisement"
                },
                "advertDocImageName" : {
                  "type" : "string",
                  "description" : "Contains the name for the image of the document in the advertisement"
                }
              }
            }
          },
          "advertDetails" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "advertDetailDocImageId" : {
                  "type" : "string",
                  "description" : "Contains the identifier of the detailed image of the document in the advertisement"
                },
                "advertDetailDocImageType" : {
                  "type" : "string",
                  "description" : "Contains the type of the detailed image of the document in the advertisement"
                },
                "advertDetailDocImageMediaType" : {
                  "type" : "string",
                  "description" : "Contains the types of the detailed image of the document media in the advertisement"
                },
                "advertDetailDocImageName" : {
                  "type" : "string",
                  "description" : "Contains the name of the detailed image of the document of the advertisement"
                }
              }
            }
          },
          "products" : {
            "type" : "array",
            "description" : "The product for which the pricing plan is applicable",
            "items" : {
              "type" : "object",
              "properties" : {
                "productGroupId" : {
                  "type" : "string",
                  "description" : "The group, as defined by the institution, that the product belongs to."
                },
                "productLineId" : {
                  "type" : "string",
                  "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products."
                }
              }
            }
          },
          "opportunityId" : {
            "type" : "string",
            "description" : "The identifier of Customer opportunity"
          },
          "campaignId" : {
            "type" : "string",
            "description" : "Customer Opportunity campaign reference"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record"
          }
        }
      }
    },
    "Advert" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AdvertBody"
        }
      },
      "description" : "Advert",
      "example" : {
        "header" : {
          "“audit”" : {
            "“versionNumber”" : "“3”"
          }
        },
        "body" : {
          "opportunityDirection" : "INBOUND",
          "startDate" : "2018-04-20",
          "opportunityStatus" : "ACCEPTED"
        }
      }
    },
    "AdvertBody" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "opportunityProductId" : {
          "type" : "string",
          "description" : "Contains the identifier of the product in the opportunity"
        },
        "opportunityDirection" : {
          "type" : "string",
          "description" : "Contains the direction of the product in the opportunity"
        },
        "opportunityTemplateId" : {
          "type" : "string",
          "description" : "Contains the identifier of the opportunity template"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the date on which the transaction or payment gets initiated."
        },
        "opportunityStatus" : {
          "type" : "string",
          "description" : "Contains the status of the opportunity"
        },
        "transactionApplication" : {
          "type" : "string",
          "description" : "Denotes the transaction that has taken place or will take place"
        },
        "transactionId" : {
          "type" : "string",
          "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc."
        }
      }
    },
    "AdvertResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AdvertResponseBody"
        }
      },
      "description" : "AdvertResponse"
    },
    "AdvertResponseBody" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "opportunityProductId" : {
          "type" : "string",
          "description" : "Contains the identifier of the product in the opportunity"
        },
        "opportunityDirection" : {
          "type" : "string",
          "description" : "Contains the direction of the product in the opportunity"
        },
        "opportunityTemplateId" : {
          "type" : "string",
          "description" : "Contains the identifier of the opportunity template"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the date on which the transaction or payment gets initiated."
        },
        "opportunityStatus" : {
          "type" : "string",
          "description" : "Contains the status of the opportunity"
        },
        "transactionApplication" : {
          "type" : "string",
          "description" : "Denotes the transaction that has taken place or will take place"
        },
        "transactionId" : {
          "type" : "string",
          "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc."
        }
      }
    },
    "Advert1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/Advert1Body"
        }
      },
      "description" : "Advert1"
    },
    "Advert1Body" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "opportunityProductId" : {
          "type" : "string",
          "description" : "Contains the identifier of the product in the opportunity"
        },
        "opportunityDirection" : {
          "type" : "string",
          "description" : "Contains the direction of the product in the opportunity"
        },
        "opportunityTemplateId" : {
          "type" : "string",
          "description" : "Contains the identifier of the opportunity template"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the date on which the transaction or payment gets initiated."
        },
        "opportunityStatus" : {
          "type" : "string",
          "description" : "Contains the status of the opportunity"
        },
        "transactionApplication" : {
          "type" : "string",
          "description" : "Denotes the transaction that has taken place or will take place"
        },
        "transactionId" : {
          "type" : "string",
          "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc."
        }
      }
    },
    "AdvertResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AdvertResponse1Body"
        }
      },
      "description" : "AdvertResponse1"
    },
    "AdvertResponse1Body" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "opportunityProductId" : {
          "type" : "string",
          "description" : "Contains the identifier of the product in the opportunity"
        },
        "opportunityDirection" : {
          "type" : "string",
          "description" : "Contains the direction of the product in the opportunity"
        },
        "opportunityTemplateId" : {
          "type" : "string",
          "description" : "Contains the identifier of the opportunity template"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Contains the date on which the transaction or payment gets initiated."
        },
        "opportunityStatus" : {
          "type" : "string",
          "description" : "Contains the status of the opportunity"
        },
        "transactionApplication" : {
          "type" : "string",
          "description" : "Denotes the transaction that has taken place or will take place"
        },
        "transactionId" : {
          "type" : "string",
          "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc."
        }
      }
    },
    "DocumentandImage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DocumentandImageBody"
        }
      },
      "description" : "DocumentandImage",
      "example" : {
        "header" : { },
        "body" : {
          "imageApplication" : "CUSTOMER",
          "notes" : "NEW IMAGE",
          "displayName" : "Petero",
          "imageReference" : "190167",
          "multiMediaType" : "IMAGE",
          "descriptions" : [ {
            "description" : "Petero"
          } ],
          "imageType" : "PHOTOS"
        }
      }
    },
    "DocumentandImageBody" : {
      "type" : "object",
      "properties" : {
        "descriptions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Contains the description of purpose of the payment."
              }
            }
          }
        },
        "imageType" : {
          "type" : "string",
          "description" : "Indicates the internal classification of images - such as Photographs, Documents, Passports, etc..,"
        },
        "imageApplication" : {
          "type" : "string",
          "description" : "Indicates the domain name (technical identifier) the image/document is attached to. E.g., Customer, Payments, Loans, Deposits, etc..,"
        },
        "companyMnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch related to the image record"
        },
        "imageReference" : {
          "type" : "string",
          "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to"
        },
        "displayName" : {
          "type" : "string",
          "description" : "Contains the name used for display or enrichment purposes"
        },
        "multiMediaType" : {
          "type" : "string",
          "description" : "Different types of multimedia that has been used in the advertisement"
        },
        "imagePath" : {
          "type" : "string",
          "description" : "Identifies the image stored on the file system, specifically based on the logo url mentioned in open banking directory."
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes to facilitate the use of the function"
        }
      }
    },
    "DocumentandImageResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DocumentandImageResponseBody"
        }
      },
      "description" : "DocumentandImageResponse"
    },
    "DocumentandImageResponseBody" : {
      "type" : "object",
      "properties" : {
        "descriptions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Contains the description of purpose of the payment."
              }
            }
          }
        },
        "imageType" : {
          "type" : "string",
          "description" : "Indicates the internal classification of images - such as Photographs, Documents, Passports, etc..,"
        },
        "imageApplication" : {
          "type" : "string",
          "description" : "Indicates the domain name (technical identifier) the image/document is attached to. E.g., Customer, Payments, Loans, Deposits, etc..,"
        },
        "companyMnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch related to the image record"
        },
        "imageReference" : {
          "type" : "string",
          "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to"
        },
        "displayName" : {
          "type" : "string",
          "description" : "Contains the name used for display or enrichment purposes"
        },
        "multiMediaType" : {
          "type" : "string",
          "description" : "Different types of multimedia that has been used in the advertisement"
        },
        "imagePath" : {
          "type" : "string",
          "description" : "Identifies the image stored on the file system, specifically based on the logo url mentioned in open banking directory."
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes to facilitate the use of the function"
        }
      }
    },
    "ProfilePictureUpload" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfilePictureUploadBody"
        }
      },
      "description" : "ProfilePictureUpload",
      "example" : {
        "header" : { },
        "body" : {
          "uploadId" : "IM1907902062",
          "fileUpload" : "UploadCheck"
        }
      }
    },
    "ProfilePictureUploadBody" : {
      "type" : "object",
      "properties" : {
        "uploadId" : {
          "type" : "string",
          "description" : "The unique identifier of the uploaded file"
        },
        "fileUpload" : {
          "type" : "string",
          "description" : "Uses a file browser to locate and display the file. "
        }
      }
    },
    "ProfilePictureUploadResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfilePictureUploadResponseBody"
        }
      },
      "description" : "ProfilePictureUploadResponse"
    },
    "ProfilePictureUploadResponseBody" : {
      "type" : "object",
      "properties" : {
        "uploadId" : {
          "type" : "string",
          "description" : "The unique identifier of the uploaded file"
        },
        "fileUpload" : {
          "type" : "string",
          "description" : "Uses a file browser to locate and display the file. "
        }
      }
    },
    "ProfilePictureUpload1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfilePictureUpload1Body"
        }
      },
      "description" : "ProfilePictureUpload1"
    },
    "ProfilePictureUpload1Body" : {
      "type" : "object",
      "properties" : {
        "uploadId" : {
          "type" : "string",
          "description" : "The unique identifier of the uploaded file"
        },
        "fileUpload" : {
          "type" : "string",
          "description" : "Uses a file browser to locate and display the file. "
        }
      }
    },
    "ProfilePictureUploadResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfilePictureUploadResponse1Body"
        }
      },
      "description" : "ProfilePictureUploadResponse1"
    },
    "ProfilePictureUploadResponse1Body" : {
      "type" : "object",
      "properties" : {
        "uploadId" : {
          "type" : "string",
          "description" : "The unique identifier of the uploaded file"
        },
        "fileUpload" : {
          "type" : "string",
          "description" : "Uses a file browser to locate and display the file. "
        }
      }
    },
    "ProfilePictureUploadResponse2" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfilePictureUploadResponse2Body"
        }
      },
      "description" : "ProfilePictureUploadResponse2"
    },
    "ProfilePictureUploadResponse2Body" : {
      "type" : "object",
      "properties" : {
        "uploadId" : {
          "type" : "string",
          "description" : "The unique identifier of the uploaded file"
        },
        "fileUpload" : {
          "type" : "string",
          "description" : "Uses a file browser to locate and display the file. "
        }
      }
    },
    "SecureMessagesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SecureMessagesResponseBody"
        }
      },
      "description" : "SecureMessagesResponse"
    },
    "SecureMessagesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "messages" : {
            "type" : "array",
            "description" : "Specifies the record ID of parent message. ",
            "items" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "description" : "The actual t24 error message ",
                  "maxLength" : 80
                }
              }
            }
          },
          "messageStatus" : {
            "type" : "string",
            "description" : "Status of the message",
            "maxLength" : 35
          },
          "messageId" : {
            "type" : "string",
            "description" : "The holds the record key of the message ID.",
            "maxLength" : 35
          },
          "subject" : {
            "type" : "string",
            "description" : "The subject of the message to be sent or received.",
            "maxLength" : 80
          },
          "dateSent" : {
            "type" : "string",
            "format" : "date",
            "description" : "The date when the message is sent."
          },
          "sentAt" : {
            "type" : "string",
            "description" : "The time on which the message was sent.",
            "maxLength" : 35
          },
          "fromDepartmentId" : {
            "type" : "string",
            "description" : "The identifier of the originating department",
            "maxLength" : 35
          },
          "fromDepartmentName" : {
            "type" : "string",
            "description" : "The Account Officer in the department account officer table department account officer tab",
            "maxLength" : 35
          },
          "parentMessageId" : {
            "type" : "string",
            "description" : "Identifier of the parent message.",
            "maxLength" : 35
          },
          "toDepartmentId" : {
            "type" : "string",
            "description" : "The unique department identifier, to which the message is to be sent.",
            "maxLength" : 35
          },
          "toDepartmentName" : {
            "type" : "string",
            "description" : "The department name, to which the message is to be sent",
            "maxLength" : 35
          },
          "toCustomerId" : {
            "type" : "string",
            "description" : "The unique customer identifier of the Payee, to whom the payment message is to be sent",
            "maxLength" : 10
          },
          "fromCustomerId" : {
            "type" : "string",
            "description" : "The Customer ID from which the message is triggered.",
            "maxLength" : 10
          },
          "uploadId" : {
            "type" : "string",
            "description" : "The unique identifier of the uploaded file",
            "maxLength" : 12
          },
          "uploadPath" : {
            "type" : "string",
            "description" : "The directory path to which the file is uploaded",
            "maxLength" : 50
          }
        }
      }
    },
    "SecureMessageResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SecureMessageResponseBody"
        }
      },
      "description" : "SecureMessageResponse"
    },
    "SecureMessageResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "messages" : {
            "type" : "array",
            "description" : "Specifies the record ID of parent message. ",
            "items" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "description" : "The actual t24 error message ",
                  "maxLength" : 80
                }
              }
            }
          },
          "messageId" : {
            "type" : "string",
            "description" : "The holds the record key of the message ID.",
            "maxLength" : 35
          }
        }
      }
    },
    "SecureMessage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SecureMessageBody"
        }
      },
      "description" : "SecureMessage",
      "example" : {
        "header" : { },
        "body" : {
          "messageStatus" : "READ",
          "subject" : "Request a cheque book",
          "messages" : [ {
            "message" : "YYYYYYYYYYYY"
          } ],
          "toDepartmentId" : "26"
        }
      }
    },
    "SecureMessageBody" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "type" : "array",
          "description" : "Specifies the record ID of parent message. ",
          "items" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              }
            }
          }
        },
        "subject" : {
          "type" : "string",
          "description" : "The subject of the message to be sent or received."
        },
        "parentMessageId" : {
          "type" : "string",
          "description" : "Identifier of the parent message."
        },
        "fromCustomerId" : {
          "type" : "string",
          "description" : "The Customer ID from which the message is triggered."
        },
        "messageStatus" : {
          "type" : "string",
          "description" : "Status of the message"
        },
        "toDepartmentId" : {
          "type" : "string",
          "description" : "The unique department identifier, to which the message is to be sent."
        },
        "uploadId" : {
          "type" : "string",
          "description" : "The unique identifier of the uploaded file"
        },
        "uploadPath" : {
          "type" : "string",
          "description" : "The directory path to which the file is uploaded"
        }
      }
    },
    "SecureMessageResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SecureMessageResponse1Body"
        }
      },
      "description" : "SecureMessageResponse1"
    },
    "SecureMessageResponse1Body" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "type" : "array",
          "description" : "Specifies the record ID of parent message. ",
          "items" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "The actual t24 error message "
              }
            }
          }
        },
        "subject" : {
          "type" : "string",
          "description" : "The subject of the message to be sent or received."
        },
        "parentMessageId" : {
          "type" : "string",
          "description" : "Identifier of the parent message."
        },
        "fromCustomerId" : {
          "type" : "string",
          "description" : "The Customer ID from which the message is triggered."
        },
        "messageStatus" : {
          "type" : "string",
          "description" : "Status of the message"
        },
        "toDepartmentId" : {
          "type" : "string",
          "description" : "The unique department identifier, to which the message is to be sent."
        },
        "uploadId" : {
          "type" : "string",
          "description" : "The unique identifier of the uploaded file"
        },
        "uploadPath" : {
          "type" : "string",
          "description" : "The directory path to which the file is uploaded"
        }
      }
    },
    "CustomerBeneficiaryResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerBeneficiaryResponseBody"
        }
      },
      "description" : "CustomerBeneficiaryResponse"
    },
    "CustomerBeneficiaryResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "beneficiaryId" : {
            "type" : "string",
            "description" : "Indicates the Id of beneficiary when beneficiary details are stored",
            "maxLength" : 17
          },
          "nickName" : {
            "type" : "string",
            "description" : "Nickname of the beneficiary",
            "maxLength" : 35
          },
          "categoryId" : {
            "type" : "string",
            "description" : "Unique identifier associated with the product name of the account or contract. For example: For customer/counterparty accounts, the identifier would be in the range 1000 to 9999. For ledger accounts, in the range 10000 to 19999.",
            "maxLength" : 35
          },
          "beneficiaryAccountId" : {
            "type" : "string",
            "description" : "Unique account identifier of the beneficiary account number.",
            "maxLength" : 34
          },
          "beneficiaryCustomerId" : {
            "type" : "string",
            "description" : "Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank.",
            "maxLength" : 35
          },
          "transactionName" : {
            "type" : "string",
            "description" : "The transaction description",
            "maxLength" : 4
          },
          "bankSortCode" : {
            "type" : "string",
            "description" : "The sort code or the national clearing code of the beneficiary bank. ",
            "maxLength" : 20
          },
          "BIC" : {
            "type" : "string",
            "description" : "The BIC code of the Beneficiary bank",
            "maxLength" : 35
          },
          "IBAN" : {
            "type" : "string",
            "description" : "International Bank Account number, an identifier of the account. E.g. GB29 NWBK 6016 1331 9268 19",
            "maxLength" : 35
          },
          "linkBeneficiaryId" : {
            "type" : "string",
            "description" : "The identifier of a beneficiary (defined by the institution) being linked to a customer-defined beneficiary",
            "maxLength" : 35
          },
          "customerReference" : {
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment",
            "maxLength" : 35
          },
          "accountWithBank" : {
            "type" : "string",
            "description" : "Identifies the bank where the beneficiary maintains his account",
            "maxLength" : 35
          },
          "paymentCurrencyId" : {
            "type" : "string",
            "description" : "The currency of payment.",
            "maxLength" : 3
          },
          "preferredPaymentAmount" : {
            "type" : "number",
            "description" : "Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. "
          },
          "ourCharges" : {
            "type" : "string",
            "description" : "The charge borne by the bank for providing a financial service. Possible values: -BEN -OUR -SHA",
            "maxLength" : 35
          },
          "paymentCountry" : {
            "type" : "string",
            "description" : "The country to which a payment is sent, usually where the beneficiary resides",
            "maxLength" : 35
          }
        }
      }
    },
    "OverdueSettlementsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OverdueSettlementsResponseBody"
        }
      },
      "description" : "OverdueSettlementsResponse"
    },
    "OverdueSettlementsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "broker" : {
            "type" : "array",
            "description" : "Specifies the counterparty with whom the trade is to be effected.",
            "items" : {
              "type" : "object",
              "properties" : {
                "brokerId" : {
                  "type" : "string",
                  "description" : "The identifier of the broker",
                  "maxLength" : 10
                },
                "brokerName" : {
                  "type" : "string",
                  "description" : "The name that is displayed for the broker",
                  "maxLength" : 10
                },
                "nostro" : {
                  "type" : "string",
                  "description" : "Nostro account id"
                },
                "nostroCurrency" : {
                  "type" : "string",
                  "description" : "Currency of the nostro account"
                },
                "brokerOutstandingAmount" : {
                  "type" : "number",
                  "description" : "The amount outstanding for the broker"
                },
                "brokerOutstandingQuantity" : {
                  "type" : "string",
                  "description" : "The quantity of the instrument outstanding for the broker",
                  "maxLength" : 19
                }
              }
            }
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Unique transaction identifier for retrieving the details of the transaction. For example: FT0102030333 etc.",
            "maxLength" : 97
          },
          "instrumentId" : {
            "type" : "string",
            "description" : "The identifier of the instrument",
            "maxLength" : 12
          },
          "instrumentName" : {
            "type" : "string",
            "description" : "The name that is displayed for the instrument, taken from the Security Master"
          },
          "depository" : {
            "type" : "string",
            "description" : "Person designated as depository by the company in or pursuant to this Indenture, and, unless otherwise provided with respect to any security, any successor to such person",
            "maxLength" : 10
          },
          "depositoryName" : {
            "type" : "string",
            "description" : "The name that is displayed for the depository"
          },
          "tradeDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Standard date field which records trade date of the account"
          },
          "valueDate" : {
            "type" : "string",
            "format" : "date",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
          },
          "tradeCurrency" : {
            "type" : "string",
            "description" : "The trade currency is the settlement currency for the trade",
            "maxLength" : 3
          },
          "quantity" : {
            "type" : "string",
            "description" : "The nominal quantity",
            "maxLength" : 19
          },
          "portfolioId" : {
            "type" : "string",
            "description" : "Id of the portfolio or security account",
            "maxLength" : 18
          },
          "portfolioName" : {
            "type" : "string",
            "description" : "The name that is displayed for the portfolio",
            "maxLength" : 10
          },
          "accountCurrency" : {
            "type" : "string",
            "description" : "Currency of the account. For example: USD, GBP.",
            "maxLength" : 3
          },
          "customerOutstandingAmount" : {
            "type" : "number",
            "description" : "The amount outstanding from/to the customer"
          },
          "customerOutstandingQuantity" : {
            "type" : "string",
            "description" : "The quantity outstanding from/to the customer",
            "maxLength" : 19
          }
        }
      }
    },
    "DocumentandImage1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DocumentandImage1Body"
        }
      },
      "description" : "DocumentandImage1"
    },
    "DocumentandImage1Body" : {
      "type" : "object",
      "properties" : {
        "descriptions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Contains the description of purpose of the payment."
              }
            }
          }
        },
        "imageType" : {
          "type" : "string",
          "description" : "Indicates the internal classification of images - such as Photographs, Documents, Passports, etc..,"
        },
        "imageApplication" : {
          "type" : "string",
          "description" : "Indicates the domain name (technical identifier) the image/document is attached to. E.g., Customer, Payments, Loans, Deposits, etc..,"
        },
        "companyMnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch related to the image record"
        },
        "imageReference" : {
          "type" : "string",
          "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to"
        },
        "displayName" : {
          "type" : "string",
          "description" : "Contains the name used for display or enrichment purposes"
        },
        "multiMediaType" : {
          "type" : "string",
          "description" : "Different types of multimedia that has been used in the advertisement"
        },
        "imagePath" : {
          "type" : "string",
          "description" : "Identifies the image stored on the file system, specifically based on the logo url mentioned in open banking directory."
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes to facilitate the use of the function"
        }
      }
    },
    "DocumentandImageResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DocumentandImageResponse1Body"
        }
      },
      "description" : "DocumentandImageResponse1"
    },
    "DocumentandImageResponse1Body" : {
      "type" : "object",
      "properties" : {
        "descriptions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Contains the description of purpose of the payment."
              }
            }
          }
        },
        "imageType" : {
          "type" : "string",
          "description" : "Indicates the internal classification of images - such as Photographs, Documents, Passports, etc..,"
        },
        "imageApplication" : {
          "type" : "string",
          "description" : "Indicates the domain name (technical identifier) the image/document is attached to. E.g., Customer, Payments, Loans, Deposits, etc..,"
        },
        "companyMnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch related to the image record"
        },
        "imageReference" : {
          "type" : "string",
          "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to"
        },
        "displayName" : {
          "type" : "string",
          "description" : "Contains the name used for display or enrichment purposes"
        },
        "multiMediaType" : {
          "type" : "string",
          "description" : "Different types of multimedia that has been used in the advertisement"
        },
        "imagePath" : {
          "type" : "string",
          "description" : "Identifies the image stored on the file system, specifically based on the logo url mentioned in open banking directory."
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes to facilitate the use of the function"
        }
      }
    },
    "DocumentandImageResponse2" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DocumentandImageResponse2Body"
        }
      },
      "description" : "DocumentandImageResponse2"
    },
    "DocumentandImageResponse2Body" : {
      "type" : "object",
      "properties" : {
        "descriptions" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Contains the description of purpose of the payment."
              }
            }
          }
        },
        "imageType" : {
          "type" : "string",
          "description" : "Indicates the internal classification of images - such as Photographs, Documents, Passports, etc..,"
        },
        "imageApplication" : {
          "type" : "string",
          "description" : "Indicates the domain name (technical identifier) the image/document is attached to. E.g., Customer, Payments, Loans, Deposits, etc..,"
        },
        "companyMnemonic" : {
          "type" : "string",
          "description" : "Shortcut code for referring an Entity/Company/Branch related to the image record"
        },
        "imageReference" : {
          "type" : "string",
          "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to"
        },
        "displayName" : {
          "type" : "string",
          "description" : "Contains the name used for display or enrichment purposes"
        },
        "multiMediaType" : {
          "type" : "string",
          "description" : "Different types of multimedia that has been used in the advertisement"
        },
        "imagePath" : {
          "type" : "string",
          "description" : "Identifies the image stored on the file system, specifically based on the logo url mentioned in open banking directory."
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes to facilitate the use of the function"
        }
      }
    },
    "DocumentandImagesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DocumentandImagesResponseBody"
        }
      },
      "description" : "DocumentandImagesResponse"
    },
    "DocumentandImagesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "imageId" : {
            "type" : "string",
            "description" : "A system generated unique identifier for the image record",
            "maxLength" : 12
          },
          "imageType" : {
            "type" : "string",
            "description" : "Indicates the internal classification of images - such as Photographs, Documents, Passports, etc..,",
            "maxLength" : 15
          },
          "imageApplication" : {
            "type" : "string",
            "description" : "Indicates the domain name (technical identifier) the image/document is attached to. E.g., Customer, Payments, Loans, Deposits, etc..,",
            "maxLength" : 40
          },
          "companyMnemonic" : {
            "type" : "string",
            "description" : "Shortcut code for referring an Entity/Company/Branch related to the image record",
            "maxLength" : 3
          },
          "imageReference" : {
            "type" : "string",
            "description" : "Indicates the reference no. E.g. contract no./customer no./payments no. to which the image/document is attached to",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "fileName" : {
            "type" : "string",
            "description" : "Identifies the type of methods to be listed. Possible values are FX.DEAL.METHOD, BROKER or blank.",
            "maxLength" : 50
          },
          "imagePath" : {
            "type" : "string",
            "description" : "Identifies the image stored on the file system, specifically based on the logo url mentioned in open banking directory.",
            "maxLength" : 15
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          }
        }
      }
    },
    "AlertRequestsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AlertRequestsResponseBody"
        }
      },
      "description" : "AlertRequestsResponse"
    },
    "AlertRequestsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "array",
            "description" : "Input is the� valid field name for the metrics evaluation of alerts",
            "items" : {
              "type" : "object",
              "properties" : {
                "fieldDisplayName" : {
                  "type" : "string",
                  "description" : "Contains the name of the display for enrichment purposes",
                  "maxLength" : 50
                },
                "operand" : {
                  "type" : "string",
                  "description" : "This field along with fieldName and value, defines the conditions for the alert to be triggered.",
                  "maxLength" : 35
                },
                "value" : {
                  "type" : "string",
                  "description" : "The value of the field on which the Alert criteria is based",
                  "maxLength" : 35
                }
              }
            }
          },
          "alertRequestId" : {
            "type" : "string",
            "description" : "The unique identifier of the alert request.",
            "maxLength" : 35
          },
          "contractReference" : {
            "type" : "string",
            "description" : "Contains the contract reference",
            "maxLength" : 35
          },
          "displayName" : {
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes",
            "maxLength" : 35
          },
          "eventId" : {
            "type" : "string",
            "description" : "Event identifier",
            "maxLength" : 35
          },
          "messageGroupId" : {
            "type" : "string",
            "description" : "Contains the starting message id of the conversation",
            "maxLength" : 35
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          }
        }
      }
    },
    "OpenBankingConnection" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnectionBody"
        }
      },
      "description" : "OpenBankingConnection"
    },
    "OpenBankingConnectionBody" : {
      "type" : "object",
      "properties" : {
        "otherBankConsentTypes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherBankConsentType" : {
                "type" : "string",
                "description" : "Contains the different consent types in other banks"
              }
            }
          }
        },
        "consents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "consentType" : {
                "type" : "string",
                "description" : "Consent Type for which the consent is given"
              },
              "consentStartAt" : {
                "type" : "string",
                "description" : "Time at which the consent starts"
              },
              "consentExpiryAt" : {
                "type" : "string",
                "description" : "Time at which the consent expires"
              }
            }
          }
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "bankId" : {
          "type" : "string",
          "description" : "Contains the identifier of the bank with which the transaction is performed"
        },
        "bankName" : {
          "type" : "string",
          "description" : "The name of the bank being referred to."
        },
        "bankCode" : {
          "type" : "string",
          "description" : "Contains the code of the bank with which the transaction is performed"
        },
        "countryId" : {
          "type" : "string",
          "description" : "ISO country code of the financial institution. "
        },
        "obcpId" : {
          "type" : "string",
          "description" : "Denotes the  consent period identifier of the other bank"
        },
        "obcpConnectionId" : {
          "type" : "string",
          "description" : "Denotes the  consent period connection identifier of the other bank"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "latestToken" : {
          "type" : "string",
          "description" : "Contains the latest token of the ongoing transaction"
        },
        "latestRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the latest redirected URL of the ongoing transaction"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "obcpToken" : {
          "type" : "string",
          "description" : "Contains the consent period token of the other banks"
        },
        "obcpRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the consent period redirected URL of the other banks"
        },
        "otherBankConsentPeriodDays" : {
          "type" : "string",
          "description" : "Contains the number of days in the consent period of the other banks "
        },
        "otherBankConsentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period starts"
        },
        "otherBankConsentExpiresAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period expires"
        },
        "consentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which at which the Consent was given"
        },
        "termsAccepted" : {
          "type" : "string",
          "description" : "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
        }
      }
    },
    "OpenBankingConnectionResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnectionResponseBody"
        }
      },
      "description" : "OpenBankingConnectionResponse"
    },
    "OpenBankingConnectionResponseBody" : {
      "type" : "object",
      "properties" : {
        "otherBankConsentTypes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherBankConsentType" : {
                "type" : "string",
                "description" : "Contains the different consent types in other banks"
              }
            }
          }
        },
        "consents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "consentType" : {
                "type" : "string",
                "description" : "Consent Type for which the consent is given"
              },
              "consentStartAt" : {
                "type" : "string",
                "description" : "Time at which the consent starts"
              },
              "consentExpiryAt" : {
                "type" : "string",
                "description" : "Time at which the consent expires"
              }
            }
          }
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "bankId" : {
          "type" : "string",
          "description" : "Contains the identifier of the bank with which the transaction is performed"
        },
        "bankName" : {
          "type" : "string",
          "description" : "The name of the bank being referred to."
        },
        "bankCode" : {
          "type" : "string",
          "description" : "Contains the code of the bank with which the transaction is performed"
        },
        "countryId" : {
          "type" : "string",
          "description" : "ISO country code of the financial institution. "
        },
        "obcpId" : {
          "type" : "string",
          "description" : "Denotes the  consent period identifier of the other bank"
        },
        "obcpConnectionId" : {
          "type" : "string",
          "description" : "Denotes the  consent period connection identifier of the other bank"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "latestToken" : {
          "type" : "string",
          "description" : "Contains the latest token of the ongoing transaction"
        },
        "latestRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the latest redirected URL of the ongoing transaction"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "obcpToken" : {
          "type" : "string",
          "description" : "Contains the consent period token of the other banks"
        },
        "obcpRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the consent period redirected URL of the other banks"
        },
        "otherBankConsentPeriodDays" : {
          "type" : "string",
          "description" : "Contains the number of days in the consent period of the other banks "
        },
        "otherBankConsentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period starts"
        },
        "otherBankConsentExpiresAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period expires"
        },
        "consentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which at which the Consent was given"
        },
        "termsAccepted" : {
          "type" : "string",
          "description" : "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
        }
      }
    },
    "OpenBankingConnection1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnection1Body"
        }
      },
      "description" : "OpenBankingConnection1"
    },
    "OpenBankingConnection1Body" : {
      "type" : "object",
      "properties" : {
        "otherBankConsentTypes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherBankConsentType" : {
                "type" : "string",
                "description" : "Contains the different consent types in other banks"
              }
            }
          }
        },
        "consents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "consentType" : {
                "type" : "string",
                "description" : "Consent Type for which the consent is given"
              },
              "consentStartAt" : {
                "type" : "string",
                "description" : "Time at which the consent starts"
              },
              "consentExpiryAt" : {
                "type" : "string",
                "description" : "Time at which the consent expires"
              }
            }
          }
        },
        "obcp" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementId" : {
                "type" : "string",
                "description" : "Indicates an unique identifier of an account"
              },
              "obcpAccountId" : {
                "type" : "string",
                "description" : "Denotes the Account Id of Other Banks Consent Period."
              },
              "obcpStatus" : {
                "type" : "string",
                "description" : "Contains the status of the  consent period in other banks"
              },
              "balancesLastUpdated" : {
                "type" : "string",
                "description" : "Contains the last updated balances details"
              },
              "transactionsLastUpdated" : {
                "type" : "string",
                "description" : "Contains the list of last updated transactions"
              }
            }
          }
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "bankId" : {
          "type" : "string",
          "description" : "Contains the identifier of the bank with which the transaction is performed"
        },
        "bankCode" : {
          "type" : "string",
          "description" : "Contains the code of the bank with which the transaction is performed"
        },
        "bankName" : {
          "type" : "string",
          "description" : "The name of the bank being referred to."
        },
        "countryId" : {
          "type" : "string",
          "description" : "ISO country code of the financial institution. "
        },
        "obcpId" : {
          "type" : "string",
          "description" : "Denotes the  consent period identifier of the other bank"
        },
        "obcpConnectionId" : {
          "type" : "string",
          "description" : "Denotes the  consent period connection identifier of the other bank"
        },
        "obcpBankId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the other bank"
        },
        "obcpCustomerId" : {
          "type" : "string",
          "description" : "Contains the identifier of the customer in other bank"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "latestToken" : {
          "type" : "string",
          "description" : "Contains the latest token of the ongoing transaction"
        },
        "latestRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the latest redirected URL of the ongoing transaction"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "obcpToken" : {
          "type" : "string",
          "description" : "Contains the consent period token of the other banks"
        },
        "obcpRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the consent period redirected URL of the other banks"
        },
        "createdAt" : {
          "type" : "string",
          "description" : "Contains the time at which the arrangement was created"
        },
        "updatedAt" : {
          "type" : "string",
          "description" : "Contains the time at which the arrangement was updated"
        },
        "lastSuccessAt" : {
          "type" : "string",
          "description" : "Contains the time of the latest success"
        },
        "otherBankConsentPeriodDays" : {
          "type" : "string",
          "description" : "Contains the number of days in the consent period of the other banks "
        },
        "otherBankConsentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period starts"
        },
        "otherBankConsentExpiresAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period expires"
        },
        "consentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which at which the Consent was given"
        },
        "channelId" : {
          "type" : "string",
          "description" : "Id of the (digital) channel"
        },
        "termsAccepted" : {
          "type" : "string",
          "description" : "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
        }
      }
    },
    "OpenBankingConnectionResponse1" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnectionResponse1Body"
        }
      },
      "description" : "OpenBankingConnectionResponse1"
    },
    "OpenBankingConnectionResponse1Body" : {
      "type" : "object",
      "properties" : {
        "otherBankConsentTypes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherBankConsentType" : {
                "type" : "string",
                "description" : "Contains the different consent types in other banks"
              }
            }
          }
        },
        "consents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "consentType" : {
                "type" : "string",
                "description" : "Consent Type for which the consent is given"
              },
              "consentStartAt" : {
                "type" : "string",
                "description" : "Time at which the consent starts"
              },
              "consentExpiryAt" : {
                "type" : "string",
                "description" : "Time at which the consent expires"
              }
            }
          }
        },
        "obcp" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "arrangementId" : {
                "type" : "string",
                "description" : "Indicates an unique identifier of an account"
              },
              "obcpAccountId" : {
                "type" : "string",
                "description" : "Denotes the Account Id of Other Banks Consent Period."
              },
              "obcpStatus" : {
                "type" : "string",
                "description" : "Contains the status of the  consent period in other banks"
              },
              "balancesLastUpdated" : {
                "type" : "string",
                "description" : "Contains the last updated balances details"
              },
              "transactionsLastUpdated" : {
                "type" : "string",
                "description" : "Contains the list of last updated transactions"
              }
            }
          }
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "bankId" : {
          "type" : "string",
          "description" : "Contains the identifier of the bank with which the transaction is performed"
        },
        "bankCode" : {
          "type" : "string",
          "description" : "Contains the code of the bank with which the transaction is performed"
        },
        "bankName" : {
          "type" : "string",
          "description" : "The name of the bank being referred to."
        },
        "countryId" : {
          "type" : "string",
          "description" : "ISO country code of the financial institution. "
        },
        "obcpId" : {
          "type" : "string",
          "description" : "Denotes the  consent period identifier of the other bank"
        },
        "obcpConnectionId" : {
          "type" : "string",
          "description" : "Denotes the  consent period connection identifier of the other bank"
        },
        "obcpBankId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the other bank"
        },
        "obcpCustomerId" : {
          "type" : "string",
          "description" : "Contains the identifier of the customer in other bank"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "latestToken" : {
          "type" : "string",
          "description" : "Contains the latest token of the ongoing transaction"
        },
        "latestRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the latest redirected URL of the ongoing transaction"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "obcpToken" : {
          "type" : "string",
          "description" : "Contains the consent period token of the other banks"
        },
        "obcpRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the consent period redirected URL of the other banks"
        },
        "createdAt" : {
          "type" : "string",
          "description" : "Contains the time at which the arrangement was created"
        },
        "updatedAt" : {
          "type" : "string",
          "description" : "Contains the time at which the arrangement was updated"
        },
        "lastSuccessAt" : {
          "type" : "string",
          "description" : "Contains the time of the latest success"
        },
        "otherBankConsentPeriodDays" : {
          "type" : "string",
          "description" : "Contains the number of days in the consent period of the other banks "
        },
        "otherBankConsentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period starts"
        },
        "otherBankConsentExpiresAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period expires"
        },
        "consentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which at which the Consent was given"
        },
        "channelId" : {
          "type" : "string",
          "description" : "Id of the (digital) channel"
        },
        "termsAccepted" : {
          "type" : "string",
          "description" : "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
        }
      }
    },
    "OpenBankingConnection2" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnection2Body"
        }
      },
      "description" : "OpenBankingConnection2"
    },
    "OpenBankingConnection2Body" : {
      "type" : "object",
      "properties" : {
        "otherBankConsentTypes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherBankConsentType" : {
                "type" : "string",
                "description" : "Contains the different consent types in other banks"
              }
            }
          }
        },
        "consents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "consentType" : {
                "type" : "string",
                "description" : "Consent Type for which the consent is given"
              },
              "consentStartAt" : {
                "type" : "string",
                "description" : "Time at which the consent starts"
              },
              "consentExpiryAt" : {
                "type" : "string",
                "description" : "Time at which the consent expires"
              }
            }
          }
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "bankId" : {
          "type" : "string",
          "description" : "Contains the identifier of the bank with which the transaction is performed"
        },
        "bankName" : {
          "type" : "string",
          "description" : "The name of the bank being referred to."
        },
        "bankCode" : {
          "type" : "string",
          "description" : "Contains the code of the bank with which the transaction is performed"
        },
        "countryId" : {
          "type" : "string",
          "description" : "ISO country code of the financial institution. "
        },
        "obcpId" : {
          "type" : "string",
          "description" : "Denotes the  consent period identifier of the other bank"
        },
        "obcpConnectionId" : {
          "type" : "string",
          "description" : "Denotes the  consent period connection identifier of the other bank"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "latestToken" : {
          "type" : "string",
          "description" : "Contains the latest token of the ongoing transaction"
        },
        "latestRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the latest redirected URL of the ongoing transaction"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "obcpToken" : {
          "type" : "string",
          "description" : "Contains the consent period token of the other banks"
        },
        "obcpRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the consent period redirected URL of the other banks"
        },
        "otherBankConsentPeriodDays" : {
          "type" : "string",
          "description" : "Contains the number of days in the consent period of the other banks "
        },
        "otherBankConsentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period starts"
        },
        "otherBankConsentExpiresAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period expires"
        },
        "consentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which at which the Consent was given"
        },
        "termsAccepted" : {
          "type" : "string",
          "description" : "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
        }
      }
    },
    "OpenBankingConnectionResponse2" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnectionResponse2Body"
        }
      },
      "description" : "OpenBankingConnectionResponse2"
    },
    "OpenBankingConnectionResponse2Body" : {
      "type" : "object",
      "properties" : {
        "otherBankConsentTypes" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "otherBankConsentType" : {
                "type" : "string",
                "description" : "Contains the different consent types in other banks"
              }
            }
          }
        },
        "consents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "consentType" : {
                "type" : "string",
                "description" : "Consent Type for which the consent is given"
              },
              "consentStartAt" : {
                "type" : "string",
                "description" : "Time at which the consent starts"
              },
              "consentExpiryAt" : {
                "type" : "string",
                "description" : "Time at which the consent expires"
              }
            }
          }
        },
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "bankId" : {
          "type" : "string",
          "description" : "Contains the identifier of the bank with which the transaction is performed"
        },
        "bankName" : {
          "type" : "string",
          "description" : "The name of the bank being referred to."
        },
        "bankCode" : {
          "type" : "string",
          "description" : "Contains the code of the bank with which the transaction is performed"
        },
        "countryId" : {
          "type" : "string",
          "description" : "ISO country code of the financial institution. "
        },
        "obcpId" : {
          "type" : "string",
          "description" : "Denotes the  consent period identifier of the other bank"
        },
        "obcpConnectionId" : {
          "type" : "string",
          "description" : "Denotes the  consent period connection identifier of the other bank"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "latestToken" : {
          "type" : "string",
          "description" : "Contains the latest token of the ongoing transaction"
        },
        "latestRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the latest redirected URL of the ongoing transaction"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "obcpToken" : {
          "type" : "string",
          "description" : "Contains the consent period token of the other banks"
        },
        "obcpRedirectUrl" : {
          "type" : "string",
          "description" : "Contains the consent period redirected URL of the other banks"
        },
        "otherBankConsentPeriodDays" : {
          "type" : "string",
          "description" : "Contains the number of days in the consent period of the other banks "
        },
        "otherBankConsentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period starts"
        },
        "otherBankConsentExpiresAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which the other banks consent period expires"
        },
        "consentGivenAt" : {
          "type" : "string",
          "description" : "Contains the date/time at which at which the Consent was given"
        },
        "termsAccepted" : {
          "type" : "string",
          "description" : "Defines whether the user has accepted the Terms and Conditions first displayed when the user logs in to the system for the very first time."
        }
      }
    },
    "OpenBankingConnection3" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnection3Body"
        }
      },
      "description" : "OpenBankingConnection3"
    },
    "OpenBankingConnection3Body" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "updatedAt" : {
          "type" : "string",
          "description" : "Contains the time at which the arrangement was updated"
        }
      }
    },
    "OpenBankingConnectionResponse3" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/ScreenHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OpenBankingConnectionResponse3Body"
        }
      },
      "description" : "OpenBankingConnectionResponse3"
    },
    "OpenBankingConnectionResponse3Body" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string",
          "description" : "Identifier of the customer"
        },
        "defaultConsentArrangementId" : {
          "type" : "string",
          "description" : "Denotes the identifier of the default consent arrangement"
        },
        "connectionStatus" : {
          "type" : "string",
          "description" : "Contains the connection status of the transaction"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "Contains the sub status of the transaction"
        },
        "currentState" : {
          "type" : "string",
          "description" : "Contains the current state of the transaction"
        },
        "updatedAt" : {
          "type" : "string",
          "description" : "Contains the time at which the arrangement was updated"
        }
      }
    },
    "ThirdPartyProviderConsentsResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ThirdPartyProviderConsentsResponseBody"
        }
      },
      "description" : "ThirdPartyProviderConsentsResponse"
    },
    "ThirdPartyProviderConsentsResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "otherBankConsentTypes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "otherBankConsentType" : {
                  "type" : "string",
                  "description" : "Contains the different consent types in other banks",
                  "maxLength" : 65
                }
              }
            }
          },
          "consents" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "consentType" : {
                  "type" : "string",
                  "description" : "Consent Type for which the consent is given",
                  "maxLength" : 65
                },
                "consentGivenAt" : {
                  "type" : "string",
                  "description" : "Contains the date/time at which at which the Consent was given",
                  "maxLength" : 65
                },
                "consentStartsAt" : {
                  "type" : "string",
                  "maxLength" : 65
                },
                "consentExpiryAt" : {
                  "type" : "string",
                  "description" : "Time at which the consent expires",
                  "maxLength" : 65
                }
              }
            }
          },
          "obcp" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "arrangementId" : {
                  "type" : "string",
                  "description" : "Indicates an unique identifier of an account",
                  "maxLength" : 65
                },
                "obcpAccountId" : {
                  "type" : "string",
                  "description" : "Denotes the Account Id of Other Banks Consent Period.",
                  "maxLength" : 65
                },
                "obcpStatus" : {
                  "type" : "string",
                  "description" : "Contains the status of the  consent period in other banks",
                  "maxLength" : 35
                },
                "balancesLastUpdated" : {
                  "type" : "string",
                  "description" : "Contains the last updated balances details",
                  "maxLength" : 65
                },
                "transactionsLastUpdated" : {
                  "type" : "string",
                  "description" : "Contains the list of last updated transactions",
                  "maxLength" : 65
                },
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "shortTitle" : {
                  "type" : "string",
                  "description" : "Short title given to the name of the arrangement"
                },
                "sortCode" : {
                  "type" : "string",
                  "description" : "Contains bank sort code or iban branch identifier for the account"
                }
              }
            }
          },
          "transactionNextPageIds" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "transactionNextPageId" : {
                  "type" : "string",
                  "description" : "Denotes the identifier of the next page in the transaction",
                  "maxLength" : 65
                }
              }
            }
          },
          "allTransactionsReceived" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "allTransactionReceived" : {
                  "type" : "string",
                  "maxLength" : 65
                }
              }
            }
          },
          "connectionId" : {
            "type" : "string",
            "description" : "Contains the id associated to the connect reference respective to a transaction of the account",
            "maxLength" : 35
          },
          "customerId" : {
            "type" : "string",
            "description" : "Identifier of the customer",
            "maxLength" : 65
          },
          "bankId" : {
            "type" : "string",
            "description" : "Contains the identifier of the bank with which the transaction is performed",
            "maxLength" : 65
          },
          "bankName" : {
            "type" : "string",
            "description" : "The name of the bank being referred to.",
            "maxLength" : 65
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 65
          },
          "obcpId" : {
            "type" : "string",
            "description" : "Denotes the  consent period identifier of the other bank",
            "maxLength" : 65
          },
          "obcpConnectionId" : {
            "type" : "string",
            "description" : "Denotes the  consent period connection identifier of the other bank",
            "maxLength" : 65
          },
          "obcpBankId" : {
            "type" : "string",
            "description" : "Denotes the identifier of the other bank",
            "maxLength" : 65
          },
          "obcpCustomerId" : {
            "type" : "string",
            "description" : "Contains the identifier of the customer in other bank",
            "maxLength" : 65
          },
          "connectionStatus" : {
            "type" : "string",
            "description" : "Contains the connection status of the transaction",
            "maxLength" : 35
          },
          "subStatus" : {
            "type" : "string",
            "description" : "Contains the sub status of the transaction",
            "maxLength" : 35
          },
          "currentState" : {
            "type" : "string",
            "description" : "Contains the current state of the transaction",
            "maxLength" : 65
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Contains the time at which the arrangement was created",
            "maxLength" : 65
          },
          "latestToken" : {
            "type" : "string",
            "description" : "Contains the latest token of the ongoing transaction",
            "maxLength" : 65
          },
          "latestRedirectUrl" : {
            "type" : "string",
            "description" : "Contains the latest redirected URL of the ongoing transaction",
            "maxLength" : 65
          },
          "defaultConsentArrangementId" : {
            "type" : "string",
            "description" : "Denotes the identifier of the default consent arrangement",
            "maxLength" : 65
          },
          "obcpToken" : {
            "type" : "string",
            "description" : "Contains the consent period token of the other banks",
            "maxLength" : 65
          },
          "obcpRedirectUrl" : {
            "type" : "string",
            "description" : "Contains the consent period redirected URL of the other banks",
            "maxLength" : 65
          },
          "otherBankConsentPeriodDays" : {
            "type" : "string",
            "description" : "Contains the number of days in the consent period of the other banks ",
            "maxLength" : 65
          },
          "otherBankConsentGivenAt" : {
            "type" : "string",
            "description" : "Contains the date/time at which the other banks consent period starts",
            "maxLength" : 65
          },
          "otherBankConsentExpiresAt" : {
            "type" : "string",
            "description" : "Contains the date/time at which the other banks consent period expires",
            "maxLength" : 65
          },
          "channelId" : {
            "type" : "string",
            "description" : "Id of the (digital) channel",
            "maxLength" : 70
          },
          "bankCode" : {
            "type" : "string",
            "description" : "Contains the code of the bank with which the transaction is performed",
            "maxLength" : 65
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record",
            "maxLength" : 4
          },
          "nextRefreshAvailableAt" : {
            "type" : "string",
            "description" : "Denotes the next refresh time",
            "maxLength" : 65
          }
        }
      }
    },
    "OtherBanksToConnectToResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/OtherBanksToConnectToResponseBody"
        }
      },
      "description" : "OtherBanksToConnectToResponse"
    },
    "OtherBanksToConnectToResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "paymentTemplates" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentTemplate" : {
                  "type" : "string",
                  "description" : "Contains the template used for payment transactions",
                  "maxLength" : 35
                }
              }
            }
          },
          "globalUrn" : {
            "type" : "string",
            "description" : "globalURNSpecifies the GLOBAL.URN reference of the TPP (third party provider). This will be retrieved from the request and should match a GLOBAL.URN from a record within the Open Banking Directory.",
            "maxLength" : 35
          },
          "bankId" : {
            "type" : "string",
            "description" : "Contains the identifier of the bank with which the transaction is performed"
          },
          "bankCode" : {
            "type" : "string",
            "description" : "Contains the code of the bank with which the transaction is performed"
          },
          "bankName" : {
            "type" : "string",
            "description" : "The name of the bank being referred to.",
            "maxLength" : 150
          },
          "logoURL" : {
            "type" : "string",
            "description" : "Contains the uniform resourcelocator of the logo",
            "maxLength" : 200
          },
          "countryId" : {
            "type" : "string",
            "description" : "ISO country code of the financial institution. ",
            "maxLength" : 35
          },
          "extSourceProvider" : {
            "type" : "string",
            "description" : "Contains the name of the external source provider for the customer",
            "maxLength" : 35
          }
        }
      }
    },
    "CustomerBeneficiariesResponse" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/QueryHeader"
        },
        "body" : {
          "$ref" : "#/definitions/CustomerBeneficiariesResponseBody"
        }
      },
      "description" : "CustomerBeneficiariesResponse"
    },
    "CustomerBeneficiariesResponseBody" : {
      "type" : "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "beneficiaries" : {
            "type" : "array",
            "description" : "Identifies the Beneficiary name and address of the Standing Order",
            "items" : {
              "type" : "object",
              "properties" : {
                "beneficiaryAccountId" : {
                  "type" : "string",
                  "description" : "Unique account identifier of the beneficiary account number."
                },
                "beneficiaryCustomerId" : {
                  "type" : "string",
                  "description" : "Identifies the Customer who is to be the ultimate receiver of the funds transferred by the sending bank when this Beneficiary is not a bank."
                },
                "beneficiaryBIC" : {
                  "type" : "string",
                  "description" : "BIC (Bank Identifier Code) of the beneficiary customer "
                },
                "beneficiaryIBAN" : {
                  "type" : "string",
                  "description" : "International Bank Account Number (IBAN) of the beneficiary account, required only for International transfers/payments outside the Bank. For example: GB98 MIDL07009312345678, FR7630006000011234567890189"
                },
                "beneficiaryNickName" : {
                  "type" : "string",
                  "description" : "Nickname of the beneficiary"
                },
                "beneficiaryCustomerNickName" : {
                  "type" : "string",
                  "description" : "Contains the nickname of the beneficiary Customer"
                },
                "beneficiaryOurCharges" : {
                  "type" : "string",
                  "description" : "Indicates the bearer of the charges. For example: BEN( All transaction charges are to be borne by the beneficiary customer.), OUR (All transaction charges are to be borne by the ordering customer.), SHA (Transaction charges on the Sender's side are to be borne by the ordering customer, transaction charges on the Receiver's side are to be borne by the beneficiary customer.)"
                }
              }
            }
          },
          "beneficiaryId" : {
            "type" : "string",
            "description" : "Indicates the Id of beneficiary when beneficiary details are stored"
          },
          "companyName" : {
            "type" : "string",
            "description" : "The company in which payment is processed"
          },
          "categoryId" : {
            "type" : "string",
            "description" : "Unique identifier associated with the product name of the account or contract. For example: For customer/counterparty accounts, the identifier would be in the range 1000 to 9999. For ledger accounts, in the range 10000 to 19999."
          },
          "transactionName" : {
            "type" : "string",
            "description" : "The transaction description"
          },
          "transactionType" : {
            "type" : "string",
            "description" : "Identifies the transaction type applicable to the transaction being processed, i.e. outward or inward payment. For example: ACPX, OTPX etc."
          },
          "bankSortCode" : {
            "type" : "string",
            "description" : "The sort code or the national clearing code of the beneficiary bank. "
          },
          "linkToBeneficiaryId" : {
            "type" : "string",
            "description" : "For a customer defined beneficiaries, it specifies the link to bank defined beneficiaries. "
          },
          "customerReference" : {
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment"
          },
          "comment" : {
            "type" : "string",
            "description" : "Comments added by the User"
          },
          "accountWithBank" : {
            "type" : "string",
            "description" : "Identifies the bank where the beneficiary maintains his account"
          },
          "paymentCurrencyId" : {
            "type" : "string",
            "description" : "The currency of payment."
          },
          "preferredPaymentAmount" : {
            "type" : "number",
            "description" : "Preferred payment amount can be specified for the beneficiary. If specified, it will be populated during payment processing. "
          },
          "paymentCountry" : {
            "type" : "string",
            "description" : "The country to which a payment is sent, usually where the beneficiary resides"
          },
          "preferredPaymentProductId" : {
            "type" : "string",
            "description" : "Denotes the identifier of the preferred payment product "
          },
          "accountWithBankSortCode" : {
            "type" : "string",
            "description" : "Bank sort code details with account"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record"
          }
        }
      }
    },
    "updateProfilePictureUpload" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfilePictureUploadBody"
        }
      },
      "description" : "ProfilePictureUpload",
      "example" : {
        "header" : { },
        "body" : {
          "uploadId" : "IM1907902062",
          "fileUpload" : "UploadCheck"
        }
      }
    },
    "createDocumentandImage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/DocumentandImageBody"
        }
      },
      "description" : "DocumentandImage",
      "example" : {
        "header" : { },
        "body" : {
          "imageApplication" : "CUSTOMER",
          "notes" : "NEW IMAGE",
          "displayName" : "Petero",
          "imageReference" : "190167",
          "multiMediaType" : "IMAGE",
          "descriptions" : [ {
            "description" : "Petero"
          } ],
          "imageType" : "PHOTOS"
        }
      }
    },
    "updateAdvert" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/AdvertBody"
        }
      },
      "description" : "Advert",
      "example" : {
        "header" : {
          "“audit”" : {
            "“versionNumber”" : "“3”"
          }
        },
        "body" : {
          "opportunityDirection" : "INBOUND",
          "startDate" : "2018-04-20",
          "opportunityStatus" : "ACCEPTED"
        }
      }
    },
    "createProfilePictureUpload" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/ProfilePictureUploadBody"
        }
      },
      "description" : "ProfilePictureUpload",
      "example" : {
        "header" : { },
        "body" : {
          "uploadId" : "IM1907902062",
          "fileUpload" : "UploadCheck"
        }
      }
    },
    "createSecureMessage" : {
      "properties" : {
        "header" : {
          "$ref" : "#/definitions/PayloadHeader"
        },
        "body" : {
          "$ref" : "#/definitions/SecureMessageBody"
        }
      },
      "description" : "SecureMessage",
      "example" : {
        "header" : { },
        "body" : {
          "messageStatus" : "READ",
          "subject" : "Request a cheque book",
          "messages" : [ {
            "message" : "YYYYYYYYYYYY"
          } ],
          "toDepartmentId" : "26"
        }
      }
    }
  }
}